{"version":3,"sources":["pages/Migrator/Other/index.jsx"],"names":["Migrator","useWeb3React","account","chainId","useState","fastUpdate","setFastUpdate","userSnap","setUserSnap","location","useLocation","coolDown","useRecoilValue","coolDownState","seconds","setSeconds","setCoolDown","useSetRecoilState","search","queryParams","URLSearchParams","get","toUpperCase","useEffect","snap","snapshot","filter","user_address","toLowerCase","length","snapShotMaker","tempChain","ChainId","userChain","validChains","getCorrectChains","pathname","currChain","indexOf","ETH","SyncChainId","setSyncChainId","migrateList","setMigrateList","reminded","parseInt","getCurrentTimeStamp","myInterval","setInterval","clearInterval","toggleId","id","active","token","index","deusIndex","tokens","to","findIndex","t","symbol","targetToken","onMigrate","useMigrate","handleMigrate","useCallback","a","tx","console","log","error","migratedList","useUserStatus","className","src","alt","currUnMigratedList","config","includes","from","balance","XXL","fontWeight","marginBottom","MD","margin","mb","opacity","maxWidth","width","map","key","align","currency","size","my","style","borderRadius","display","padding","backgroundColor","pb","title","validNetworks","bgColor","text","isPreApproved","isApproved","validNetwork","loading","swapLoading","handleApprove","handleSwap","amountIn","amountOut","mt","color"],"mappings":"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","file":"static/js/23.d05f00d8.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { Type } from '../../../components/App/Text';\nimport MultipleBox from '../../../components/App/Migrator/MultipleBox';\nimport MigrateChains from '../../../components/App/Migrator/MigrateChains';\nimport SwapAction from '../../../components/App/Migrator/SwapAction';\nimport { Image } from 'rebass/styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { useLocation } from 'react-router';\nimport { ChainId } from '../../../constant/web3';\nimport { getCorrectChains } from '../../../constant/correctChain';\nimport DeusV2Tokens from '../../../components/App/Migrator/DeusV2Tokens';\nimport MigrationTitle from '../../../components/App/Migrator/MigrationTitle';\nimport { RowBetween } from '../../../components/App/Row';\nimport { MainWrapper, MainDiv, Container, Line } from '../../../components/App/Migrator';\nimport { snapShotMaker } from '../../../constant/migration';\nimport snapshot from '../../../config/snapshot.json'\nimport { useMigrate, useUserStatus } from '../../../hooks/useMigrate';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { coolDownState } from '../../../store/dei';\nimport { getCurrentTimeStamp } from '../../../utils/utils';\n\nconst Migrator = () => {\n    const { account, chainId } = useWeb3React()\n    const [fastUpdate, setFastUpdate] = useState(0)\n    const [userSnap, setUserSnap] = useState([])\n    const location = useLocation()\n    const coolDown = useRecoilValue(coolDownState)\n    const [seconds, setSeconds] = useState(0)\n    const setCoolDown = useSetRecoilState(coolDownState)\n\n    const search = useLocation().search;\n    const queryParams = {\n        network: new URLSearchParams(search).get('network')?.toUpperCase(),\n    }\n\n    useEffect(() => {\n        if (account) {\n            const snap = snapshot.filter(snap => snap.user_address === account.toLowerCase())\n            if (snap.length > 0) {\n                setUserSnap(snapShotMaker(snap[0]))\n            } else {\n                setUserSnap([])\n            }\n        }\n    }, [account])\n\n    const tempChain = queryParams.network && ChainId[queryParams.network] ? ChainId[queryParams.network] : null\n    const userChain = tempChain ? tempChain : chainId\n    const validChains = getCorrectChains(location.pathname)\n    const currChain = userChain && validChains.indexOf(userChain) !== -1 ? userChain : ChainId.ETH\n    const [SyncChainId, setSyncChainId] = useState(currChain)\n    const [migrateList, setMigrateList] = useState({})\n\n    useEffect(() => {\n        setSyncChainId(currChain)\n    }, [currChain]);\n\n    useEffect(() => {\n        const reminded = parseInt(coolDown) - parseInt(getCurrentTimeStamp())\n        if (coolDown && reminded)\n            setSeconds(reminded)\n    }, [coolDown]);\n\n    useEffect(() => {\n        let myInterval = setInterval(() => {\n            if (seconds > 0) {\n                setSeconds(seconds - 1);\n            }\n            if (seconds === 0) {\n                setCoolDown(0)\n                clearInterval(myInterval)\n            }\n        }, 1000)\n        return () => {\n            clearInterval(myInterval);\n        };\n    }, [seconds, setCoolDown]);\n\n\n    const toggleId = (id, active, token, index) => {\n        if (active) {\n            delete migrateList[id]\n        } else {\n            const deusIndex = userSnap[id].tokens.to.findIndex(t => t.symbol === \"DEUS\")\n            migrateList[id] = {\n                targetToken: token ?? userSnap[id].tokens.to[deusIndex].symbol,\n                index: index !== null ? index + 1 : deusIndex + 1\n            }\n        }\n        setMigrateList({ ...migrateList })\n    }\n\n    const { onMigrate } = useMigrate(migrateList, SyncChainId, fastUpdate, true)\n\n    const handleMigrate = useCallback(async () => {\n        try {\n            const tx = await onMigrate()\n            console.log(tx);\n            setFastUpdate(fastUpdate => fastUpdate + 1)\n        } catch (e) {\n            console.error(e)\n        }\n    }, [onMigrate])\n\n    // Array of migrated id\n    const migratedList = useUserStatus(account)\n\n    if (account && !migratedList) {\n        return (<div className=\"loader-wrap\">\n            {<img className=\"loader\" src={process.env.PUBLIC_URL + \"/img/loading.png\"} alt=\"loader\" />}\n        </div>)\n    }\n\n    const currUnMigratedList = userSnap.filter(config => !migratedList?.includes(config.id) && config.tokens.from.filter(token => token.balance > 0).length > 0)\n\n    return (<MainWrapper>\n        <Type.XXL fontWeight=\"300\" marginBottom=\"20px\">Migrator</Type.XXL>\n        <Type.MD fontWeight=\"300\" marginBottom=\"20px\">(For other wallets)</Type.MD>\n        <Type.MD fontWeight=\"300\" margin=\"auto\" mb=\"4\" opacity=\"0.5\" maxWidth=\"700px\" width=\"80%\" >Please check the box corresponding to the tokens you wish to migrate. Note that all tokens checked will be migrated to the chosen network. Each token type can only be migrated ONCE.</Type.MD>\n\n        {account && <MainDiv>\n            {currUnMigratedList.length > 0 ? currUnMigratedList.map(config => {\n                return <div key={config.id}>\n                    <Container >\n                        <MigrationTitle toggleId={toggleId} active={migrateList[config.id]} config={config} />\n                        <RowBetween align={\"flex-start\"}>\n                            <MultipleBox currency={config.tokens.from} fastUpdate={fastUpdate} />\n                            <DeusV2Tokens toggleId={toggleId} config={config} active={migrateList[config.id]} />\n                        </RowBetween>\n                    </Container>\n                    {(config.id + 1) !== userSnap.length && <Image src=\"/img/dei/arrow-down.svg\" size=\"35px\" my=\"15px\" />}\n                </div>\n            }) : <div style={{ borderRadius: \"8px\", display: \"inline-block\", padding: \"10px 20px\", backgroundColor: \"#2b2d34\", margin: \"20px auto\" }}><Type.MD>No eligible tokens for migration found</Type.MD></div>}\n        </MainDiv>}\n\n        <div style={{ margin: \"40px 0\" }}></div>\n\n        {(currUnMigratedList.length > 0 || !account) && <Container pb={\"20px\"}>\n            <MigrateChains\n                title=\"Select Destination Network\"\n                SyncChainId={SyncChainId}\n                setSyncChainId={setSyncChainId}\n                validNetworks={validChains}\n            />\n\n            <Line bgColor={'black'}></Line>\n\n\n            <SwapAction\n                bgColor={\"grad_dei\"}\n                text=\"Migrate\"\n                migrateList={migrateList}\n                isPreApproved={true}\n                isApproved={false}\n                validNetwork={SyncChainId}\n                loading={false}\n                swapLoading={false}\n                handleApprove={null}\n                handleSwap={handleMigrate}\n                amountIn={1}\n                amountOut={0}\n                coolDown={seconds}\n            />\n            {seconds > 0 && <Type.MD mt=\"2\" color=\"#ff4646\">*Next migration available after cooldown timer is at zero</Type.MD>}\n        </Container>}\n    </MainWrapper>);\n}\n\nexport default Migrator;\n"],"sourceRoot":""}