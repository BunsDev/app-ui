{"version":3,"sources":["components/Bridge/TokenBadge.jsx","components/Bridge/BridgeBox.jsx","components/Bridge/data.js","components/Bridge/ClaimToken.jsx","components/Bridge/Instruction.jsx","utils/StakingABI.js","components/Bridge/getBalances.js","components/Bridge/TokenModal.jsx","hooks/useCorrectChain.js","helper/bridgeHelper.js","pages/Bridge/index.jsx","hooks/useBridge.js","hooks/useChain.js","hooks/useDebounce.js","helper/deiHelper.js","helper/multicall.js","hooks/useCrossTokenBalance.js","components/App/Swap/SwapAction.jsx","hooks/useAllowance.js"],"names":["TokenBadge","props","logo","className","src","alt","BridgeBox","title","max","handleOpenModal","amount","setAmount","readonly","currency","data","useCrossTokenBalance","address","chainId","useState","balance","setBalance","useEffect","getFullDisplayBalance","decimals","formatBalance3","onClick","type","value","placeholder","symbol","disabled","onChange","e","target","blockTimes","1","137","250","57","97","4","tokens","name","tokenId","balances","56","icon","chains","network","ChainId","ETH","networkName","MATIC","BSC","FTM","instructions","desc","ClaimToken","claims","handleClaim","account","useWeb3React","length","map","claim","index","fromWei","toString","token","find","item","chain","Number","toChain","key","addRPC","NameChainId","style","pointerEvents","remainingBlock","opacity","fontWeight","Instruction","instruction","ERC20ABI","inputs","stateMutability","anonymous","indexed","internalType","outputs","useTokenBalances","fetchData","setBalances","ethWeb3","useCrossWeb3","bscWeb3","ftmWeb3","RINKEBY","BSC_TESTNET","polygonWeb3","web3s","a","calls","filter","params","multicall","result","i","getBalanceNumber","console","log","fetchBalances","window","ReactModal","setAppElement","customStyles","overlay","zIndex","backgroundColor","content","top","left","right","bottom","marginRight","transform","display","flexDirection","maxWidth","width","background","border","borderRadius","padding","TokenModal","open","hide","changeToken","selectedChain","React","setChain","showTokens","setShowTokens","closeModal","isOpen","onRequestClose","shouldCloseOnOverlayClick","id","htmlFor","BridgeTokens","useCorrectChain","location","useLocation","validNetworks","getCorrectChains","pathname","useChain","deposit","fromCurrency","toCurrency","web3","amountWie","getToWei","toFixed","getBridgeContract","methods","getClaimTokens","networks","dest","userTxs","userTxsResponse","pendingClaimTxs","currentBlockNo","eth","getBlockNumber","destChainId","userTx","BRIDGE_ADDRESS","push","BridgeABI","mul","pendingTxs","resp","call","pendingTx","reduce","out","bool","concat","Txs","k","tx","mulWithClaimBlock","forEach","res","txBlockNo","Bridge","muon","Muon","process","syncChainId","setSyncChainId","setOpen","setClaims","setTokenId","lock","setLock","setTarget","setSelectedChain","fetch","setFetch","fastUpdate","setFastUpdate","tokensBalance","getAnotherChainId","myChainId","from","to","swapState","setSwapState","amountIn","setAmountIn","debouncedAmountIn","useDebounce","amountOut","setAmountOut","contractAddress","allowance","useAllowance","isApproved","setIsApproved","isPreApproved","setIsPreApproved","approveLoading","setApproveLoading","gt","onApprove","useApprove","onDeposit","useWeb3","useCallback","fn","SendWithToast","useDeposit","getClaim","fastRefresh","useRefresh","rinkebyWeb3","bscTestWeb3","Object","keys","useGetNewClaim","claimTemp","fromChain","txId","abi","toLowerCase","method","app","depositAddress","depositTxId","depositNetwork","muonResponse","sigs","reqId","then","useClaim","get","handleApprove","status","BigNumber","events","Approval","raw","error","handleSwap","text","bgColor","txColor","validNetwork","loading","TokensMap","other","prev","t","defaultChains","isChain","indexOf","validChain","setValidChain","delay","hotValue","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","baseUrl","dollarDecimals","collatUsdPrice","LENGTH_COLLAT","COLLAT_PRICE","makeCostData","deiPrice","collatRatio","poolBalance","ceiling","dp","cr","pc","formatUnitAmount","div","TEN","pow","av","minus","makeCostDataRedeem","cToken","collateralToken","pb","getStakingData","conf","stakingContract","getStakingTokenData","depositToken","getHusdPoolData","collat_usd_price","LEN","collaterals","COLLATERAL_POOL_ADDRESS","message","payload","hash","customSend","send","once","CustomTransaction","TransactionState","LOADING","SUCCESS","FAILED","DeiDeposit","depositedToken","getDeiStakingContract","DeiWithdraw","withdrawToken","withdraw","buyBackDEUS","deus_price","expire_block","signature","pool_collateral_price","getCollateralPoolContract","RecollateralizeDEI","collateral_price","recollateralizeDEI","mint1t1DEI","collateral_amount","mintFractional","deus_amount","deus_current_price","expireBlock","mintFractionalDEI","mintAlgorithmic","deus_amount_d18","mintAlgorithmicDEI","redeem1to1Dei","redeem1t1DEI","redeemFractionalDei","redeemFractionalDEI","redeemAlgorithmicDei","redeemAlgorithmicDEI","getClaimAll","collectRedemption","getDeiInfo","getDeiContract","dei_info","makeDeiRequest","path","fetcher","isProxyMinter","isPair","getAmountOutDeusSwap","isZero","undefined","amountInToWei","collateralPriceWei","deusPriceWei","erc20Path","MINT_PATH","COLLATERAL_ADDRESS","getDeusSwapContract","getAmountOutProxy","getNewProxyMinterContract","getZapAmountsOut","zapperAddress","DEI_COLLATERAL_ZAP","getZapContract","getAmountOutLPCollateral","DEUS_ADDRESS","getAmountOutLPDEUS","DEI_ADDRESS","getAmountOutLPDEI","getAmountOutLPERC20ORNativecoin","zapIn","minLpAmount","amountOutParams","transferResidual","proxyTuple","DEI_DEUS_ZAP","zapInNativecoin","zapInDEUS","zapInDEI","zapInERC20","zapInCollateral","multi","getMultiCallContract","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","decodeFunctionResult","tokenAddress","contract","useCrossERC20","walletBalance","isAddress","getBalance","balanceOf","fetchBalance","errors","WrapActions","styled","ButtonSwap","ButtonSyncActive","theme","grad3","text1_2","fontSize","WrapStep","FlexCenter","CycleNumber","active","border1","text1","Line","SwapAction","showWallets","setShowWallets","checkError","isGt","isNaN","toUpperCase","position","height","validChainId","setAllowance","useERC20","fetchAllowance","ZERO","ethers","constants","MaxUint256"],"mappings":"0PAWeA,EATI,SAACC,GAClB,IAAQC,EAASD,EAATC,KACR,OACE,yBAAKC,UAAU,iBACb,yBAAKC,IAAG,UAAKF,GAAQG,IAAKH,MC4EjBI,EA3EG,SAACL,GACjB,IACEM,EAOEN,EAPFM,MACAC,EAMEP,EANFO,IACAC,EAKER,EALFQ,gBACAC,EAIET,EAJFS,OACAC,EAGEV,EAHFU,UACAC,EAEEX,EAFFW,SACAC,EACEZ,EADFY,SAIIC,EAAOC,YAAoB,OAACF,QAAD,IAACA,OAAD,EAACA,EAAUG,QAASH,EAASI,SAC9D,EAA8BC,mBAASJ,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,qBAAU,WAKJR,GAHFO,EAAWN,EAAOQ,YAAsBR,EAAD,OAAOD,QAAP,IAAOA,OAAP,EAAOA,EAAUU,UAAY,OAOrE,CAACT,EAAMD,IAIR,yBAAKV,UAAU,cACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,eAAgBI,GAC/B,yBAAKJ,UAAU,eACZgB,GAAO,mBAAgBK,YAAeL,IACtCX,GACC,yBACEiB,QAAS,kBAAMd,EAAUQ,IACzBhB,UAAU,sBAFZ,WASN,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,cACb,2BACEuB,KAAK,SACLvB,UAAU,kCACVwB,MAAOjB,EACPkB,YAAW,UAAKf,EAASgB,OAAS,MAAQ,IAC1CC,UAAWjB,EAASgB,QAAUjB,EAC9BmB,SAAU,SAACC,GAAD,OAAOrB,EAAUqB,EAAEC,OAAON,WAGxC,yBAAKxB,UAAU,iBACZU,EAASI,SAAW,kBAAC,EAAD,CAAYA,QAASJ,EAASI,QAASf,KAAMW,EAASX,OAC3E,yBAAKC,UAAU,wBAAwBsB,QAAShB,GAC7CI,EAASgB,OACR,yBAAK1B,UAAU,gBACZU,EAASgB,OACV,yBAAKzB,IAAI,2BAA2BC,IAAI,WAG1C,yBAAKF,UAAU,oBACb,gDACA,yBAAKC,IAAI,kCAAkCC,IAAI,gB,QCtEzD6B,EAAa,CACjBC,EAAG,GACHC,IAAK,IACLC,IAAK,EACLC,GAAI,GACJC,GAAI,GACJC,EAAG,IAGCC,EAAS,CACb,CACEC,KAAM,MACNnB,SAAU,GACVoB,QAAS,IACTC,SAAU,CACRC,GAAI,IACJR,IAAK,IACLF,EAAG,IACHC,IAAK,KAEPpB,QAAS,CACP6B,GAAI,6CACJR,IAAK,6CACLF,EAAG,6CACHC,IAAK,8CAEPU,KAAM,mBAER,CACEJ,KAAM,OACNnB,SAAU,GACVoB,QAAS,IACTC,SAAU,CACRC,GAAI,IACJR,IAAK,IACLF,EAAG,IACHC,IAAK,KAEPpB,QAAS,CACP6B,GAAI,6CACJR,IAAK,6CACLF,EAAG,6CACHC,IAAK,8CAEPU,KAAM,oBAER,CACEJ,KAAM,KACNnB,SAAU,GACVoB,QAAS,IACTC,SAAU,CACRC,GAAI,IACJR,IAAK,IACLF,EAAG,IACHC,IAAK,IACLI,EAAG,IACHD,GAAI,KAENvB,QAAS,CACP6B,GAAI,6CACJR,IAAK,6CACLF,EAAG,6CACHC,IAAK,6CACLI,EAAG,6CACHD,GAAI,8CAENO,KAAM,oBAIJC,EAAS,CACb,CAAEL,KAAM,MAAOM,QAASC,IAAQC,IAAKC,YAAa,OAClD,CAAET,KAAM,UAAWM,QAASC,IAAQG,MAAOD,YAAa,WACxD,CAAET,KAAM,MAAOM,QAASC,IAAQI,IAAKF,YAAa,OAClD,CAAET,KAAM,MAAOM,QAASC,IAAQK,IAAKH,YAAa,QAK9CI,EAAe,CACnB,CACEb,KAAM,UACNnC,MAAO,yBACPiD,KAAM,6DAER,CACEd,KAAM,UACNnC,MAAO,6BACPiD,KAAM,uEAER,CACEd,KAAM,UACNnC,MAAO,0BACPiD,KAAM,4EAER,CACEd,KAAM,QACNnC,MAAO,uBACPiD,KAAM,8B,iBCjCKC,EA1DI,SAACxD,GAClB,IAAQyD,EAAiCzD,EAAjCyD,OAAQzC,EAAyBhB,EAAzBgB,QAAS0C,EAAgB1D,EAAhB0D,YACjBC,EAAYC,cAAZD,QACR,OACE,oCACGF,EAAOI,OAAS,GACf,yBAAK3D,UAAU,eACb,yBAAKA,UAAU,qBAAf,gBACCuD,EAAOK,KAAI,SAACC,EAAOC,GAAW,IAAD,QACxBvD,EAASwD,YAAQF,EAAMtD,OAAOyD,YAC9BC,EAAQ3B,EAAO4B,MAAK,SAACC,GAAD,OAAUA,EAAK3B,UAAYqB,EAAMrB,QAAQwB,cAC7DI,EAAQxB,EAAOsB,MAAK,SAACC,GAAD,OAAUA,EAAKtB,UAAYwB,OAAOR,EAAMS,QAAQN,eACxE,OACE,yBAAKO,IAAKT,GACR,yBAAK9D,UAAU,qBACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAYoE,MAAOA,EAAM7B,KAAMxC,KAAMkE,EAAMtB,OAC3C,wCAAUsB,EAAM1B,KAAhB,aAAyB6B,EAAM7B,KAA/B,OAEF,yBAAKvC,UAAU,gBAAgBqB,YAAed,KAE/C6D,EAAMvB,UAAY/B,EACjB,yBAAKd,UAAU,oCAAoCsB,QAAS,kBAAMkD,YAAOf,EAASW,EAAMvB,WAAxF,aACa4B,IAAYL,EAAMvB,UAG/B,yBACE7C,UAAU,wCACV0E,MAAO,CACLC,cAAkBN,OAAM,OAACR,QAAD,IAACA,GAAD,UAACA,EAAOe,sBAAR,aAAC,EAAuBZ,YAAc,EAAK,OAAS,OAC5Ea,QAAYR,OAAM,OAACR,QAAD,IAACA,GAAD,UAACA,EAAOe,sBAAR,aAAC,EAAuBZ,YAAc,EAAK,IAAO,GAEtE1C,QAAS,kBAAMkC,EAAYK,EAAOO,EAAMvB,WAExC,6CACCwB,OAAM,OAACR,QAAD,IAACA,GAAD,UAACA,EAAOe,sBAAR,aAAC,EAAuBZ,YAAc,GAAK,0BAAMU,MAAO,CAAEI,WAAY,SAA3B,YAC1CT,OAAM,OAACR,QAAD,IAACA,GAAD,UAACA,EAAOe,sBAAR,aAAC,EAAuBZ,YADY,mBAKtD,yBAAKhE,UAAU,qCCvBhB+E,EAvBK,SAACjF,GACnB,OACE,yBAAKE,UAAU,eACb,yBAAKA,UAAU,qBAAf,QACA,yBAAKA,UAAU,wBACdoD,EAAaQ,KAAI,SAACoB,EAAalB,GAC9B,OAAO,yBAAKS,IAAKT,GAAQkB,EAAY5E,Y,SCThC6E,EAAW,CACtB,CAAEC,OAAQ,GAAIC,gBAAiB,aAAc5D,KAAM,eACnD,CACE6D,WAAW,EACXF,OAAQ,CACN,CACEG,SAAS,EACTC,aAAc,UACd/C,KAAM,QACNhB,KAAM,WAER,CACE8D,SAAS,EACTC,aAAc,UACd/C,KAAM,UACNhB,KAAM,WAER,CACE8D,SAAS,EACTC,aAAc,UACd/C,KAAM,QACNhB,KAAM,YAGVgB,KAAM,WACNhB,KAAM,SAER,CACE6D,WAAW,EACXF,OAAQ,CACN,CAAEG,SAAS,EAAMC,aAAc,UAAW/C,KAAM,OAAQhB,KAAM,WAC9D,CAAE8D,SAAS,EAAMC,aAAc,UAAW/C,KAAM,KAAMhB,KAAM,WAC5D,CACE8D,SAAS,EACTC,aAAc,UACd/C,KAAM,QACNhB,KAAM,YAGVgB,KAAM,WACNhB,KAAM,SAER,CACE2D,OAAQ,CACN,CAAEI,aAAc,UAAW/C,KAAM,QAAShB,KAAM,WAChD,CAAE+D,aAAc,UAAW/C,KAAM,UAAWhB,KAAM,YAEpDgB,KAAM,YACNgD,QAAS,CAAC,CAAED,aAAc,UAAW/C,KAAM,GAAIhB,KAAM,YACrD4D,gBAAiB,OACjB5D,KAAM,YAER,CACE2D,OAAQ,CACN,CAAEI,aAAc,UAAW/C,KAAM,UAAWhB,KAAM,WAClD,CAAE+D,aAAc,UAAW/C,KAAM,SAAUhB,KAAM,YAEnDgB,KAAM,UACNgD,QAAS,CAAC,CAAED,aAAc,OAAQ/C,KAAM,GAAIhB,KAAM,SAClD4D,gBAAiB,aACjB5D,KAAM,YAER,CACE2D,OAAQ,CAAC,CAAEI,aAAc,UAAW/C,KAAM,UAAWhB,KAAM,YAC3DgB,KAAM,YACNgD,QAAS,CAAC,CAAED,aAAc,UAAW/C,KAAM,GAAIhB,KAAM,YACrD4D,gBAAiB,OACjB5D,KAAM,YAER,CACE2D,OAAQ,GACR3C,KAAM,WACNgD,QAAS,CAAC,CAAED,aAAc,QAAS/C,KAAM,GAAIhB,KAAM,UACnD4D,gBAAiB,OACjB5D,KAAM,YAER,CACE2D,OAAQ,CACN,CAAEI,aAAc,UAAW/C,KAAM,UAAWhB,KAAM,WAClD,CAAE+D,aAAc,UAAW/C,KAAM,kBAAmBhB,KAAM,YAE5DgB,KAAM,oBACNgD,QAAS,CAAC,CAAED,aAAc,OAAQ/C,KAAM,GAAIhB,KAAM,SAClD4D,gBAAiB,aACjB5D,KAAM,YAER,CACE2D,OAAQ,CACN,CAAEI,aAAc,UAAW/C,KAAM,UAAWhB,KAAM,WAClD,CAAE+D,aAAc,UAAW/C,KAAM,aAAchB,KAAM,YAEvDgB,KAAM,oBACNgD,QAAS,CAAC,CAAED,aAAc,OAAQ/C,KAAM,GAAIhB,KAAM,SAClD4D,gBAAiB,aACjB5D,KAAM,YAER,CACE2D,OAAQ,CACN,CAAEI,aAAc,UAAW/C,KAAM,UAAWhB,KAAM,WAClD,CAAE+D,aAAc,UAAW/C,KAAM,SAAUhB,KAAM,YAEnDgB,KAAM,OACNgD,QAAS,GACTJ,gBAAiB,aACjB5D,KAAM,YAER,CACE2D,OAAQ,GACR3C,KAAM,OACNgD,QAAS,CAAC,CAAED,aAAc,SAAU/C,KAAM,GAAIhB,KAAM,WACpD4D,gBAAiB,OACjB5D,KAAM,YAER,CACE2D,OAAQ,GACR3C,KAAM,SACNgD,QAAS,CAAC,CAAED,aAAc,SAAU/C,KAAM,GAAIhB,KAAM,WACpD4D,gBAAiB,OACjB5D,KAAM,YAER,CACE2D,OAAQ,GACR3C,KAAM,cACNgD,QAAS,CAAC,CAAED,aAAc,UAAW/C,KAAM,GAAIhB,KAAM,YACrD4D,gBAAiB,OACjB5D,KAAM,YAER,CACE2D,OAAQ,CACN,CAAEI,aAAc,UAAW/C,KAAM,YAAahB,KAAM,WACpD,CAAE+D,aAAc,UAAW/C,KAAM,SAAUhB,KAAM,YAEnDgB,KAAM,WACNgD,QAAS,CAAC,CAAED,aAAc,OAAQ/C,KAAM,GAAIhB,KAAM,SAClD4D,gBAAiB,aACjB5D,KAAM,YAER,CACE2D,OAAQ,CACN,CAAEI,aAAc,UAAW/C,KAAM,SAAUhB,KAAM,WACjD,CAAE+D,aAAc,UAAW/C,KAAM,YAAahB,KAAM,WACpD,CAAE+D,aAAc,UAAW/C,KAAM,SAAUhB,KAAM,YAEnDgB,KAAM,eACNgD,QAAS,CAAC,CAAED,aAAc,OAAQ/C,KAAM,GAAIhB,KAAM,SAClD4D,gBAAiB,aACjB5D,KAAM,a,kBCtFKiE,EAlDU,SAAC5C,EAAQN,EAAQmD,GAAe,IAAD,EACtD,EAAgC1E,mBAASuB,GAAzC,mBAAOG,EAAP,KAAiBiD,EAAjB,KACA,EAA6BhC,cAArBD,EAAR,EAAQA,QAAS3C,EAAjB,EAAiBA,QACX6E,EAAUC,YAAa9C,IAAQC,KAC/B8C,EAAUD,YAAa9C,IAAQI,KAG/B4C,GAFcF,YAAa9C,IAAQiD,SACrBH,YAAa9C,IAAQkD,aACzBJ,YAAa9C,IAAQK,MAC/B8C,EAAcL,YAAa9C,IAAQG,OACnCiD,GAAK,mBACRpD,IAAQC,IAAM4C,GADN,cAER7C,IAAQK,IAAM2C,GAFN,cAGRhD,IAAQG,MAAQgD,GAHR,cAIRnD,IAAQI,IAAM2C,GAJN,GAsCX,OA9BA3E,qBAAU,WAyBJuC,GAxBe,uCAAG,sBAAA0C,EAAA,sDACpBvD,EAAOgB,IAAP,uCAAW,WAAOQ,GAAP,qBAAA+B,EAAA,6DACHC,EAAQ9D,EAAO+D,QAAO,SAAApC,GAAK,OAAIA,EAAMpD,QAAQuD,EAAMvB,YAAUe,KAAI,SAACK,EAAOH,GAC7E,MAAO,CACLjD,QAASoD,EAAMpD,QAAQuD,EAAMvB,SAC7BN,KAAM,YACN+D,OAAQ,CAAC7C,OALJ,kBASc8C,YAAUL,EAAM9B,EAAMvB,SAAUoC,EAAUmB,EAAOhC,EAAMvB,SATrE,OAUP,IADM2D,EATC,kBAUEC,GAVF,MAWCzF,EAAUwF,EAAOC,GACjB5F,EAAUuF,EAAMK,GAAG5F,QACbyB,EAAO4B,MAAK,SAACD,GAAD,OAAWA,EAAMpD,QAAQuD,EAAMvB,WAAahC,KAC9D4B,SAAS2B,EAAMvB,SAAW6D,YAAiB1F,EAAD,UAAUsB,EAAOzB,UAAjB,aAAU,EAAiBO,WAJpEqF,EAAI,EAAGA,EAAID,EAAO7C,OAAQ8C,IAAM,EAAhCA,GAVF,gDAiBPE,QAAQC,IAAI,4BAAZ,MAjBO,yDAAX,uDAoBAlB,EAAYpD,GArBQ,2CAAH,oDAyBjBuE,KAED,CAACpD,EAASnB,EAAQxB,EAAS2E,EAAW7C,EAAQsD,IAE1CzD,G,2BCrDa,qBAAXqE,QACTC,IAAWC,cAAc,QAE3B,IAAMC,EAAe,CACnBC,QAAS,CACPC,OAAQ,EACRC,gBAAiB,mBAEnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,QAAS,OACTC,cAAe,SACfC,SAAU,QACVC,MAAO,OACPC,WAAY,UACZC,OAAQ,oBACRC,aAAc,OACdC,QAAS,cAqGEC,EAhGI,SAACtI,GAClB,IAAQuI,EAA4DvI,EAA5DuI,KAAMC,EAAsDxI,EAAtDwI,KAAMC,EAAgDzI,EAAhDyI,YAAajG,EAAmCxC,EAAnCwC,OAAQE,EAA2B1C,EAA3B0C,QAASgG,EAAkB1I,EAAlB0I,cAClD,EAA0BC,IAAM1H,SAAS6B,EAAO,IAAhD,mBAAOwB,EAAP,KAAcsE,EAAd,KACA,EAAoCD,IAAM1H,SAASuB,GAAnD,mBAAOqG,EAAP,KAAmBC,EAAnB,KACAH,IAAMvH,WAAU,WACd,GAAIsB,EAAS,CACX,IAAIgE,EAASmC,EAAWtC,QAAO,SAACpC,GAAD,OAAWA,EAAMzB,UAAYA,KAC5DoG,EAAcpC,QAEdoC,EAActG,KAEf,CAACE,IAEJ,IAAMqG,EAAa,WACjBP,IACAI,EAAS,KAGX,OACE,kBAAC,IAAD,CACEI,OAAQT,EACR3D,MAAOuC,EACP8B,eAAgBF,EAChBG,2BAA2B,GAE3B,6BACE,yBAAKhJ,UAAU,gBACb,yBAAKA,UAAU,eAAf,mBACA,0BAAMsB,QAASuH,EAAY7I,UAAU,SAArC,SAIF,yBAAKA,UAAU,kBAEf,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,UAAf,gBACA,wBAAIA,UAAU,gBACX4C,EAAOgB,KAAI,SAACQ,EAAON,GAAR,OACV,wBAAIS,IAAKT,EAAO9D,UAAU,WACxB,2BACEuB,KAAK,QACL0H,GAAI7E,EAAM7B,KACVA,KAAK,aACLX,SAAU,kBAAM8G,EAAStE,IAEzBzC,SAAUyC,EAAMvB,UAAY2F,IAE9B,2BAAOU,QAAS9E,EAAM7B,KAAMvC,UAAS,UAAKoE,EAAM7B,KAAX,aAClC6B,EAAM7B,WAKf,yBAAKvC,UAAU,2BACb,2CACA,yBAAKA,UAAU,SAAf,YAEF,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,mBACZoE,EACC+E,IAAa9E,OAAOD,EAAMvB,UAAUe,KAAI,SAACK,EAAOH,GAE9C,OACE,yBAAK9D,UAAU,qBAAqBuE,IAAKT,EAAOxC,QAAS,WACvDiH,EAAYtE,EAAOG,EAAMvB,SACzBgG,MAEA,yBAAK7I,UAAU,oBACb,yBAAKC,IAAG,UAAKgE,EAAMlE,MAAQG,IAAK+D,EAAMlE,OACtC,6BACGkE,EAAMvC,OACP,0BAAM1B,UAAU,gCAAhB,IAEE,0BACEA,UAAS,kCAA6BoE,EAAM7B,OAE3C6B,EAAM7B,MALX,OAWJ,6BAAMD,EAAOwB,GAAOrB,SAAS2B,EAAMvB,cAKzC,yBAAK7C,UAAU,qBAAf,uB,4CC1GCoJ,EARS,WACpB,IAAMC,EAAWC,cACbC,EAAgBC,YAAiBH,EAASI,UAG9C,MAAO,CAAEF,cAFTA,EAAgBA,EAAclD,QAAO,SAACF,GAAD,OAAOA,KAEpBrF,QADR4I,YAASH,K,0FCChBI,EAAU,SAACpJ,EAAQqJ,EAAcC,EAAYC,GACtD,IAAMC,EAAYC,YAASzJ,EAAQqJ,EAAaxI,UAAU6I,QAAQ,GAElE,OADAtD,QAAQC,IAAI,UAAWrG,EAAQwJ,EAAWF,EAAW/I,QAAS8I,EAAaX,IACpEiB,YAAkBJ,EAAMF,EAAa9I,SACvCqJ,QACAR,QAAQI,EAAWF,EAAW/I,QAAS8I,EAAaX,KAIhDmB,EAAc,uCAAG,WAAOC,EAAU5G,EAASyC,GAA1B,mBAAAC,EAAA,sDACtB5C,EAAS,GADa,IAAA4C,EAAA,iBAGjBrC,GAHiB,+CAAAqC,EAAA,6DAIhBrF,EAAUuJ,EAASvG,GACrBwG,EAAOD,EAAShE,QAAO,SAACxD,GAAD,OAAaA,IAAY/B,KAEhDyJ,EAAU,GACVC,EAAkB,GAClBC,EAAkB,GAClBC,EAAiB,EAVC,kBAaKxE,EAAMpF,GAAS6J,IAAIC,iBAbxB,OAalBF,EAbkB,yDAelB/D,QAAQC,IAAI,uBAAZ,MAfkB,QAkBtB,IAASH,EAAI,EAAGA,EAAI6D,EAAK3G,OAAQ8C,IACvBoE,EAAcP,EAAK7D,GACnBqE,EAAS,CACXjK,QAASkK,IAAejK,GACxByB,KAAM,aACN+D,OAAQ,CAAC7C,EAASoH,IAEtBN,EAAQS,KAAKF,GAzBK,2BA6BAvE,YAAUL,EAAMpF,GAAUmK,EAAWV,EAASzJ,GA7B9C,QA6BZoK,EA7BY,OA8BlBV,EAAkBU,EA9BA,mDAiClBvE,QAAQC,IAAI,iCAAiC9F,EAA7C,MAjCkB,YAAAqF,EAAA,iBAoCbM,GApCa,mBAAAN,EAAA,6DAqCZ0E,EAAcP,EAAK7D,GArCP,kBAuCUyD,YAAkBhE,EAAM2E,GAAcA,GACzDV,QACAgB,WAAWrK,EAAS0J,EAAgB/D,GAAG,GAAG7C,KAAI,SAAAwH,GAAI,OAAIA,EAAKpH,eAC3DqH,OA1CS,OAuCRC,EAvCQ,OA4CRH,EAAaG,EAAUC,QAAO,SAACC,EAAKC,EAAM3H,GAAZ,OAAuB2H,EAAOD,EAAMA,EAAIE,OAAOlB,EAAgB/D,GAAG,GAAG3C,MAAU,IAEnH2G,EAAe,sBAAOA,GAAP,YAA2BU,IA9C5B,gDAiDdxE,QAAQC,IAAI,iCAAkCiE,EAA9C,MAjDc,wDAoCbpE,EAAI,EApCS,aAoCNA,EAAI6D,EAAK3G,QApCH,0CAoCb8C,GApCa,iBAoCWA,IApCX,wBAsDtB,IADMkF,EAAM,GACHC,EAAI,EAAGA,EAAInB,EAAgB9G,OAAQiI,IAClCC,EAAK,CACPhL,QAASkK,IAAejK,GACxByB,KAAM,iBACN+D,OAAQ,CAACmE,EAAgBmB,KAE7BD,EAAIX,KAAKa,GA5DS,2BAgEAtF,YAAUL,EAAMpF,GAAUmK,EAAWU,EAAK7K,GAhE1C,QAgEZoK,EAhEY,OAiEdY,EAAoB,GACxBC,kBAAQb,GAAK,SAACc,EAAKlI,GACfgI,EAAkBd,KAAlB,2BAA4BgB,GAA5B,IAAiCpH,eAAgBP,OAAO2H,EAAIC,WAAalK,EAAWjB,GAAWuD,OAAOqG,SAI1GnH,EAAM,sBAAOA,GAAWuI,GAvEN,mDAyElBnF,QAAQC,IAAI,sBAAsB9F,EAAlC,MAzEkB,yEAGjBgD,EAAQ,EAHS,YAGNA,EAAQuG,EAAS1G,QAHX,yCAGjBG,GAHiB,eAGmBA,IAHnB,+CA4EnBP,GA5EmB,2CAAH,0D,iBC+OZ2I,UA3OA,WACX,IAAMC,EAAO,IAAIC,IAAKC,qCACtB,EAAmCjD,IAA3BG,EAAR,EAAQA,cAAezI,EAAvB,EAAuBA,QACvB,EAAsCC,mBAASD,GAA/C,mBAAOwL,EAAP,KAAoBC,EAApB,KACQ9I,EAAYC,cAAZD,QACR,EAAwB1C,oBAAS,GAAjC,mBAAOsH,EAAP,KAAamE,EAAb,KACA,EAA4BzL,mBAAS,IAArC,mBAAOwC,EAAP,KAAekJ,EAAf,KACA,EAA8B1L,mBAAS,IAAvC,mBAAOyB,EAAP,KAAgBkK,GAAhB,KACA,GAAwB3L,mBAAS,IAAjC,qBAAO4L,GAAP,MAAaC,GAAb,MACA,GAA4B7L,qBAA5B,qBAAOe,GAAP,MAAe+K,GAAf,MACA,GAA0C9L,mBAAS,IAAnD,qBAAOyH,GAAP,MAAsBsE,GAAtB,MACA,GAA0B/L,mBAAS,IAAnC,qBAAOgM,GAAP,MAAcC,GAAd,MAEA,GAAoCjM,mBAAS,GAA7C,qBAAOkM,GAAP,MAAmBC,GAAnB,MAEMC,GAAgB3H,EAAiB5C,EAAQN,EAAQyK,IAEjDK,GAAoB,SAACC,GAEvB,OADqB9D,EAAclD,QAAO,SAACF,GAAD,OAAOA,IAAMkH,KACjC,IAI1B,GAAkCtM,mBAAS,CACvCuM,KAAMnE,IAAamD,GAFJ,GAGfiB,GAAIpE,IAAaiE,GAAkBd,IAHpB,KACnB,qBAAOkB,GAAP,MAAkBC,GAAlB,MAKA,GAAgC1M,mBAAS,IAAzC,qBAAO2M,GAAP,MAAiBC,GAAjB,MACMC,GAAoBC,YAAYH,GAAU,KAEhD,GAAkC3M,mBAAS,IAA3C,qBAAO+M,GAAP,MAAkBC,GAAlB,MACMC,GAAkBjD,IAAeuB,GACjC2B,GAAYC,YAAaV,GAAUF,KAAMU,GAAiB1B,GAEhE,GAAoCvL,mBAAS,MAA7C,qBAAOoN,GAAP,MAAmBC,GAAnB,MACA,GAA0CrN,mBAAS,MAAnD,qBAAOsN,GAAP,MAAsBC,GAAtB,MACA,GAA4CvN,oBAAS,GAArD,qBAAOwN,GAAP,MAAuBC,GAAvB,MAEAtN,qBAAU,WACN6M,GAAY,OAACH,SAAD,IAACA,MAAqB,MACnC,CAACA,KAEJ1M,qBAAU,WACW,KAAbwM,IACAK,GAAa,MAClB,CAACL,KAEJxM,qBAAU,WACFoL,IAAgBkB,GAAUF,KAAKxM,SAC/ByL,EAAeiB,GAAUF,KAAKxM,WACnC,CAAC0M,GAAUF,KAAKxM,QAASwL,IAE5BpL,qBAAU,WACNoN,GAAiB,MACjBF,GAAc,QACf,CAACZ,GAAUF,OAEdpM,qBAAU,WACe,MAAjBmN,GAC6B,OAAzBJ,GAAUjK,WACVsK,GAAiB,MAEbL,GAAUQ,GAAG,GACbH,IAAiB,GAEjBA,IAAiB,GAIrBL,GAAUQ,GAAG,IACbL,IAAc,KAIvB,CAACH,KAEJ,IAAQS,GAAcC,YAAWnB,GAAUF,KAAMU,GAAiBlN,GAA1D4N,UACAE,GC+Cc,SAACrO,EAAQiN,GAC/B,MAA6B9J,cAArBD,EAAR,EAAQA,QAAS3C,EAAjB,EAAiBA,QACXgJ,EAAO+E,cAYb,MAAO,CAAED,UAXSE,sBAAW,sBAAC,4BAAA3I,EAAA,yDAEtBrF,IAAY0M,EAAUF,KAAKxM,SAAY0M,EAAUD,GAAGzM,SAAY2C,GAAsB,MAAXlD,GAA6B,KAAXA,EAFvE,iEAKhBwO,EAAKpF,EAAQpJ,EAAQiN,EAAUF,KAAME,EAAUD,GAAIzD,GALnC,SAMTkF,YAAcD,EAAItL,EAAS3C,EAAd,kBAAkCP,EAAlC,YAA4CiN,EAAUF,KAAK5L,SAN/D,wEAQtBiF,QAAQC,IAAI,gCARU,yDAU3B,CAACrG,EAAQiN,EAAW1D,EAAMrG,EAAS3C,KD5DhBmO,CAAWvB,GAAUF,IAAnCoB,UACAM,GCtFkB,WAAO,IAAD,EACxBzL,EAAYC,cAAZD,QACA0L,EAAgBC,cAAhBD,YAMFxJ,EAAUC,YAAa9C,IAAQC,KAC/B8C,EAAUD,YAAa9C,IAAQI,KAC/BmM,EAAczJ,YAAa9C,IAAQiD,SACnCuJ,EAAc1J,YAAa9C,IAAQkD,aACnCF,EAAUF,YAAa9C,IAAQK,KAC/B8C,EAAcL,YAAa9C,IAAQG,OACnCiD,GAAK,mBACNpD,IAAQC,IAAM4C,GADR,cAEN7C,IAAQK,IAAM2C,GAFR,cAGNhD,IAAQG,MAAQgD,GAHV,cAINnD,IAAQI,IAAM2C,GAJR,GAoBX,MAAO,CAAEqJ,SAXQJ,sBAAW,sBAAC,4BAAA3I,EAAA,yDACnBkE,EAAWkF,OAAOC,KAAKtJ,KACzBzC,GAAWkC,GAAWE,GAAWI,GAAeH,GAAWuJ,GAAeC,GAFrD,0CAIJlF,EAAeC,EAAU5G,EAASyC,GAJ9B,+EAMjBS,QAAQC,IAAR,KAAmB,kBANF,kBAOV,IAPU,yDAU1B,CAACnD,EAASkC,EAASE,EAASC,EAASG,EAAaoJ,EAAaC,EAAaH,KDqD1DM,GAAbP,SACA1L,GCjDY,SAAC2I,EAAMQ,EAAMC,EAASI,GAC1C,MAA6BtJ,cAArBD,EAAR,EAAQA,QAAS3C,EAAjB,EAAiBA,QACXgJ,EAAO+E,cAyFb,MAAO,CAAErL,YAvFWsL,sBAAW,uCAAC,WAAOY,EAAW7M,GAAlB,6BAAAsD,EAAA,yDACtBtC,EAAQ,CACV8L,UAAWD,EAAUC,UAAU3L,WAC/BM,QAASoL,EAAUpL,QAAQN,WAC3B4L,KAAMF,EAAUE,KAAK5L,WACrBzD,OAAQmP,EAAUnP,OAAOyD,WAEzBxB,QAASkN,EAAUlN,QAAQwB,cAM3BlD,IAAY+B,GAAY8J,GACpBA,EAAKgD,YAAc9L,EAAM8L,WACzBhD,EAAKrI,UAAYT,EAAMS,SACvBqI,EAAKiD,OAAS/L,EAAM+L,MAhBA,wDAqBxBrP,EAASwD,YAAQF,EAAMtD,QACvBsP,EAAM,CAAC5E,EAAU/G,MAAK,gBAAG3B,EAAH,EAAGA,KAAMhB,EAAT,EAASA,KAAT,MAA6B,UAATgB,GAA6B,aAAThB,MAC5DyB,EAAcyB,IAAYZ,EAAM8L,WAAWG,cACjDnJ,QAAQC,IAAI,CACR/F,QAASkK,IAAe1G,OAAOR,EAAM8L,YACrCI,OAAQ,QACRzJ,OAAQ,CAACzC,EAAM+L,MACfC,MACAhN,QAASG,IA7Be,mBA4CGmJ,EACtB6D,IAAI,eACJD,OAAO,QAAS,CACbE,eAAgBlF,IAAe1G,OAAOR,EAAM8L,YAC5CO,YAAarM,EAAM+L,KACnBO,eAAgBnN,IAEnBqI,OAnDmB,QA4ClB+E,EA5CkB,OAoDxBzJ,QAAQC,IAAI,eAAgBwJ,GAC5BzJ,QAAQC,IAAI,MAAOwJ,EAAazP,KAAK6F,QAC/B6J,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEZ1D,EAAQ/I,GACR8C,QAAQC,IAAInD,EACRI,EAAMtD,OACN8D,OAAOR,EAAM8L,WACbtL,OAAOR,EAAMS,SACbT,EAAMrB,QACNqB,EAAM+L,KACNU,EACAD,GACEtB,EAAK7E,YAAkBJ,EAAMhJ,GAASqJ,QAAQtG,MAChDJ,EACAI,EAAMtD,OACN8D,OAAOR,EAAM8L,WACbtL,OAAOR,EAAMS,SACbT,EAAMrB,QAGNqB,EAAM+L,KACNU,EACAD,GAGJrB,YAAcD,EAAItL,EAAS3C,EAAd,gBAAgCO,YAAed,KAAWgQ,MAAK,WACxEvD,EAASnJ,GACT+I,EAAQ,OAhFY,kDAmFxBjG,QAAQC,IAAI,0BAAZ,MAnFwB,0DAAD,wDAsF5B,CAAC+F,EAAMC,EAASI,EAAUb,EAAM1I,EAASqG,EAAMhJ,KDzC1B0P,CAASrE,EAAMQ,GAAMC,GAASI,IAA9CxJ,YAERtC,qBAAU,WAKFuC,GAJK,uCAAG,4BAAA0C,EAAA,sEACa+I,KADb,OACF3L,EADE,OAERkJ,EAAUlJ,GAFF,2CAAH,oDAKLkN,KAEL,CAACvB,GAAUjC,GAAYxJ,IAG1B,IAAMnD,GAAkB,SAACK,EAAM6B,GAC3BqK,GAAUlM,GACN6B,IACAkK,GAAWlK,GACXsK,GAAiBU,GAAUF,KAAKxM,UAEpC0L,GAAQ,IAuBNkE,GAAgB5B,sBAAW,sBAAC,4BAAA3I,EAAA,sEAE1BqI,IAAkB,GAFQ,SAGTE,KAHS,QAGpB7C,EAHoB,QAInB8E,OACHvC,GAAc,IAAIwC,IAAU/E,EAAGgF,OAAOC,SAASC,IAAIpQ,KAAM,IAAI8N,GAAG,IAEhE9H,QAAQC,IAAI,mBAEhB4H,IAAkB,GATQ,gDAY1BA,IAAkB,GAClB7H,QAAQqK,MAAR,MAb0B,yDAe/B,CAACtC,KAGEuC,GAAanC,sBAAW,sBAAC,sBAAA3I,EAAA,+EAENyI,KAFM,cAGhB+B,QAEHhD,GAAY,IACZT,IAAc,SAAAD,GAAU,OAAIA,EAAa,MAEzCtG,QAAQC,IAAI,eARO,gDAWvBD,QAAQqK,MAAR,MAXuB,yDAa5B,CAACpC,KAGJ,OAAQ,yBAAK5O,UAAU,eACnB,yBAAKA,UAAU,aACX,kBAAC,EAAD,OAGJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,gBACX,4CAEJ,+CAEA,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,eACII,MAAO,qCAAW,0BAAMsE,MAAO,CAAEyD,QAAS,UAAWD,aAAc,OAASlI,UAAS,gBAAWyE,IAAY+I,GAAUF,KAAKxM,WAAa2D,IAAY+I,GAAUF,KAAKxM,WACnKJ,SAAU8M,GAAUF,MAChBE,GAAUF,KAHlB,CAII/M,OAAQmN,GACRlN,UAAW,SAACG,GAAD,OAAUgN,GAAYhN,IACjCN,KAAK,EACLC,gBAAiB,kBAAMA,GAAgB,YAG3C,yBAAKN,UAAU,gBAAgBsB,QAAS,kBA/DpDmM,GAAa,CAAEH,KAAME,GAAUD,GAAIA,GAAIC,GAAUF,OACjDS,GAAa,SACbJ,GAAY,MA8DI,yBAAK1N,IAAI,2BAA2BC,IAAI,WAG5C,kBAAC,EAAD,eACIE,MAAO,mCAAS,0BAAMsE,MAAO,CAAEyD,QAAS,UAAWD,aAAc,OAASlI,UAAS,gBAAWyE,IAAY+I,GAAUD,GAAGzM,WAAa2D,IAAY+I,GAAUD,GAAGzM,WAC7JJ,SAAU8M,GAAUD,IAChBC,GAAUD,GAHlB,CAIIhN,OAAQuN,GACRrN,UAAU,EACVH,gBAAiB,kBAAMA,GAAgB,KAAMkN,GAAUF,KAAK9K,cAGpE,kBAAC,IAAD,CACI0O,KAAK,UACLC,QAAQ,YACRC,QAAQ,QACR/C,cAAeA,GACf9E,cAAeA,EACf8H,aAAc/E,EACd6B,WAAYA,GACZmD,QAAS/C,GACTmC,cAAeA,GACfO,WAAYA,GACZM,UAAW,KACX/D,UAAWA,GACXE,SAAUA,GACVI,UAAWA,MAKnB,kBAAC,EAAD,CACIxL,OAAQ6K,GACR9E,KAAMA,EACN7F,QAASA,EACTgG,cAAeA,GACfF,KAAM,WACFkE,GAASnE,GACTqE,GAAW,IACXI,GAAiB,KAErBvE,YAAa,SAACtE,EAAOnD,GAAR,OAtHL,SAACmD,EAAOnD,GAIxB,IAAM0Q,EAAmB,SAAX1P,GAAoB,KAAO,OACzC2L,IAAa,SAACgE,GAAD,gCACR3P,GADQ,eACMmC,IADN,cAERuN,EAAQrI,IAAasI,EAAKD,GAAO1Q,UAAYA,EAAUsM,GAAkBtM,GAAW2Q,EAAKD,GAAO1Q,SAASuF,QAAO,SAAAqL,GAAC,OAAIA,EAAEzI,KAAOhF,EAAMgF,MAAI,IAFhI,KAiH4BV,CAAYtE,EAAOnD,OAG5D,yBAAKd,UAAU,aACX,kBAAC,EAAD,CACIuD,OAAQA,EACRzC,QAASA,EACTkM,SAAU,SAACrM,GAAD,OAAUqM,GAASrM,IAC7B6C,YAAa,SAACK,EAAOhB,GAAR,OAAoBW,GAAYK,EAAOhB,U,2DEtOrD6G,IAlBE,WAAyB,IAAxBiI,EAAuB,uDAAP,GAC9B,EAAoBjO,cAAZ5C,EAAR,EAAQA,QACF8Q,GAA8C,IAApCD,EAAcE,QAAQ/Q,GACtC,EAAoCC,mBAAS6Q,EAAU9Q,EAAU6Q,EAAc,IAA/E,mBAAOG,EAAP,KAAmBC,EAAnB,KAYA,OAXA7Q,qBAAU,WACDJ,IAEuC,IAApC6Q,EAAcE,QAAQ/Q,GACtBiR,EAAcjR,GAHRiR,EAAcJ,EAAc,MAQ3C,CAAC7Q,EAAS6Q,IAENG,I,qFChBJ,SAASjE,EAAYrM,EAAOwQ,EAAOC,GAEtC,MAA4ClR,mBAASS,GAArD,mBAAO0Q,EAAP,KAAuBC,EAAvB,KAwBA,OAvBAjR,qBACI,WAEI,IAAMkR,EAAUC,YAAW,WACvBF,EAAkB3Q,KACnBwQ,GAIH,OAAO,WACW,KAAVxQ,GAAc2Q,EAAkB,IACpCG,aAAaF,MAGrB,CAAC5Q,EAAOwQ,IAGZ9Q,qBACI,WACIiR,EAAkBF,KAEtB,CAACA,IAEEC,I,4iCCjBLK,EAAU,mCAEHC,EAAiB,EACjBC,EAAiB,UACxBC,EAAgB,GAEhBC,GAAY,mBACb7P,IAAQkD,YAAa,uBADR,cAEblD,IAAQI,IAAK,uBAFA,GAKL0P,EAAe,SAACC,EAAUC,GAAgE,IAAnDC,EAAkD,uDAApC,KAAMC,EAA8B,uDAApB,KAAK5R,EAAe,uDAAN,EACtF6R,EAAKJ,EAAQ,WAAO,IAAIjC,IAAUiC,GAAU5I,QAAQ,IAAO,KAC3DiJ,EAAqB,OAAhBJ,EAAA,UAA0B,IAAIlC,IAAUkC,GAAa7I,QAAQ,GAA7D,KAAqE,KAC1EkJ,EAAqB,OAAhBJ,GAAoC,OAAZC,EAAmBI,YAAiBL,GAAe,MAAQK,YAAiB,IAAIxC,IAAUoC,GAASK,IAAIC,IAAIC,IAAInS,EAAS,KAAO,KAC5JoS,EAAKL,EAAKC,YAAiB,IAAIxC,IAAUoC,GAASS,MAAMV,GAAaM,IAAIC,IAAIC,IAAInS,EAAS,KAAO,KACvG,MAAO,CAAC,CACJmB,KAAM,YACNf,MAAOyR,GACR,CACC1Q,KAAM,mBACNf,MAAO0R,GACR,CACC3Q,KAAM,yBACNf,MAAO2R,GACR,CACC5Q,KAAM,oBACNf,MAAOgS,KAIFE,EAAqB,SAACZ,EAAaC,GAAwC,IAA3BjS,EAA0B,uDAAhBgC,IAAQC,IACrE4Q,EAASC,IAAgB9S,GACzBoS,EAAqB,OAAhBJ,EAAA,UAA0B,IAAIlC,IAAUkC,GAAa7I,QAAQ,GAA7D,KAAqE,KAC1E4J,EAAqB,OAAhBd,EAAA,UAA0BK,YAAiBL,GAA3C,YAA2DY,EAAOjS,QAAW,KACxF,MAAO,CAAC,CACJa,KAAM,mBACNf,MAAO0R,GACR,CACC3Q,KAAM,eACNf,MAAOqS,KAkCFC,EAAiB,SAACC,EAAMtQ,GACjC,OAAKsQ,EACE,CACH,CACIlT,QAASkT,EAAKC,gBACdzR,KAAM,QACN+D,OAAQ,CAAC7C,IAEb,CACI5C,QAASkT,EAAKC,gBACdzR,KAAM,gBACN+D,OAAQ,CAAC7C,KAVC,IAcTwQ,EAAsB,SAACF,EAAMtQ,GACtC,OAAKA,EACE,CACH,CACI5C,QAASkT,EAAKG,aAAarT,QAC3B0B,KAAM,YACN+D,OAAQ,CAAC7C,EAASsQ,EAAKC,kBAE3B,CACInT,QAASkT,EAAKG,aAAarT,QAC3B0B,KAAM,YACN+D,OAAQ,CAAC7C,IAEb,CACI5C,QAASkT,EAAKG,aAAarT,QAC3B0B,KAAM,YACN+D,OAAQ,CAACyN,EAAKC,mBAfD,IAoBZG,EAAkB,WAG3B,IAHkF,IAAD,IAArDrT,EAAqD,uDAA3CgC,IAAQC,IAAKqR,EAA8B,uCAAZ3Q,EAAY,uCAC3E4Q,EAAG,UAAG3B,EAAc5R,UAAjB,QAA6B,EAClCwT,EAAc,GACT7N,EAAI,EAAGA,EAAI4N,EAAK5N,IAAK,CAAC,IAAD,EAC1B6N,EAAYtJ,KAAZ,UAAiB2H,EAAa7R,UAA9B,QAA0CsT,GAG9C,IAAIhO,EAAQ,CACR,CACIvF,QAAS0T,IAAwBzT,GACjCyB,KAAM,sBACN+D,OAAQ,WAACqM,EAAa7R,UAAd,QAA0BsT,IAEtC,CACIvT,QAAS0T,IAAwBzT,GACjCyB,KAAM,0BACN+D,OAAQ,CAACgO,IAEb,CACIzT,QAAS0T,IAAwBzT,GACjCyB,KAAM,gBAEV,CACI1B,QAAS0T,IAAwBzT,GACjCyB,KAAM,kBAEV,CACI1B,QAAS0T,IAAwBzT,GACjCyB,KAAM,eAEV,CACI1B,QAAS0T,IAAwBzT,GACjCyB,KAAM,eAEV,CACI1B,QAAS0T,IAAwBzT,GACjCyB,KAAM,gBAEV,CACI1B,QAAS0T,IAAwBzT,GACjCyB,KAAM,yBAEV,CACI1B,QAAS0T,IAAwBzT,GACjCyB,KAAM,iBAEV,CACI1B,QAAS0T,IAAwBzT,GACjCyB,KAAM,cAEV,CACI1B,QAAS0T,IAAwBzT,GACjCyB,KAAM,gBAEV,CACI1B,QAAS0T,IAAwBzT,GACjCyB,KAAM,cAEV,CACI1B,QAAS0T,IAAwBzT,GACjCyB,KAAM,qBAgBd,OAbIkB,IACA2C,EAAK,sBAAOA,GAAP,CACL,CACIvF,QAAS0T,IAAwBzT,GACjCyB,KAAM,qBACN+D,OAAQ,CAAC7C,IAEb,CACI5C,QAAS0T,IAAwBzT,GACjCyB,KAAM,2BACN+D,OAAQ,CAAC7C,OAGV2C,GAIE4I,EAAgB,SAACD,EAAItL,EAAS3C,EAAS0T,GAA2B,IAAlBC,EAAiB,uDAAP,GAEnE,GAAK1F,EAAL,CACA,IAAI2F,EAAO,KACLlT,EAAQiT,EAAQjT,MAAQ,CAAEA,MAAOiT,EAAQjT,OAAU,GACnDmT,EAAU,aAAKrH,KAAM7J,GAAYjC,GACvC,OAAOuN,EACF6F,KAAKD,GACLE,KAAK,mBAAmB,SAAChJ,GACtB6I,EAAO7I,EACPiJ,YAAkBC,IAAiBC,QAAS,CACxCN,OACA5T,QAASA,EACT0T,QAASA,OAGhBK,KAAK,WAAW,kBAAMC,YAAkBC,IAAiBE,QAAS,CAC/DP,OACA5T,QAASA,EACT0T,QAASA,OAEZK,KAAK,SAAS,kBAAMC,YAAkBC,IAAiBG,OAAQ,CAC5DR,OACA5T,QAASA,EACT0T,QAASA,SAIRW,EAAa,SAACC,EAAgB7U,EAAQM,EAASiJ,GAExD,OADAnD,QAAQC,IAAIoD,YAASzJ,EAAQ6U,EAAehU,UAAU6I,QAAQ,IACvDoL,YAAsBvL,EAAMjJ,GAC9BsJ,QACAR,QAAQK,YAASzJ,EAAQ6U,EAAehU,UAAU6I,QAAQ,KAGtDqL,EAAc,SAACC,EAAehV,EAAQM,EAASiJ,GACxD,OAAOuL,YAAsBvL,EAAMjJ,GAC9BsJ,QACAqL,SAASxL,YAASzJ,EAAQgV,EAAcnU,UAAU6I,QAAQ,KAGtDwL,EAAc,SAAC/H,EAAUgI,EAAYC,EAAcC,GAAoE,IAAzDC,EAAwD,uDAAhC,IAAc/U,EAAkB,uCAATgJ,EAAS,uCAC/H,OAAOgM,YAA0BhM,EAAMhJ,GAClCqJ,QACAsL,YAAY/H,EAAU,CAACmI,GAAwBH,EAAYC,EAAc,CAACC,KAGtEG,EAAqB,SAACC,EAAkBN,EAAYC,EAAcC,EAAWlI,EAAUmI,EAAuBpS,EAAS3C,EAASgJ,GACzI,OAAOgM,YAA0BhM,EAAMhJ,GAClCqJ,QACA8L,mBAAmB,CAACvI,EAAUmI,EAAuB,CAACG,GAAmBN,EAAYC,EAAc,CAACC,MAIhGM,EAAa,SAACC,EAAmBH,EAAkBL,EAAcC,EAAW9U,EAASgJ,GAC9F,OAAOgM,YAA0BhM,EAAMhJ,GAClCqJ,QACA+L,WAAWC,EAAmBH,EAAkBL,EAAc,CAACC,KAG3DQ,EAAiB,SAACD,EAAmBE,EAAaL,EAAkBM,EAAoBC,EAAaX,EAAW9U,EAASgJ,GAClI,OAAOgM,YAA0BhM,EAAMhJ,GAClCqJ,QACAqM,kBAAkBL,EAAmBE,EAAaL,EAAkBM,EAAoBC,EAAa,CAACX,KAGlGa,EAAkB,SAACC,EAAiBJ,EAAoBX,EAAcC,EAAW9U,EAASgJ,GACnG,OAAOgM,YAA0BhM,EAAMhJ,GAClCqJ,QACAwM,mBAAmBD,EAAiBJ,EAAoBX,EAAc,CAACC,KAGnEgB,EAAgB,SAAClJ,EAAUsI,EAAkBL,EAAcC,EAAW9U,EAASgJ,GACxF,OAAOgM,YAA0BhM,EAAMhJ,GAClCqJ,QACA0M,aAAanJ,EAAUsI,EAAkBL,EAAc,CAACC,KAGpDkB,EAAsB,SAACd,EAAkBN,EAAYC,EAAcC,EAAWlI,EAAU5M,EAASgJ,GAC1G,OAAOgM,YAA0BhM,EAAMhJ,GAClCqJ,QACA4M,oBAAoBrJ,EAAUsI,EAAkBN,EAAYC,EAAc,CAACC,KAGvEoB,EAAuB,SAACtB,EAAYC,EAAcC,EAAWlI,EAAU5M,EAASgJ,GACzF,OAAOgM,YAA0BhM,EAAMhJ,GAClCqJ,QACA8M,qBAAqBvJ,EAAUgI,EAAYC,EAAc,CAACC,KAGtDsB,EAAW,uCAAG,WAAOzT,EAASqG,GAAhB,2BAAA3D,EAAA,6DAAsBrF,EAAtB,+BAAgCgC,IAAQC,IAAxC,kBAChB+S,YAA0BhM,EAAMhJ,GAClCqJ,QACAgN,oBACAvC,KAAK,CAAEtH,KAAM7J,KAJK,2CAAH,wDAQX2T,EAAU,uCAAG,WAAOtN,GAAP,uCAAA3D,EAAA,sDAGtB,IAHmCrF,EAAb,+BAAuBgC,IAAQC,IAAKqR,EAApC,+BAAuD3B,EACvE4B,EADgB,UACV3B,EAAc5R,UADJ,QACgB,EAClCwT,EAAc,GACT7N,EAAI,EAAGA,EAAI4N,EAAK5N,IAErB6N,EAAYtJ,KAAZ,UAAiB2H,EAAa7R,UAA9B,QAA0CsT,GALxB,yBAQfiD,YAAevN,EAAMhJ,GACvBqJ,QACAmN,SAAShD,GACTjJ,QAXiB,2CAAH,sDAcVkM,EAAc,uCAAG,WAAOC,GAAP,2BAAArR,EAAA,6DAAarF,EAAb,+BAAuB,EAAvB,kBACnB2W,YAAQlF,EAAUiF,EAAV,mBAA6B1W,KADlB,2CAAH,sDAId4W,EAAgB,SAACzT,EAAO0T,EAAQ7E,EAAahS,GAAa,IAAD,EAClE,OAAKmD,GAAUA,EAAMvC,QAA0B,OAAhBoR,IACV,MAAhBA,GAAuB7O,EAAMvC,UAAN,UAAiBkS,IAAgB9S,UAAjC,aAAiB,EAA0BY,UAAWiW,GAC7D,IAAhB7E,GAAsC,SAAjB7O,EAAMvC,SAAsBiW,GACjD7E,EAAc,GAAKA,EAAc,KAAO6E,GAHe,MAQnDC,EAAoB,uCAAG,WAAOhO,EAAc8D,EAAUgI,EAAYM,EAAkBlM,EAAMhJ,GAAnE,2BAAAqF,EAAA,yDAE3ByD,GAAiB8D,IAAYmK,YAAOnK,SAA4BoK,IAAfpC,EAFtB,yCAEuD,IAFvD,UAG1BqC,EAAgB/N,YAAS0D,EAAU9D,EAAaxI,UAAU6I,QAAQ,GAClE+N,EAAqBhO,YAASgM,EAAkB,GAAG/L,QAAQ,GAC3DgO,EAAejO,YAAS0L,EAAY,GAAGzL,QAAQ,GACjD8F,EAAS,GACTzJ,EAAS,CAACyR,EAAeE,EAAcD,GAC3CrR,QAAQC,IAAI9F,EAASiX,GAEfG,EAAYC,IAAUrX,GAAS8I,EAAalI,QAE9CkI,EAAa/I,UAAYuX,IAAmBtX,GAZhB,iBAa5BiP,EAAS,qBAbmB,2BAe5BA,EAAS,sBACJmI,EAhBuB,wBAiBxBvR,QAAQqK,MAAM,qBAAsBpH,GAjBZ,2BAoB5BtD,EAAO0E,KAAKkN,GApBgB,eAsBhCvR,QAAQC,IAAImJ,EAAQzJ,GAtBY,mBAuBzB,EAAA+R,YAAoBvO,EAAMhJ,GAASqJ,SAAQ4F,GAA3C,QAAsDzJ,GAAQ+E,QAvBrC,4CAAH,gEA0BpBiN,EAAiB,uCAAG,WAAO1O,EAAc8D,EAAUgI,EAAYM,EAAkBlM,EAAMhJ,GAAnE,2BAAAqF,EAAA,yDAExByD,GAAiB8D,IAAYmK,YAAOnK,SAA4BoK,IAAfpC,EAFzB,yCAE0D,IAF1D,UAGvBqC,EAAgB/N,YAAS0D,EAAU9D,EAAaxI,UAAU6I,QAAQ,GAClE+N,EAAqBhO,YAASgM,EAAkB,GAAG/L,QAAQ,GAC3DgO,EAAejO,YAAS0L,EAAY,GAAGzL,QAAQ,GACjD8F,EAAS,GACTzJ,EAAS,CAACyR,EAAeE,EAAcD,GAC3CrR,QAAQC,IAAI9F,EAASiX,GAEfG,EAAYC,IAAUrX,GAAS8I,EAAalI,QAE9CkI,EAAa/I,UAAYuX,IAAmBtX,GAZnB,iBAazBiP,EAAS,oBAbgB,2BAezBA,EAAS,qBACJmI,EAhBoB,wBAiBrBvR,QAAQqK,MAAM,qBAAsBpH,GAjBf,2BAoBzBtD,EAAO0E,KAAKkN,GApBa,eAsB7BvR,QAAQC,IAAImJ,EAAQzJ,GAtBS,mBAuBtB,EAAAiS,YAA0BzO,EAAMhJ,GAASqJ,SAAQ4F,GAAjD,QAA4DzJ,GAAQ+E,QAvB9C,4CAAH,gEA2BjBmN,EAAgB,uCAAG,WAAO9X,EAAUqX,EAAeU,EAAejS,EAAQsD,EAAMhJ,GAA7D,eAAAqF,EAAA,yDACtB+R,EAAYC,IAAUrX,GAASJ,EAASgB,QAE1C+W,IAAkBC,IAAmB5X,GAHb,oBAIpBJ,EAASG,UAAYuX,IAAmBtX,GAJpB,uBAKpB6F,QAAQC,IAAI,4BAA6B6R,EAAeV,GALpC,kBAMbY,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACAyO,yBAAyBb,GAAe1M,QARzB,UASb3K,EAASG,UAAYgY,IAAa/X,GATrB,wBAUpB6F,QAAQC,IAAI,sBAAuBmR,GAVf,kBAWbY,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACA2O,mBAAmBf,EAFjB,YAEoCG,IAAY7M,QAbnC,WAcb3K,EAASG,UAAYkY,IAAYjY,GAdpB,wBAepB6F,QAAQC,IAAI,yBAA0BmR,EAAeU,GAfjC,kBAgBbE,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACA6O,kBAAkBjB,GAAe1M,QAlBlB,iCAoBjBsN,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACA8O,gCAAgClB,EAF9B,YAEiDG,IAAY7M,QAtB5C,WAyBxB3K,EAASG,UAAYgY,IAAa/X,GAzBV,wBA0BxB6F,QAAQC,IAAI,sBAAuBmR,GA1BX,kBA2BjBY,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACA2O,mBAAmBf,GAAe1M,QA7Bf,WA8BjB3K,EAASG,UAAYkY,IAAYjY,GA9BhB,wBA+BxB6F,QAAQC,IAAI,qBAAsBmR,EAAeU,GA/BzB,kBAgCjBE,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACA6O,kBAAkBjB,GAAe1M,QAlCd,eAoC5B1E,QAAQC,IAAI,mCAAoCmR,EAAevR,EAAOkP,WAAYlP,EAAOwP,iBAAkBkC,GApC/E,kBAqCrBS,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACA8O,gCAAgClB,EAAevR,EAAOkP,WAAYlP,EAAOwP,iBAAkBkC,GAAW7M,QAvC/E,4CAAH,gEA2ChB6N,EAAQ,SAACxY,EAAU+X,EAAe/K,EAAUyL,EAAa3S,EAAQ4S,EAAiBC,EAAkBvP,EAAMhJ,GACnH,IAAMoX,EAAYC,IAAUrX,GAASJ,EAASgB,QACtCsU,EAA0DxP,EAA1DwP,iBAAkBN,EAAwClP,EAAxCkP,WAAYC,EAA4BnP,EAA5BmP,aAAcC,EAAcpP,EAAdoP,UAEhD0D,EAAa,GAcjB,OAbIF,EAAgBzV,OAAS,IACzB2V,EAAa,CACT5L,EACAyL,EACAzD,EACAM,EACAoD,EAAgB,GAChBA,EAAgB,GAChBzD,EACA,CAACC,KAIL6C,IAAkBc,IAAazY,GACN,OAArBJ,EAASG,SACT8F,QAAQC,IAAI,mBAAoB8G,EAAUyL,EAAaE,GAChDV,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACAqP,gBAAgBF,EAAYH,EAAajB,EAAWmB,IAEpD3Y,EAASG,UAAYgY,IAAa/X,IAEvC6F,QAAQC,IAAI,aAAc8G,EAAUyL,EAAaE,GAC1CV,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACAsP,UAAU/L,EAAUyL,EAAaE,IAEjC3Y,EAASG,UAAYkY,IAAYjY,IACtC6F,QAAQC,IAAI,YAAa8G,EAAUyL,EAAaE,GACzCV,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACAuP,SAAShM,EAAUyL,EAAaE,IAElCV,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACAwP,WAAWL,EAAY5L,EAAUyL,EAAajB,EAAWmB,GAGrC,OAArB3Y,EAASG,SACT8F,QAAQC,IAAIsR,EAAWiB,EAAaE,GAC7BV,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACAqP,gBAAgBtB,EAAWiB,EAAaE,IAExC3Y,EAASG,UAAYuX,IAAmBtX,IAC7C6F,QAAQC,IAAI,mBAAoB8G,EAAUyL,EAAaE,GAChDV,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACAyP,gBAAgBlM,EAAUyL,EAAaE,IAEvC3Y,EAASG,UAAYgY,IAAa/X,IACvC6F,QAAQC,IAAI,aAAc8G,EAAUyL,EAAaE,EAAkBnB,GAC5DS,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACAsP,UAAU/L,EAAUyL,EAAaE,EAAkBnB,IAEnDxX,EAASG,UAAYkY,IAAYjY,IACtC6F,QAAQC,IAAI,YAAa8G,EAAUyL,EAAaE,GACzCV,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACAuP,SAAShM,EAAUyL,EAAaE,KAEzC1S,QAAQC,IAAIsR,EAAWxK,EAAUyL,EAAaE,GACvCV,YAAe7O,EAAM2O,EAAe3X,GACtCqJ,QACAwP,WAAWzB,EAAWxK,EAAUyL,EAAajB,EAAWmB,M,iFCze/D9S,EAAS,uCAAG,WAAOuD,EAAM+F,EAAKzJ,EAAOtF,GAAzB,yBAAAqF,EAAA,6DACR0T,EAAQC,YAAqBhQ,EAAMhJ,GAEnCiZ,EAAM,IAAIC,IAAUnK,GACpBoK,EAAW7T,EAAMxC,KAAI,SAACyH,GAAD,MAAU,CACjCA,EAAKxK,QAAQiP,cACbiK,EAAIG,mBAAmB7O,EAAK9I,KAAM8I,EAAK/E,YAN7B,SAQeuT,EAAM1P,QAAQgQ,UAAUF,GAAU5O,OARjD,uBAQN+O,EARM,EAQNA,WACFpO,EAAMoO,EAAWxW,KAAI,SAACyH,EAAM5E,GAAP,OACvBsT,EAAIM,qBAAqBjU,EAAMK,GAAGlE,KAAM8I,MAV9B,kBAaPW,GAbO,2CAAH,4DAiBAzF,O,wICuBA3F,IAnCc,SAAC0Z,EAAcxZ,GAAgC,IAAvBmM,EAAsB,uDAAT,KAC9D,EAA8BlM,mBAAS,IAAI6P,IAAU,IAArD,mBAAO5P,EAAP,KAAgBC,EAAhB,KACA,EAAoByC,cAAZD,EAAR,EAAQA,QAEFqG,EAAOlE,YAAa9E,GAEpByZ,EAAWC,YAAcF,EAAcxQ,GAC7C,EAAwBsF,cAAhBD,EAAR,EAAQA,YAwBR,OAvBAjO,qBAAU,WAgBFuC,GAAW6W,EAfG,uCAAG,4BAAAnU,EAAA,yDACbsU,EAAgB,KADH,SAGRC,YAAUJ,GAHF,gCAIaxQ,EAAKa,IAAIgQ,WAAWlX,GAJjC,OAITgX,EAJS,+CAMaF,EAASpQ,QAAQyQ,UAAUnX,GAAS4H,OANjD,QAMToP,EANS,eAQbxZ,EAAW,IAAI2P,IAAU6J,IARZ,kDAUb9T,QAAQC,IAAR,yBAA8B0T,EAA9B,yBAA2DxZ,GAA3D,MAVa,0DAAH,oDAgBd+Z,GAEA5Z,EAAW,MAEhB,CAACwC,EAAS6W,EAAcxQ,EAAMhJ,EAASyZ,EAAUpL,EAAalC,IAE1DjM,I,2JC3BL8Z,EAGK,kBAHLA,EAIY,uBAJZA,EAKO,aAGPC,EAAcC,UAAO3H,IAAV,2MAUX4H,EAAaD,kBAAOE,IAAPF,CAAH,uFACE,gBAAGG,EAAH,EAAGA,MAAOhK,EAAV,EAAUA,QAAV,OAAwBA,EAAUgK,EAAMhK,GAAWgK,EAAMC,SAC9D,gBAAGD,EAAH,EAAGA,MAAO/J,EAAV,EAAUA,QAAV,OAAwBA,EAAU+J,EAAM/J,GAAW+J,EAAME,WACtD,qBAAGC,UAA2B,UAGxCC,EAAWP,kBAAOQ,IAAPR,CAAH,kDAIRS,EAAcT,kBAAOQ,IAAPR,CAAH,+MAKC,gBAAGG,EAAH,EAAGA,MAAOhK,EAAV,EAAUA,QAAV,SAAmBuK,OAAsBvK,EAAUgK,EAAMhK,GAAWgK,EAAMC,MAAQD,EAAMQ,WAC7F,gBAAGR,EAAH,EAAGA,MAAOO,EAAV,EAAUA,OAAQtK,EAAlB,EAAkBA,QAAlB,OAAgCsK,EAAStK,EAAU+J,EAAM/J,GAAW+J,EAAME,QAAUF,EAAMS,SAKjGC,EAAOb,UAAO3H,IAAV,sFACQ,gBAAG8H,EAAH,EAAGA,MAAOhK,EAAV,EAAUA,QAAV,OAAwBA,EAAUgK,EAAMhK,GAAWgK,EAAMC,SAoF5DU,IAhFI,SAAC,GAAiK,IAAD,IAA9J5K,YAA8J,MAAvJ,OAAuJ,EAA/I7C,EAA+I,EAA/IA,cAAeX,EAAgI,EAAhIA,SAAUI,EAAsH,EAAtHA,UAAWN,EAA2G,EAA3GA,UAAW+D,EAAgG,EAAhGA,UAAWpD,EAAqF,EAArFA,WAAYmD,EAAyE,EAAzEA,QAASD,EAAgE,EAAhEA,aAAcX,EAAkD,EAAlDA,cAAeO,EAAmC,EAAnCA,WAAYE,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAElK,EAA6B1N,cAArBD,EAAR,EAAQA,QAAS3C,EAAjB,EAAiBA,QACjB,EAAsCC,oBAAS,GAA/C,mBAAOgb,EAAP,KAAoBC,EAApB,KAEMC,EAAa,WAAO,IAAD,EACrB,MAAiB,KAAbvO,GAAmBmK,YAAOnK,GAAkBoN,EAC5CvJ,GAAa2K,YAAKxO,EAAD,UAAW6D,EAAU/D,EAAUF,KAAKzM,gBAApC,aAAW,EAAmCG,SAAiB8Z,EAChFqB,MAAMrO,GAAmBgN,EACtB,MAQX,OALA5Z,qBAAU,WACFuC,GACAuY,GAAe,KACpB,CAACvY,IAECA,EASD3C,GAAWA,IAAYuQ,EAChB,kBAAC0J,EAAD,KACH,kBAAC,IAAD,CAASgB,YAAaA,EAAaC,eAAgBA,IACnD,kBAACf,EAAD,CAAY7J,QAASA,EAASD,QAASA,EAASuK,QAAQ,EAAMpa,QAAS,kBAAMkD,YAAOf,EAAS4N,KAA7F,aACe5M,IAAY4M,GAAc+K,gBAM7CH,IACO,kBAAClB,EAAD,KACH,kBAAC,IAAD,KAAyBkB,MAIZ,MAAjB5N,EACO,kBAAC0M,EAAD,KACH,kBAAC,IAAD,KACI,kBAAC,cAAD,QAKJ,oCACH1M,EACG,kBAAC0M,EAAD,KACI,kBAACE,EAAD,CAAYS,QAAQ,EAAMJ,SAAU,OAAQha,QAAS2P,EAAYG,QAASA,EAASD,QAASA,GAAUD,IACzF,oCACb,kBAAC6J,EAAD,KACM5M,EAMI,oCACF,kBAAC,IAAD,iBACA,kBAAC8M,EAAD,CAAY7J,QAASA,EAASD,QAASA,EAASuK,QAAQ,EAAMpa,QAAS2P,GAClEC,IATM,oCACX,kBAAC+J,EAAD,CAAY7J,QAASA,EAASD,QAASA,EAASuK,QAAQ,EAAMpa,QAASoP,GAAvE,UAEKY,GAAW,yBAAK5M,MAAO,CAAE2X,SAAU,WAAY7U,MAAO,QAAUtH,IAAI,KAAKD,IAAI,mBAAmB8H,MAAM,KAAKuU,OAAO,QAEvH,kBAAC,IAAD,SAAyBpL,KASjC,kBAACqK,EAAD,CAAUpK,QAASA,GACf,kBAACsK,EAAD,CAAatK,QAASA,EAASuK,QAAQ,GAAvC,KACA,kBAACG,EAAD,CAAM1K,QAASA,IACf,kBAACsK,EAAD,CAAatK,QAASA,EAASuK,OAAQvN,GAAvC,QAvDL,kBAAC4M,EAAD,KACH,kBAAC,IAAD,CAASgB,YAAaA,EAAaC,eAAgBA,IACnD,kBAACf,EAAD,CAAY7J,QAASA,EAASD,QAASA,EAASuK,QAAQ,EAAMpa,QAAS,kBAAM0a,GAAe,KAA5F,qB,2KCnEC9N,EAAe,SAACxN,EAAUsN,EAAiBuO,GACpD,MAAkCxb,mBAAS,IAAI6P,KAAW,IAA1D,mBAAO3C,EAAP,KAAkBuO,EAAlB,KACA,EAA6B9Y,cAArBD,EAAR,EAAQA,QAAS3C,EAAjB,EAAiBA,QACTqO,EAAgBC,cAAhBD,YACSmL,EAAiB5Z,EAA1BG,QACF0Z,EAAWkC,YAASnC,GAuB1B,OArBApZ,qBAAU,WACN,IAAMwb,EAAc,uCAAG,4BAAAvW,EAAA,yDACdmU,EADc,yCACOkC,EAAaG,MADpB,UAEfJ,GAAgBzb,IAAYyb,GAAgBA,IAAiB7b,EAASI,SAAS0b,EAAaG,KAC/E,OAAbpC,EAHe,gBAGIiC,EAAaI,IAAOC,UAAUC,YAHlC,2BAIVpc,EAASuN,UAJC,iBAIYuO,EAAa9b,EAASuN,WAJlC,mDAOOsM,EAASpQ,QAAQ8D,UAAUxK,EAASuK,GAAiB3C,OAP5D,QAOLW,EAPK,OAQXwQ,EAAa,IAAI5L,IAAU5E,IARhB,mDAUXrF,QAAQC,IAAI,qBAAZ,MAVW,2DAAH,qDAchBnD,GAAW6W,IACXkC,EAAa,IAAI5L,KAAW,IAC5B8L,OAEL,CAACjZ,EAAS8W,EAAUzZ,EAASkN,EAAiBsM,EAAciC,EAAc7b,EAAUyO,IAEhFlB","file":"static/js/18.a818ade4.chunk.js","sourcesContent":["import React from 'react'\n\nconst TokenBadge = (props) => {\n  const { logo } = props\n  return (\n    <div className=\"notify-bridge\">\n      <img src={`${logo}`} alt={logo} />\n    </div>\n  )\n}\n\nexport default TokenBadge\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { getFullDisplayBalance } from '../../helper/formatBalance'\nimport useCrossTokenBalance from '../../hooks/useCrossTokenBalance'\nimport { formatBalance3 } from '../../utils/utils'\nimport TokenBadge from './TokenBadge'\n\nconst BridgeBox = (props) => {\n  const {\n    title,\n    max,\n    handleOpenModal,\n    amount,\n    setAmount,\n    readonly,\n    currency,\n  } = props\n\n  // const [balance, setBalance] = useState(100)\n  const data = useCrossTokenBalance(currency?.address, currency.chainId)\n  const [balance, setBalance] = useState(data)\n\n  useEffect(() => {\n    const getBalance = () => {\n      setBalance(data ? getFullDisplayBalance(data, currency?.decimals) : \"0\")\n    }\n\n    if (currency) {\n      getBalance()\n    }\n\n  }, [data, currency,])\n\n\n  return (\n    <div className=\"bridge-box\">\n      <div className=\"flex-between\">\n        <div className=\"bridge-from\" >{title}</div>\n        <div className=\"bridge-from\">\n          {balance && `Balance: ${formatBalance3(balance)}`}\n          {max && (\n            <div\n              onClick={() => setAmount(balance)}\n              className=\"bridge-max pointer\"\n            >\n              (Max)\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"flex-between pt-13\">\n        <div className=\"wrap-input\">\n          <input\n            type=\"number\"\n            className=\"input-transparent bridge-amount\"\n            value={amount}\n            placeholder={`${currency.symbol ? \"0.0\" : \"\"}`}\n            disabled={!currency.symbol || readonly}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </div>\n        <div className=\"bridge-token \">\n          {currency.chainId && <TokenBadge chainId={currency.chainId} logo={currency.logo} />}\n          <div className=\"bridge-assets pointer\" onClick={handleOpenModal}>\n            {currency.symbol ? (\n              <div className=\"select-token\">\n                {currency.symbol}\n                <img src=\"/img/arrow-nav-black.svg\" alt=\"arrow\" />\n              </div>\n            ) : (\n              <div className=\"select-token-btn\">\n                <span>Select a token</span>\n                <img src=\"/img/bridge/arrow-nav-black.svg\" alt=\"arrow\" />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BridgeBox\n","import { ChainId } from '../../constant/web3'\n\nconst blockTimes = {\n  1: 24,\n  137: 256,\n  250: 6,\n  57: 30,\n  97: 30,\n  4: 24,\n}\n\nconst tokens = [\n  {\n    name: 'DEI',\n    decimals: 18,\n    tokenId: '0',\n    balances: {\n      56: '0',\n      250: '0',\n      1: '0',\n      137: '0'\n    },\n    address: {\n      56: \"0xDE12c7959E1a72bbe8a5f7A1dc8f8EeF9Ab011B3\",\n      250: \"0xDE12c7959E1a72bbe8a5f7A1dc8f8EeF9Ab011B3\",\n      1: \"0xDE12c7959E1a72bbe8a5f7A1dc8f8EeF9Ab011B3\",\n      137: \"0xDE12c7959E1a72bbe8a5f7A1dc8f8EeF9Ab011B3\",\n    },\n    icon: '/tokens/dei.svg'\n  },\n  {\n    name: 'DEUS',\n    decimals: 18,\n    tokenId: '1',\n    balances: {\n      56: '0',\n      250: '0',\n      1: '0',\n      137: '0'\n    },\n    address: {\n      56: '0xDE5ed76E7c05eC5e4572CfC88d1ACEA165109E44',\n      250: '0xDE5ed76E7c05eC5e4572CfC88d1ACEA165109E44',\n      1: '0xDE5ed76E7c05eC5e4572CfC88d1ACEA165109E44',\n      137: '0xDE5ed76E7c05eC5e4572CfC88d1ACEA165109E44',\n    },\n    icon: '/tokens/deus.svg'\n  },\n  {\n    name: 'TT',\n    decimals: 18,\n    tokenId: '2',\n    balances: {\n      56: '0',\n      250: '0',\n      1: '0',\n      137: '0',\n      4: '0',\n      97: '0',\n    },\n    address: {\n      56: \"0xDE12c7959E1a72bbe8a5f7A1dc8f8EeF9Ab011B3\",\n      250: \"0xDE12c7959E1a72bbe8a5f7A1dc8f8EeF9Ab011B3\",\n      1: \"0xDE12c7959E1a72bbe8a5f7A1dc8f8EeF9Ab011B3\",\n      137: \"0xDE12c7959E1a72bbe8a5f7A1dc8f8EeF9Ab011B3\",\n      4: \"0x4b16E272421FD67E6D41a14ac27789AB2AFE7bcb\",\n      97: \"0x39a571d0FF892aF5e5780AF286f5152784d15A9f\",\n    },\n    icon: '/tokens/dei.svg'\n  },\n]\n\nconst chains = [\n  { name: 'ETH', network: ChainId.ETH, networkName: 'eth' },\n  { name: 'POLYGON', network: ChainId.MATIC, networkName: 'polygon' },\n  { name: 'BSC', network: ChainId.BSC, networkName: 'bsc' },\n  { name: 'FTM', network: ChainId.FTM, networkName: 'ftm' },\n  // { name: 'BSC_TESTNET', network: ChainId.BSC_TESTNET, networkName: 'bsc test' },\n  // { name: 'RINKEBY', network: ChainId.RINKEBY, networkName: 'rinkeby' },\n]\n\nconst instructions = [\n  {\n    name: 'approve',\n    title: '1 – Approve Spend',\n    desc: 'Approve the spend of the asset that you intend to bridge.'\n  },\n  {\n    name: 'deposit',\n    title: '2 – Deposit to Bridge',\n    desc: 'Your asset will be deposited to the bridge before you can withdraw '\n  },\n  {\n    name: 'network',\n    title: '3 – Change Network',\n    desc: 'Either press the button in the bridge interface or click: Change Network'\n  },\n  {\n    name: 'claim',\n    title: '4 – Claim Token',\n    desc: 'Claim your bridged token.'\n  }\n]\n\nexport { tokens, chains, instructions, blockTimes }\n","import React from 'react'\nimport TokenBadge from './TokenBadge'\nimport { chains, tokens } from './data'\nimport { fromWei } from '../../helper/formatBalance'\nimport { formatBalance3 } from '../../utils/utils'\nimport { NameChainId } from '../../constant/web3'\nimport { addRPC } from '../../services/addRPC'\nimport { useWeb3React } from '@web3-react/core'\n\nconst ClaimToken = (props) => {\n  const { claims, chainId, handleClaim } = props\n  const { account } = useWeb3React()\n  return (\n    <>\n      {claims.length > 0 && (\n        <div className=\"claim-token\">\n          <div className=\"claim-token-title\">CLAIM TOKENS</div>\n          {claims.map((claim, index) => {\n            let amount = fromWei(claim.amount.toString())\n            let token = tokens.find((item) => item.tokenId === claim.tokenId.toString())\n            let chain = chains.find((item) => item.network === Number(claim.toChain.toString()))\n            return (\n              <div key={index}>\n                <div className=\"flex-between mb-5\">\n                  <div className=\"token-item\">\n                    <TokenBadge chain={chain.name} logo={token.icon} />\n                    <span>{`${token.name} (${chain.name})`}</span>\n                  </div>\n                  <div className=\"claim-amount\">{formatBalance3(amount)}</div>\n                </div>\n                {chain.network !== chainId ? (\n                  <div className=\" container-claim-btn switch-claim\" onClick={() => addRPC(account, chain.network)}>\n                    SWITCH TO {NameChainId[chain.network]}\n                  </div>\n                ) : (\n                  <div\n                    className=\"container-claim-btn claim-btn pointer\"\n                    style={{\n                      pointerEvents: !!(Number(claim?.remainingBlock?.toString()) > 0) ? 'none' : 'auto',\n                      opacity: !!(Number(claim?.remainingBlock?.toString()) > 0) ? 0.55 : 1\n                    }}\n                    onClick={() => handleClaim(claim, chain.network)}\n                  >\n                    <span> CLAIM &nbsp;</span>\n                    {Number(claim?.remainingBlock?.toString()) > 0 && <span style={{ fontWeight: 'bold' }}>\n                      {` (${Number(claim?.remainingBlock?.toString())} blocks left)`}\n                    </span>}\n                  </div>\n                )}\n                <div className=\"border-bottom-claim mb-20\" />\n              </div>\n            )\n          })}\n          {/* <div className=\"desc-claim\">\n            <span className=\"blue-color opacity-1\">\n              Change to the destination Network\n            </span>\n            <span className=\"opacity-5\">\n              to claim your token on respective networks.\n            </span>\n          </div> */}\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default ClaimToken\n","import React from 'react'\nimport { instructions } from './data'\n\nconst Instruction = (props) => {\n  return (\n    <div className=\"instruction\">\n      <div className=\"instruction-title\">Help</div>\n      <div className=\"border-bottom mb-20\" />\n      {instructions.map((instruction, index) => {\n        return <div key={index}>{instruction.title}</div>\n      })}\n      {/* <div className=\"instruction-title mt-20\">\n        If you need more help visit the{' '}\n        <a href=\"#\" className=\"blue-color\" target=\"_blank\">\n          wiki\n        </a>{' '}\n        or watch this step by step{' '}\n        <a href=\"#\" className=\"blue-color\" target=\"_blank\">\n          explainer video\n        </a>\n        .\n      </div> */}\n    </div>\n  )\n}\n\nexport default Instruction\n","export const ERC20ABI = [\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'spender',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256'\n      }\n    ],\n    name: 'Approval',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'from', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256'\n      }\n    ],\n    name: 'Transfer',\n    type: 'event'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'owner', type: 'address' },\n      { internalType: 'address', name: 'spender', type: 'address' }\n    ],\n    name: 'allowance',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'spender', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' }\n    ],\n    name: 'approve',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'spender', type: 'address' },\n      { internalType: 'uint256', name: 'subtractedValue', type: 'uint256' }\n    ],\n    name: 'decreaseAllowance',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'spender', type: 'address' },\n      { internalType: 'uint256', name: 'addedValue', type: 'uint256' }\n    ],\n    name: 'increaseAllowance',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'account', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' }\n    ],\n    name: 'mint',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'name',\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'recipient', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' }\n    ],\n    name: 'transfer',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'sender', type: 'address' },\n      { internalType: 'address', name: 'recipient', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' }\n    ],\n    name: 'transferFrom',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  }\n]\nexport const abi = [\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'spender',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256'\n      }\n    ],\n    name: 'Approval',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'from', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256'\n      }\n    ],\n    name: 'Transfer',\n    type: 'event'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'owner', type: 'address' },\n      { internalType: 'address', name: 'spender', type: 'address' }\n    ],\n    name: 'allowance',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'spender', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' }\n    ],\n    name: 'approve',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'spender', type: 'address' },\n      { internalType: 'uint256', name: 'subtractedValue', type: 'uint256' }\n    ],\n    name: 'decreaseAllowance',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'spender', type: 'address' },\n      { internalType: 'uint256', name: 'addedValue', type: 'uint256' }\n    ],\n    name: 'increaseAllowance',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'account', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' }\n    ],\n    name: 'mint',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'name',\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'recipient', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' }\n    ],\n    name: 'transfer',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'sender', type: 'address' },\n      { internalType: 'address', name: 'recipient', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' }\n    ],\n    name: 'transferFrom',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  }\n]\n\nexport const StakeAndYieldABI = [\n  {\n    inputs: [\n      { internalType: 'address', name: '_stakedToken', type: 'address' },\n      { internalType: 'address', name: '_rewardToken', type: 'address' },\n      { internalType: 'address', name: '_yieldRewardToken', type: 'address' },\n      { internalType: 'uint256', name: '_daoShare', type: 'uint256' },\n      { internalType: 'address', name: '_daoWallet', type: 'address' },\n      { internalType: 'address', name: '_controller', type: 'address' },\n      { internalType: 'bool', name: '_exitable', type: 'bool' }\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'stakeType',\n        type: 'uint256'\n      }\n    ],\n    name: 'Deposit',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      }\n    ],\n    name: 'EmergencyWithdraw',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'stakeType',\n        type: 'uint256'\n      }\n    ],\n    name: 'Exit',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'previousOwner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address'\n      }\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'stakeType',\n        type: 'uint256'\n      }\n    ],\n    name: 'RewardClaimed',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'stakeType',\n        type: 'uint256'\n      }\n    ],\n    name: 'Unfreeze',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'stakeType',\n        type: 'uint256'\n      }\n    ],\n    name: 'Withdraw',\n    type: 'event'\n  },\n  {\n    inputs: [],\n    name: 'EXIT_PERIOD',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'PERIOD',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: '_totalBurned',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: '_totalExit',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: '_totalSupply',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: '_totalSupplyYield',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: '_totalYieldWithdrawed',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'allowEmergencyWithdraw',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'account', type: 'address' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' }\n    ],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'claim',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'controller',\n    outputs: [\n      { internalType: 'contract IController', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'daoShare',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'daoWallet',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' },\n      { internalType: 'bool', name: '_exit', type: 'bool' }\n    ],\n    name: 'deposit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_user', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' },\n      { internalType: 'bool', name: '_exit', type: 'bool' }\n    ],\n    name: 'depositFor',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'earned',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'account', type: 'address' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' }\n    ],\n    name: 'earned',\n    outputs: [\n      { internalType: 'uint256', name: '', type: 'uint256' },\n      { internalType: 'uint256', name: '', type: 'uint256' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_tokenAddr', type: 'address' },\n      { internalType: 'address', name: '_to', type: 'address' },\n      { internalType: 'uint256', name: '_amount', type: 'uint256' }\n    ],\n    name: 'emergencyWithdrawERC20Tokens',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'address', name: 'addr', type: 'address' }\n    ],\n    name: 'emergencyWithdrawETH',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],\n    name: 'emergencyWithdrawFor',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'exitBalance',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'exitRewardDenominator',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'exitable',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'getRewardToken',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'lastTimeRewardApplicable',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'lastUpdateTime',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'lastUpdatedBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'reward', type: 'uint256' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' }\n    ],\n    name: 'notifyRewardAmount',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'operator',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'periodFinish',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'stakeType', type: 'uint256' }],\n    name: 'rewardPerToken',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'rewardRate',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'rewardRateYield',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'rewardTillNowPerToken',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'rewardToken',\n    outputs: [\n      { internalType: 'contract StandardToken', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'scale',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'bool', name: '_val', type: 'bool' }],\n    name: 'setAllowEmergencyWithdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_controller', type: 'address' }],\n    name: 'setController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_daoShare', type: 'uint256' }],\n    name: 'setDaoShare',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_daoWallet', type: 'address' }],\n    name: 'setDaoWallet',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'bool', name: '_val', type: 'bool' }],\n    name: 'setExit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'period', type: 'uint256' }],\n    name: 'setExitPeriod',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_val', type: 'uint256' }],\n    name: 'setExitRewardDenominator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'bool', name: '_val', type: 'bool' }],\n    name: 'setExitable',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_addr', type: 'address' }],\n    name: 'setOperator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'period', type: 'uint256' }],\n    name: 'setPeriod',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'stakedToken',\n    outputs: [\n      { internalType: 'contract StandardToken', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'totalExit',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'stakeType', type: 'uint256' }],\n    name: 'totalSupply',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'totalYieldWithdrawed',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'amount', type: 'uint256' }],\n    name: 'unfreeze',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'unfreezeAllAndClaim',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'userInfo',\n    outputs: [\n      { internalType: 'uint256[15]', name: 'numbers', type: 'uint256[15]' },\n      { internalType: 'address', name: 'rewardTokenAddress', type: 'address' },\n      { internalType: 'address', name: 'stakedTokenAddress', type: 'address' },\n      { internalType: 'address', name: 'controllerAddress', type: 'address' },\n      { internalType: 'address', name: 'strategyAddress', type: 'address' },\n      { internalType: 'bool', name: 'exit', type: 'bool' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'users',\n    outputs: [\n      { internalType: 'uint256', name: 'balance', type: 'uint256' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' },\n      { internalType: 'uint256', name: 'paidReward', type: 'uint256' },\n      { internalType: 'uint256', name: 'yieldPaidReward', type: 'uint256' },\n      { internalType: 'uint256', name: 'paidRewardPerToken', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'yieldPaidRewardPerToken',\n        type: 'uint256'\n      },\n      { internalType: 'uint256', name: 'withdrawable', type: 'uint256' },\n      { internalType: 'uint256', name: 'withdrawableExit', type: 'uint256' },\n      { internalType: 'uint256', name: 'withdrawTime', type: 'uint256' },\n      { internalType: 'bool', name: 'exit', type: 'bool' },\n      { internalType: 'uint256', name: 'exitStartTime', type: 'uint256' },\n      { internalType: 'uint256', name: 'exitAmountTillNow', type: 'uint256' },\n      { internalType: 'uint256', name: 'lastCliamTime', type: 'uint256' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'withdrawToBurn',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'withdrawUnfreezed',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'yieldRewardTillNowPerToken',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'yieldRewardToken',\n    outputs: [\n      { internalType: 'contract StandardToken', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  }\n]\nexport const StakeAndYieldOldABI = [\n  {\n    inputs: [\n      { internalType: 'address', name: '_stakedToken', type: 'address' },\n      { internalType: 'address', name: '_rewardToken', type: 'address' },\n      { internalType: 'address', name: '_yieldRewardToken', type: 'address' },\n      { internalType: 'uint256', name: '_daoShare', type: 'uint256' },\n      { internalType: 'address', name: '_daoWallet', type: 'address' },\n      { internalType: 'address', name: '_controller', type: 'address' },\n      { internalType: 'bool', name: '_exitable', type: 'bool' }\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'stakeType',\n        type: 'uint256'\n      }\n    ],\n    name: 'Deposit',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      }\n    ],\n    name: 'EmergencyWithdraw',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'stakeType',\n        type: 'uint256'\n      }\n    ],\n    name: 'Exit',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'previousOwner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address'\n      }\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'stakeType',\n        type: 'uint256'\n      }\n    ],\n    name: 'RewardClaimed',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'stakeType',\n        type: 'uint256'\n      }\n    ],\n    name: 'Unfreeze',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'user',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'stakeType',\n        type: 'uint256'\n      }\n    ],\n    name: 'Withdraw',\n    type: 'event'\n  },\n  {\n    inputs: [],\n    name: 'EXIT_PERIOD',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'PERIOD',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: '_totalBurned',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: '_totalExit',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: '_totalSupply',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: '_totalSupplyYield',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: '_totalYieldWithdrawed',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'allowEmergencyWithdraw',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'account', type: 'address' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' }\n    ],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'claim',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'controller',\n    outputs: [\n      { internalType: 'contract IController', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'daoShare',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'daoWallet',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' },\n      { internalType: 'bool', name: '_exit', type: 'bool' }\n    ],\n    name: 'deposit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_user', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' },\n      { internalType: 'bool', name: '_exit', type: 'bool' }\n    ],\n    name: 'depositFor',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'earned',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'account', type: 'address' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' }\n    ],\n    name: 'earned',\n    outputs: [\n      { internalType: 'uint256', name: '', type: 'uint256' },\n      { internalType: 'uint256', name: '', type: 'uint256' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_tokenAddr', type: 'address' },\n      { internalType: 'address', name: '_to', type: 'address' },\n      { internalType: 'uint256', name: '_amount', type: 'uint256' }\n    ],\n    name: 'emergencyWithdrawERC20Tokens',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'address', name: 'addr', type: 'address' }\n    ],\n    name: 'emergencyWithdrawETH',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],\n    name: 'emergencyWithdrawFor',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'exitBalance',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'exitRewardDenominator',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'exitable',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'getRewardToken',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'lastTimeRewardApplicable',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'lastUpdateTime',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'lastUpdatedBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'reward', type: 'uint256' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' }\n    ],\n    name: 'notifyRewardAmount',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'operator',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'periodFinish',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'stakeType', type: 'uint256' }],\n    name: 'rewardPerToken',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'rewardRate',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'rewardRateYield',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'rewardTillNowPerToken',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'rewardToken',\n    outputs: [\n      { internalType: 'contract StandardToken', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'scale',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'bool', name: '_val', type: 'bool' }],\n    name: 'setAllowEmergencyWithdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_controller', type: 'address' }],\n    name: 'setController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_daoShare', type: 'uint256' }],\n    name: 'setDaoShare',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_daoWallet', type: 'address' }],\n    name: 'setDaoWallet',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'bool', name: '_val', type: 'bool' }],\n    name: 'setExit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'period', type: 'uint256' }],\n    name: 'setExitPeriod',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_val', type: 'uint256' }],\n    name: 'setExitRewardDenominator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'bool', name: '_val', type: 'bool' }],\n    name: 'setExitable',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_addr', type: 'address' }],\n    name: 'setOperator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'period', type: 'uint256' }],\n    name: 'setPeriod',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'stakedToken',\n    outputs: [\n      { internalType: 'contract StandardToken', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'totalExit',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'stakeType', type: 'uint256' }],\n    name: 'totalSupply',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'totalYieldWithdrawed',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'amount', type: 'uint256' }],\n    name: 'unfreeze',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'unfreezeAllAndClaim',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'userInfo',\n    outputs: [\n      { internalType: 'uint256[15]', name: 'numbers', type: 'uint256[15]' },\n      { internalType: 'address', name: 'rewardTokenAddress', type: 'address' },\n      { internalType: 'address', name: 'stakedTokenAddress', type: 'address' },\n      { internalType: 'address', name: 'controllerAddress', type: 'address' },\n      { internalType: 'address', name: 'strategyAddress', type: 'address' },\n      { internalType: 'bool', name: 'exit', type: 'bool' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'users',\n    outputs: [\n      { internalType: 'uint256', name: 'balance', type: 'uint256' },\n      { internalType: 'uint256', name: 'stakeType', type: 'uint256' },\n      { internalType: 'uint256', name: 'paidReward', type: 'uint256' },\n      { internalType: 'uint256', name: 'yieldPaidReward', type: 'uint256' },\n      { internalType: 'uint256', name: 'paidRewardPerToken', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'yieldPaidRewardPerToken',\n        type: 'uint256'\n      },\n      { internalType: 'uint256', name: 'withdrawable', type: 'uint256' },\n      { internalType: 'uint256', name: 'withdrawableExit', type: 'uint256' },\n      { internalType: 'uint256', name: 'withdrawTime', type: 'uint256' },\n      { internalType: 'bool', name: 'exit', type: 'bool' },\n      { internalType: 'uint256', name: 'exitStartTime', type: 'uint256' },\n      { internalType: 'uint256', name: 'exitAmountTillNow', type: 'uint256' },\n      { internalType: 'uint256', name: 'lastCliamTime', type: 'uint256' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'withdrawToBurn',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'withdrawUnfreezed',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'yieldRewardTillNowPerToken',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'yieldRewardToken',\n    outputs: [\n      { internalType: 'contract StandardToken', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  }\n]\n\nexport const ControllerABI = [\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'previousOwner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address'\n      }\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event'\n  },\n  {\n    inputs: [],\n    name: 'AMM',\n    outputs: [\n      {\n        internalType: 'contract IAutomaticMarketMaker',\n        name: '',\n        type: 'address'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'DEUS',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'vault', type: 'address' },\n      { internalType: 'address', name: 'strategy', type: 'address' },\n      { internalType: 'address', name: 'exitToken', type: 'address' },\n      { internalType: 'uint256', name: 'multiplier', type: 'uint256' }\n    ],\n    name: 'addStrategy',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'address', name: 'rewardToken', type: 'address' },\n      { internalType: 'address', name: 'recipient', type: 'address' }\n    ],\n    name: 'buyForStrategy',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'vault', type: 'address' },\n      { internalType: 'address', name: 'strategy', type: 'address' }\n    ],\n    name: 'delStrategy',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'address', name: 'addr', type: 'address' }\n    ],\n    name: 'depositForStrategy',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'depositWETH',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_tokenAddr', type: 'address' },\n      { internalType: 'address', name: '_to', type: 'address' },\n      { internalType: 'uint256', name: '_amount', type: 'uint256' }\n    ],\n    name: 'emergencyWithdrawERC20Tokens',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'address', name: 'addr', type: 'address' }\n    ],\n    name: 'emergencyWithdrawETH',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'exitTokens',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'vault', type: 'address' }],\n    name: 'getStrategy',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'minBuyFromAMM',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'multipliers',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'operator',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_user', type: 'address' },\n      { internalType: 'uint256', name: '_amount', type: 'uint256' }\n    ],\n    name: 'sendExitToken',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_val', type: 'uint256' }],\n    name: 'setMinBuyFromAMM',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'vault', type: 'address' },\n      { internalType: 'uint256', name: 'multiplier', type: 'uint256' }\n    ],\n    name: 'setMultiplier',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_addr', type: 'address' }],\n    name: 'setOperator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'strategies',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'uniswapRouter',\n    outputs: [\n      { internalType: 'contract IUniswapV2Router02', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'vaults',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'weth',\n    outputs: [{ internalType: 'contract IWETH', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'amount', type: 'uint256' }],\n    name: 'withdrawETH',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'yweth',\n    outputs: [\n      { internalType: 'contract IYearnWETH', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  { stateMutability: 'payable', type: 'receive' }\n]\n\nexport const YearnStrategyABI = [\n  {\n    inputs: [\n      { internalType: 'address', name: '_vault', type: 'address' },\n      { internalType: 'address', name: '_controller', type: 'address' }\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'previousOwner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address'\n      }\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event'\n  },\n  {\n    inputs: [],\n    name: 'calculateRewards',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'controller',\n    outputs: [\n      { internalType: 'contract IController', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_tokenAddr', type: 'address' },\n      { internalType: 'address', name: '_to', type: 'address' },\n      { internalType: 'uint256', name: '_amount', type: 'uint256' }\n    ],\n    name: 'emergencyWithdrawERC20Tokens',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'address', name: 'addr', type: 'address' }\n    ],\n    name: 'emergencyWithdrawETH',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'ETHPerToken', type: 'uint256' }],\n    name: 'epoch',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'ethPushedToYearn',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'getLastEpochTime',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'lastBalance',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'lastEpochTime',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'lastYieldWithdrawed',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'minDepositable',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'minRewards',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'operator',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'pendingBalance',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_controller', type: 'address' },\n      { internalType: 'address', name: '_vault', type: 'address' }\n    ],\n    name: 'setController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_val', type: 'uint256' }],\n    name: 'setMinDepositable',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_val', type: 'uint256' }],\n    name: 'setMinRewards',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_addr', type: 'address' }],\n    name: 'setOperator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_val', type: 'uint256' }],\n    name: 'setYearnFeesPercent',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'vault',\n    outputs: [\n      { internalType: 'contract IStakeAndYield', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'weth',\n    outputs: [{ internalType: 'contract IWETH', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'yearFeesPercent',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'yweth',\n    outputs: [\n      { internalType: 'contract IYearnWETH', name: '', type: 'address' }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  }\n]\n\nexport const BridgeABI = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_muon\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"_mintable\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"_minReqSigs\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"_fee\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"_bridgeReserve\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"_deiAddress\", \"type\": \"address\" }], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"fromChain\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"txId\", \"type\": \"uint256\" }], \"name\": \"Claim\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"toChain\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"txId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"referralCode\", \"type\": \"uint256\" }], \"name\": \"Deposit\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"previousOwner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"OwnershipTransferred\", \"type\": \"event\" }, { \"inputs\": [], \"name\": \"ETH_APP_ID\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"bridgeReserve\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fromChain\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"toChain\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"currentBlockNo\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"txBlockNo\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"txId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"_reqId\", \"type\": \"bytes\" }, { \"components\": [{ \"internalType\": \"uint256\", \"name\": \"signature\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"nonce\", \"type\": \"address\" }], \"internalType\": \"struct SchnorrSign[]\", \"name\": \"sigs\", \"type\": \"tuple[]\" }], \"name\": \"claim\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"name\": \"claimedTxs\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"collat_usd_price\", \"type\": \"uint256\" }], \"name\": \"collatDollarBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"name\": \"confirmationBlocks\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"deiAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"toChain\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"referralCode\", \"type\": \"uint256\" }], \"name\": \"deposit\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"toChain\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"referralCode\", \"type\": \"uint256\" }], \"name\": \"depositFor\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"txId\", \"type\": \"uint256\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_tokenAddr\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"_to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"emergencyWithdrawERC20Tokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"addr\", \"type\": \"address\" }], \"name\": \"emergencyWithdrawETH\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"fee\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getExecutingChainID\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_txId\", \"type\": \"uint256\" }], \"name\": \"getTx\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"txId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fromChain\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"toChain\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"txBlockNo\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"currentBlockNo\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"toChain\", \"type\": \"uint256\" }], \"name\": \"getUserTxs\", \"outputs\": [{ \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"lastTxId\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"minReqSigs\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"mintable\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"muonContract\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"network\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"fromChain\", \"type\": \"uint256\" }, { \"internalType\": \"uint256[]\", \"name\": \"ids\", \"type\": \"uint256[]\" }], \"name\": \"pendingTxs\", \"outputs\": [{ \"internalType\": \"bool[]\", \"name\": \"unclaimedIds\", \"type\": \"bool[]\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"renounceOwnership\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"scale\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_bridgeReserve\", \"type\": \"uint256\" }], \"name\": \"setBridgeReserve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"chainID\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"confirmationBlock\", \"type\": \"uint256\" }], \"name\": \"setConfirmationBlock\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_fee\", \"type\": \"uint256\" }], \"name\": \"setFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_minReqSigs\", \"type\": \"uint256\" }], \"name\": \"setMinReqSigs\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"bool\", \"name\": \"_mintable\", \"type\": \"bool\" }], \"name\": \"setMintable\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_network\", \"type\": \"uint256\" }], \"name\": \"setNetworkID\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_network\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"_addr\", \"type\": \"address\" }], \"name\": \"setSideContract\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"tokenAddress\", \"type\": \"address\" }], \"name\": \"setToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"name\": \"sideContracts\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"name\": \"tokens\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"transferOwnership\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"name\": \"txs\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"txId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fromChain\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"toChain\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"txBlockNo\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"name\": \"userTxs\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }]\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n// import { isAddress } from '@ethersproject/address'\nimport { ERC20ABI } from '../../utils/StakingABI'\n\nimport { getBalanceNumber } from '../../helper/formatBalance'\nimport multicall from '../../helper/multicall'\nimport { useCrossWeb3 } from '../../hooks/useWeb3'\nimport { ChainId } from '../../constant/web3'\n\nconst useTokenBalances = (chains, tokens, fetchData) => {\n  const [balances, setBalances] = useState(tokens)\n  const { account, chainId } = useWeb3React()\n  const ethWeb3 = useCrossWeb3(ChainId.ETH)\n  const bscWeb3 = useCrossWeb3(ChainId.BSC)\n  const rinkebyWeb3 = useCrossWeb3(ChainId.RINKEBY)\n  const bscTestWeb3 = useCrossWeb3(ChainId.BSC_TESTNET)\n  const ftmWeb3 = useCrossWeb3(ChainId.FTM)\n  const polygonWeb3 = useCrossWeb3(ChainId.MATIC)\n  const web3s = {\n    [ChainId.ETH]: ethWeb3,\n    [ChainId.FTM]: ftmWeb3,\n    [ChainId.MATIC]: polygonWeb3,\n    [ChainId.BSC]: bscWeb3,\n    // [ChainId.RINKEBY]: rinkebyWeb3,\n    // [ChainId.BSC_TESTNET]: bscTestWeb3,\n  }\n  useEffect(() => {\n    const fetchBalances = async () => {\n      chains.map(async (chain) => {\n        const calls = tokens.filter(token => token.address[chain.network]).map((token, index) => {\n          return {\n            address: token.address[chain.network],\n            name: 'balanceOf',\n            params: [account]\n          }\n        })\n        try {\n          const result = await multicall(web3s[chain.network], ERC20ABI, calls, chain.network)\n          for (let i = 0; i < result.length; i++) {\n            const balance = result[i]\n            const address = calls[i].address\n            let token = tokens.find((token) => token.address[chain.network] === address)\n            token.balances[chain.network] = getBalanceNumber(balance, tokens[address]?.decimals)\n          }\n        } catch (error) {\n          console.log(\"error at useTokenBalances\", error);\n        }\n      })\n      setBalances(tokens)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, tokens, chainId, fetchData, chains, web3s])\n\n  return balances\n}\n\nexport default useTokenBalances\n","import React from 'react'\nimport ReactModal from 'react-modal'\nimport { BridgeTokens } from '../../constant/token'\nimport { chains } from './data'\nif (typeof window !== 'undefined') {\n  ReactModal.setAppElement('body')\n}\nconst customStyles = {\n  overlay: {\n    zIndex: 2,\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: '560px',\n    width: '95% ',\n    background: '#242424',\n    border: '1px solid #242424',\n    borderRadius: '10px',\n    padding: '26px 20px'\n    // overflow: 'unset'\n  }\n}\n\nconst TokenModal = (props) => {\n  const { open, hide, changeToken, tokens, tokenId, selectedChain } = props\n  const [chain, setChain] = React.useState(chains[1])\n  const [showTokens, setShowTokens] = React.useState(tokens)\n  React.useEffect(() => {\n    if (tokenId) {\n      let result = showTokens.filter((token) => token.tokenId === tokenId)\n      setShowTokens(result)\n    } else {\n      setShowTokens(tokens)\n    }\n  }, [tokenId]) // eslint-disable-line\n\n  const closeModal = () => {\n    hide()\n    setChain('')\n  }\n\n  return (\n    <ReactModal\n      isOpen={open}\n      style={customStyles}\n      onRequestClose={closeModal}\n      shouldCloseOnOverlayClick={true}\n    >\n      <div>\n        <div className=\"modal-header\">\n          <div className=\"modal-title\">Select an asset</div>\n          <span onClick={closeModal} className=\"close\">\n            &times;\n          </span>\n        </div>\n        <div className=\"border-bottom\"></div>\n\n        <div className=\"content-modal-bridge\">\n          <div className=\"filter\">Select Chain</div>\n          <ul className=\"bridge-radio\">\n            {chains.map((chain, index) => (\n              <li key={index} className=\"pointer\">\n                <input\n                  type=\"radio\"\n                  id={chain.name}\n                  name=\"chainRadio\"\n                  onChange={() => setChain(chain)}\n                  // checked={chain.name === selectedChain.name}\n                  disabled={chain.network === selectedChain}\n                />\n                <label htmlFor={chain.name} className={`${chain.name} pointer`}>\n                  {chain.name}\n                </label>\n              </li>\n            ))}\n          </ul>\n          <div className=\"flex-between token-name\">\n            <div>Token name</div>\n            <div className=\"pr-13\">Balance</div>\n          </div>\n          <div className=\"border-bottom\"></div>\n          <div className=\"container-token\">\n            {chain ? (\n              BridgeTokens[Number(chain.network)].map((token, index) => {\n\n                return (\n                  <div className=\"token-list pointer\" key={index} onClick={() => {\n                    changeToken(token, chain.network)\n                    closeModal()\n                  }}>\n                    <div className=\"token-list-item \">\n                      <img src={`${token.logo}`} alt={token.logo} />\n                      <div>\n                        {token.symbol}\n                        <span className=\"bridge-container-badge-modal\">\n                          (\n                          <span\n                            className={`modal-badge badge badge-${chain.name}`}\n                          >\n                            {chain.name}\n                          </span>\n                          )\n                        </span>\n                      </div>\n                    </div>\n                    <div>{tokens[index].balances[chain.network]}</div>\n                  </div>\n                )\n              })\n            ) : (\n              <div className=\"desc-select-chain\">Select a Chain</div>\n            )}\n          </div>\n        </div>\n      </div>\n    </ReactModal>\n  )\n}\n\nexport default TokenModal\n","import { useLocation } from 'react-router'\nimport { getCorrectChains } from '../constant/correctChain'\nimport useChain from './useChain'\n\nconst useCorrectChain = () => {\n    const location = useLocation()\n    let validNetworks = getCorrectChains(location.pathname)\n    validNetworks = validNetworks.filter((a) => a);\n    const chainId = useChain(validNetworks)\n    return { validNetworks, chainId }\n}\n\nexport default useCorrectChain","import { BRIDGE_ADDRESS } from \"../constant/contracts\"\nimport { getBridgeContract, } from \"./contractHelpers\"\nimport { getToWei } from \"./formatBalance\"\nimport multicall from \"./multicall\"\n// import BridgeABI from '../config/abi/BridgeABI.json'\nimport BridgeABI from '../config/abi/NewBridgeABI.json'\nimport { blockTimes } from \"../components/Bridge/data\"\nimport { forEach } from \"lodash\"\n\nexport const deposit = (amount, fromCurrency, toCurrency, web3) => {\n    const amountWie = getToWei(amount, fromCurrency.decimals).toFixed(0)\n    console.log(\"deposit\", amount, amountWie, toCurrency.chainId, fromCurrency.id)\n    return getBridgeContract(web3, fromCurrency.chainId)\n        .methods\n        .deposit(amountWie, toCurrency.chainId, fromCurrency.id)\n}\n\n\nexport const getClaimTokens = async (networks, account, web3s) => {\n    let claims = []\n\n    for (let index = 0; index < networks.length; index++) {\n        const chainId = networks[index]\n        let dest = networks.filter((network) => network !== chainId)\n\n        let userTxs = []\n        let userTxsResponse = []\n        let pendingClaimTxs = []\n        let currentBlockNo = 0\n\n        try {\n            currentBlockNo = await web3s[chainId].eth.getBlockNumber()\n        } catch (error) {\n            console.log(\"getBlockNumber error\", error);\n        }\n        \n        for (let i = 0; i < dest.length; i++) {\n            const destChainId = dest[i]\n            const userTx = {\n                address: BRIDGE_ADDRESS[chainId],\n                name: \"getUserTxs\",\n                params: [account, destChainId]\n            }\n            userTxs.push(userTx)\n        }\n\n        try {\n            const mul = await multicall(web3s[chainId], BridgeABI, userTxs, chainId)\n            userTxsResponse = mul\n            // console.log(\"userTxsResponse\", userTxsResponse);\n        } catch (error) {\n            console.log(\"getUserTxs failed with chainId\",chainId, error)\n        }\n\n        for (let i = 0; i < dest.length; i++) {\n            const destChainId = dest[i]\n            try {\n                const pendingTx = await getBridgeContract(web3s[destChainId], destChainId)\n                    .methods\n                    .pendingTxs(chainId, userTxsResponse[i][0].map(resp => resp.toString()))\n                    .call()\n\n                const pendingTxs = pendingTx.reduce((out, bool, index) => (bool ? out : out.concat(userTxsResponse[i][0][index])), [])\n\n                pendingClaimTxs = [...pendingClaimTxs, ...pendingTxs]\n\n            } catch (error) {\n                console.log(\"pendingTxs failed with chainId\", destChainId,error)\n            }\n        }\n\n        const Txs = []\n        for (let k = 0; k < pendingClaimTxs.length; k++) {\n            const tx = {\n                address: BRIDGE_ADDRESS[chainId],\n                name: \"getTransaction\",\n                params: [pendingClaimTxs[k]]\n            }\n            Txs.push(tx)\n        }\n\n        try {\n            const mul = await multicall(web3s[chainId], BridgeABI, Txs, chainId)\n            let mulWithClaimBlock = []\n            forEach(mul, (res, index) => {\n                mulWithClaimBlock.push({ ...res, remainingBlock: Number(res.txBlockNo) + blockTimes[chainId] - Number(currentBlockNo) })\n            })\n\n            // console.log(\"Txs = \", mul);\n            claims = [...claims, ...mulWithClaimBlock]\n        } catch (error) {\n            console.log(\"Txs failed chainId \",chainId, error)\n        }\n    }\n    return claims\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport BridgeBox from '../../components/Bridge/BridgeBox';\nimport ClaimToken from '../../components/Bridge/ClaimToken';\nimport Instruction from '../../components/Bridge/Instruction';\nimport BridgeAction from '../../components/App/Swap/SwapAction';\nimport { chains, tokens } from '../../components/Bridge/data'\nimport useTokenBalances from './../../components/Bridge/getBalances'\nimport TokenModal from '../../components/Bridge/TokenModal';\nimport { useWeb3React } from '@web3-react/core';\nimport { useDebounce } from '../../hooks/useDebounce';\nimport { useAllowance } from '../../hooks/useAllowance';\nimport useCorrectChain from '../../hooks/useCorrectChain';\nimport { BridgeTokens } from '../../constant/token'\nimport { useApprove } from '../../hooks/useApprove';\nimport BigNumber from 'bignumber.js';\nimport { BRIDGE_ADDRESS } from '../../constant/contracts';\nimport Muon from 'muon'\nimport { useClaim, useDeposit, useGetNewClaim } from '../../hooks/useBridge';\nimport { ChainId, NameChainId } from '../../constant/web3';\nimport './bridge.css'\n\n\nconst Bridge = () => {\n    const muon = new Muon(process.env.REACT_APP_MUON_NODE_GATEWAY)\n    const { validNetworks, chainId } = useCorrectChain()\n    const [syncChainId, setSyncChainId] = useState(chainId)\n    const { account } = useWeb3React()\n    const [open, setOpen] = useState(false)\n    const [claims, setClaims] = useState([])\n    const [tokenId, setTokenId] = useState('')\n    const [lock, setLock] = useState('')\n    const [target, setTarget] = useState()\n    const [selectedChain, setSelectedChain] = useState('')\n    const [fetch, setFetch] = useState('')\n\n    const [fastUpdate, setFastUpdate] = useState(0)\n\n    const tokensBalance = useTokenBalances(chains, tokens, fetch)\n\n    const getAnotherChainId = (myChainId) => {\n        let residualChains = validNetworks.filter((a) => a !== myChainId);\n        return residualChains[0]\n    }\n\n    const tokenIndex = 0\n    const [swapState, setSwapState] = useState({\n        from: BridgeTokens[syncChainId][tokenIndex],\n        to: BridgeTokens[getAnotherChainId(syncChainId)][tokenIndex],\n    })\n\n    const [amountIn, setAmountIn] = useState(\"\")\n    const debouncedAmountIn = useDebounce(amountIn, 500);\n\n    const [amountOut, setAmountOut] = useState(\"\")\n    const contractAddress = BRIDGE_ADDRESS[syncChainId]\n    const allowance = useAllowance(swapState.from, contractAddress, syncChainId)\n\n    const [isApproved, setIsApproved] = useState(null)\n    const [isPreApproved, setIsPreApproved] = useState(null)\n    const [approveLoading, setApproveLoading] = useState(false)\n\n    useEffect(() => {\n        setAmountOut(debouncedAmountIn ?? \"\")\n    }, [debouncedAmountIn])\n\n    useEffect(() => {\n        if (amountIn === \"\")\n            setAmountOut(\"\")\n    }, [amountIn])\n\n    useEffect(() => {\n        if (syncChainId !== swapState.from.chainId)\n            setSyncChainId(swapState.from.chainId)\n    }, [swapState.from.chainId, syncChainId])\n\n    useEffect(() => {\n        setIsPreApproved(null)\n        setIsApproved(null)\n    }, [swapState.from])\n\n    useEffect(() => {\n        if (isPreApproved == null) {\n            if (allowance.toString() === \"-1\") {\n                setIsPreApproved(null) //doNothing\n            } else {\n                if (allowance.gt(0)) {\n                    setIsPreApproved(true)\n                } else {\n                    setIsPreApproved(false)\n                }\n            }\n        } else {\n            if (allowance.gt(0)) {\n                setIsApproved(true)\n            }\n        }\n        //eslint-disable-next-line \n    }, [allowance]) //isPreApproved ?\n\n    const { onApprove } = useApprove(swapState.from, contractAddress, chainId)\n    const { onDeposit } = useDeposit(amountIn, swapState)\n    const { getClaim } = useGetNewClaim()\n    const { handleClaim } = useClaim(muon, lock, setLock, setFetch)\n\n    useEffect(() => {\n        const get = async () => {\n            const claims = await getClaim()\n            setClaims(claims)\n        }\n        if (account) {\n            get()\n        }\n    }, [getClaim, fastUpdate, account])\n\n\n    const handleOpenModal = (data, tokenId) => {\n        setTarget(data)\n        if (tokenId) {\n            setTokenId(tokenId)\n            setSelectedChain(swapState.from.chainId)\n        }\n        setOpen(true)\n    }\n\n\n    const changeToken = (token, chainId) => {\n        // const type = target\n        // setSwapState({ ...swapState, [type]: { ...token } })\n        \n        const other = target === \"from\" ? \"to\" : \"from\"\n        setSwapState((prev) => ({\n            [target]: { ...token },\n            [other]: BridgeTokens[prev[other].chainId === chainId ? getAnotherChainId(chainId) : prev[other].chainId].filter(t => t.id === token.id)[0],\n        }))\n    }\n\n\n    const swapTokensPosition = () => {\n        setSwapState({ from: swapState.to, to: swapState.from })\n        setAmountOut(\"\")\n        setAmountIn(\"\")\n    }\n\n\n    const handleApprove = useCallback(async () => {\n        try {\n            setApproveLoading(true)\n            const tx = await onApprove()\n            if (tx.status) {\n                setIsApproved(new BigNumber(tx.events.Approval.raw.data, 16).gt(0))\n            } else {\n                console.log(\"Approved Failed\");\n            }\n            setApproveLoading(false)\n\n        } catch (e) {\n            setApproveLoading(false)\n            console.error(e)\n        }\n    }, [onApprove])\n\n\n    const handleSwap = useCallback(async () => {\n        try {\n            const tx = await onDeposit()\n            if (tx.status) {\n                // console.log(\"swap did\");\n                setAmountIn(\"\")\n                setFastUpdate(fastUpdate => fastUpdate + 1)\n            } else {\n                console.log(\"Swap Failed\");\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }, [onDeposit])\n\n\n    return (<div className=\"wrap-bridge\">\n        <div className=\"width-340\">\n            <Instruction />\n        </div>\n\n        <div className=\"container-bridge\">\n            <div className=\"bridge-title\">\n                <h1>DEUS Bridge</h1>\n            </div>\n            <h3>Secured by Muon</h3>\n\n            <div className=\"wrap-bridge-box\">\n                <div className=\"relative\">\n                    <BridgeBox\n                        title={<div >From <span style={{ padding: \"2px 4px\", borderRadius: \"4px\" }} className={`badge-${NameChainId[swapState.from.chainId]}`}>{NameChainId[swapState.from.chainId]}</span></div>}\n                        currency={swapState.from}\n                        {...swapState.from}\n                        amount={amountIn}\n                        setAmount={(data) => setAmountIn(data)}\n                        max={true}\n                        handleOpenModal={() => handleOpenModal('from')}\n                    />\n\n                    <div className=\"arrow pointer\" onClick={() => swapTokensPosition()}>\n                        <img src=\"/img/swap/swap-arrow.svg\" alt=\"arrow\" />\n                    </div>\n\n                    <BridgeBox\n                        title={<div >To <span style={{ padding: \"2px 4px\", borderRadius: \"4px\" }} className={`badge-${NameChainId[swapState.to.chainId]}`}>{NameChainId[swapState.to.chainId]}</span></div>}\n                        currency={swapState.to}\n                        {...swapState.to}\n                        amount={amountOut}\n                        readonly={true}\n                        handleOpenModal={() => handleOpenModal('to', swapState.from.tokenId)}\n                    />\n                </div>\n                <BridgeAction\n                    text=\"DEPOSIT\"\n                    bgColor=\"bg_bridge\"\n                    txColor=\"text1\"\n                    isPreApproved={isPreApproved}\n                    validNetworks={validNetworks}\n                    validNetwork={syncChainId}\n                    isApproved={isApproved}\n                    loading={approveLoading}\n                    handleApprove={handleApprove}\n                    handleSwap={handleSwap}\n                    TokensMap={null}\n                    swapState={swapState}\n                    amountIn={amountIn}\n                    amountOut={amountOut}\n                />\n\n            </div>\n\n            <TokenModal\n                tokens={tokensBalance}\n                open={open}\n                tokenId={tokenId}\n                selectedChain={selectedChain}\n                hide={() => {\n                    setOpen(!open)\n                    setTokenId('')\n                    setSelectedChain('')\n                }}\n                changeToken={(token, chainId) => changeToken(token, chainId)}\n            />\n        </div>\n        <div className=\"width-340\">\n            <ClaimToken\n                claims={claims}\n                chainId={chainId}\n                setFetch={(data) => setFetch(data)}\n                handleClaim={(claim, network) => handleClaim(claim, network)}\n            />\n        </div>\n    </div>);\n}\n\nexport default Bridge;","import useWeb3, { useCrossWeb3 } from './useWeb3'\nimport { useCallback } from \"react\"\nimport { useWeb3React } from '@web3-react/core'\nimport useRefresh from './useRefresh'\nimport { deposit, getClaimTokens } from '../helper/bridgeHelper'\nimport { SendWithToast } from '../helper/deiHelper'\nimport { fromWei } from '../helper/formatBalance'\n// import BridgeABI from '../config/abi/BridgeABI.json'\nimport BridgeABI from '../config/abi/NewBridgeABI.json'\nimport { BRIDGE_ADDRESS } from '../constant/contracts'\nimport { ChainId, NameChainId } from '../constant/web3'\nimport { getBridgeContract } from '../helper/contractHelpers'\nimport { formatBalance3 } from '../utils/utils'\n\n\nexport const useGetNewClaim = () => {\n    const { account } = useWeb3React()\n    const { fastRefresh } = useRefresh()\n    //idk why but it tried to use the same state twice\n    // const web3s = {\n    //     4: useCrossWeb3(4),\n    //     97: useCrossWeb3(97)\n    // }\n    const ethWeb3 = useCrossWeb3(ChainId.ETH)\n    const bscWeb3 = useCrossWeb3(ChainId.BSC)\n    const rinkebyWeb3 = useCrossWeb3(ChainId.RINKEBY)\n    const bscTestWeb3 = useCrossWeb3(ChainId.BSC_TESTNET)\n    const ftmWeb3 = useCrossWeb3(ChainId.FTM)\n    const polygonWeb3 = useCrossWeb3(ChainId.MATIC)\n    const web3s = {\n        [ChainId.ETH]: ethWeb3,\n        [ChainId.FTM]: ftmWeb3,\n        [ChainId.MATIC]: polygonWeb3,\n        [ChainId.BSC]: bscWeb3,\n        // [ChainId.RINKEBY]: rinkebyWeb3,\n        // [ChainId.BSC_TESTNET]: bscTestWeb3,\n    }\n\n    const getClaim = useCallback(async () => {\n        const networks = Object.keys(web3s)\n        if (account && ethWeb3 && bscWeb3 && polygonWeb3 && ftmWeb3 && rinkebyWeb3 && bscTestWeb3) {\n            try {\n                return await getClaimTokens(networks, account, web3s)\n            } catch (error) {\n                console.log(error, 'getClaimTokens');\n                return []\n            }\n        }\n    }, [account, ethWeb3, bscWeb3, ftmWeb3, polygonWeb3, rinkebyWeb3, bscTestWeb3, fastRefresh]) // eslint-disable-line\n    return { getClaim }\n}\n\n\nexport const useClaim = (muon, lock, setLock, setFetch) => {\n    const { account, chainId } = useWeb3React()\n    const web3 = useWeb3()\n\n    const handleClaim = useCallback(async (claimTemp, network) => {\n        const claim = {\n            fromChain: claimTemp.fromChain.toString(),\n            toChain: claimTemp.toChain.toString(),\n            txId: claimTemp.txId.toString(),\n            amount: claimTemp.amount.toString(),\n            // txBlockNo: claimTemp.txBlockNo.toString(),\n            tokenId: claimTemp.tokenId.toString(),\n        }\n\n        // console.log(\"claim = \", claim);\n\n        if (\n            chainId !== network || (lock &&\n                lock.fromChain === claim.fromChain &&\n                lock.toChain === claim.toChain &&\n                lock.txId === claim.txId)\n        ) {\n            return\n        }\n\n        let amount = fromWei(claim.amount)\n        let abi = [BridgeABI.find(({ name, type }) => name === 'getTx' && type === 'function')]\n        const networkName = NameChainId[claim.fromChain].toLowerCase()\n        console.log({\n            address: BRIDGE_ADDRESS[Number(claim.fromChain)],\n            method: 'getTx',\n            params: [claim.txId],\n            abi,\n            network: networkName\n        })\n\n        try {\n            // const muonResponse = await muon\n            //     .app('eth')\n            //     .method('call', {\n            //         address: BRIDGE_ADDRESS[Number(claim.fromChain)],\n            //         method: 'getTx',\n            //         params: [claim.txId],\n            //         abi,\n            //         network: networkName,\n            //         hashTimestamp: false\n            //     })\n            //     .call()\n            const muonResponse = await muon\n                .app('deus_bridge')\n                .method('claim', {\n                    depositAddress: BRIDGE_ADDRESS[Number(claim.fromChain)],\n                    depositTxId: claim.txId,\n                    depositNetwork: networkName\n                })\n                .call()\n            console.log(\"muonResponse\", muonResponse)\n            console.log(\"res\", muonResponse.data.result)\n            let { sigs, reqId } = muonResponse\n            // let currentBlockNo = muonResponse.data.result.currentBlockNo\n            setLock(claim)\n            console.log(account,\n                claim.amount,\n                Number(claim.fromChain),\n                Number(claim.toChain),\n                claim.tokenId,\n                claim.txId,\n                reqId,\n                sigs);\n            const fn = getBridgeContract(web3, chainId).methods.claim(\n                account,\n                claim.amount,\n                Number(claim.fromChain),\n                Number(claim.toChain),\n                claim.tokenId,\n                // currentBlockNo,\n                // claim.txBlockNo,\n                claim.txId,\n                reqId,\n                sigs\n            )\n            //TODO find token with id\n            SendWithToast(fn, account, chainId, `Claim ${formatBalance3(amount)}`).then(() => {\n                setFetch(claim)\n                setLock('')\n            })\n        } catch (error) {\n            console.log('error happened in Claim', error)\n        }\n\n    }, [lock, setLock, setFetch, muon, account, web3, chainId])\n    return { handleClaim }\n}\n\nexport const useDeposit = (amount, swapState) => {\n    const { account, chainId } = useWeb3React()\n    const web3 = useWeb3()\n    const onDeposit = useCallback(async () => {\n        // console.log(amount, swapState);\n        if (chainId !== swapState.from.chainId || !swapState.to.chainId || !account || amount === '0' || amount === '') return\n\n        try {\n            const fn = deposit(amount, swapState.from, swapState.to, web3, account)\n            return await SendWithToast(fn, account, chainId, `Deposit ${amount} ${swapState.from.symbol}`)\n        } catch (error) {\n            console.log(\"error happened at useDeposit\");\n        }\n    }, [amount, swapState, web3, account, chainId])\n    return { onDeposit }\n}\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nconst useChain = (defaultChains = []) => {\n    const { chainId } = useWeb3React()\n    const isChain = defaultChains.indexOf(chainId) !== -1\n    const [validChain, setValidChain] = useState(isChain ? chainId : defaultChains[0])\n    useEffect(() => {\n        if (!chainId) setValidChain(defaultChains[0])\n        else {\n            if (defaultChains.indexOf(chainId) !== -1) {\n                setValidChain(chainId)\n            } else {\n                setValidChain(defaultChains[0])\n            }\n        }\n    }, [chainId, defaultChains])\n\n    return validChain\n}\n\nexport default useChain","import { useEffect, useState } from \"react\";\n\nexport function useDebounce(value, delay, hotValue) {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n        () => {\n            // Update debounced value after delay\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n            // Cancel the timeout if value changes (also on delay change or unmount)\n            // This is how we prevent debounced value from updating if value is changed ...\n            // .. within the delay period. Timeout gets cleared and restarted.\n            return () => {\n                if (value === \"\") setDebouncedValue(\"\")\n                clearTimeout(handler);\n            };\n        },\n        [value, delay] // Only re-call effect if value or delay changes\n    );\n\n    useEffect(\n        () => {\n            setDebouncedValue(hotValue);\n        },\n        [hotValue])\n\n    return debouncedValue;\n}","import BigNumber from \"bignumber.js\"\nimport { COLLATERAL_ADDRESS, COLLATERAL_POOL_ADDRESS, DEI_ADDRESS, DEI_COLLATERAL_ZAP, DEI_DEUS_ZAP, DEUS_ADDRESS, MINT_PATH } from \"../constant/contracts\"\nimport { isZero, TEN } from \"../constant/number\"\nimport { collateralToken } from \"../constant/token\"\nimport { ChainId } from \"../constant/web3\"\nimport { TransactionState } from \"../utils/constant\"\nimport { CustomTransaction, getTransactionLink } from \"../utils/explorers\"\nimport { fetcher, formatUnitAmount } from \"../utils/utils\"\nimport { getDeiContract, getDeiStakingContract, getCollateralPoolContract, getZapContract, getNewProxyMinterContract, getDeusSwapContract } from \"./contractHelpers\"\nimport { getToWei } from \"./formatBalance\"\n\nconst baseUrl = \"https://oracle4.deus.finance/dei\"\n\nexport const dollarDecimals = 6\nexport const collatUsdPrice = \"1000000\"\nconst LENGTH_COLLAT = {}\n\nconst COLLAT_PRICE = {\n    [ChainId.BSC_TESTNET]:\"1000000000000000000\",\n    [ChainId.BSC]:\"1000000000000000000\",\n}\n\nexport const makeCostData = (deiPrice, collatRatio, poolBalance = null, ceiling = null,decimals=6) => {\n    const dp = deiPrice ? `$${new BigNumber(deiPrice).toFixed(2)}` : null\n    const cr = collatRatio !== null ? `${new BigNumber(collatRatio).toFixed(2)}%` : null\n    const pc = poolBalance !== null && ceiling !== null ? formatUnitAmount(poolBalance) + ' / ' + formatUnitAmount(new BigNumber(ceiling).div(TEN.pow(decimals-6))) : null\n    const av = pc ? formatUnitAmount(new BigNumber(ceiling).minus(poolBalance).div(TEN.pow(decimals-6))) : null\n    return [{\n        name: 'DEI PRICE',\n        value: dp\n    }, {\n        name: 'COLLATERAL RATIO',\n        value: cr\n    }, {\n        name: 'POOL BALANCE / CEILING',\n        value: pc\n    }, {\n        name: 'AVAILABLE TO MINT',\n        value: av\n    }]\n}\n\nexport const makeCostDataRedeem = (collatRatio, poolBalance, chainId = ChainId.ETH) => {\n    const cToken = collateralToken[chainId]\n    const cr = collatRatio !== null ? `${new BigNumber(collatRatio).toFixed(2)}%` : null\n    const pb = poolBalance !== null ? `${formatUnitAmount(poolBalance)} ${cToken.symbol}` : null\n    return [{\n        name: 'COLLATERAL RATIO',\n        value: cr\n    }, {\n        name: 'POOL BALANCE',\n        value: pb\n    }]\n}\n\nexport const makeCostDataBuyBack = (deus_price, dei_price, pool, buyBack, recollateralize, address, chainId) => {\n    if (!chainId) return []\n    const cToken = collateralToken[chainId]\n    const deusPrice = deus_price !== null && !isNaN(deus_price) ? `$${new BigNumber(deus_price).toFixed(3)}` : null\n    const deiPrice = dei_price !== null && !isNaN(dei_price) ? `$${new BigNumber(dei_price).toFixed(3)}` : null\n    const p = pool ? pool : null\n    const bb = buyBack !== null && !isNaN(buyBack) ? `${formatUnitAmount(buyBack)} DEUS` : null\n    const rc = recollateralize !== null && !isNaN(recollateralize) ? `${formatUnitAmount(recollateralize)} ${cToken.symbol}` : null\n\n    return [{\n        name: 'EXCHANGE RATES',\n        title1: cToken.symbol,\n        value1: deiPrice,\n        title2: 'DEUS: ',\n        value2: deusPrice\n    }, {\n        name: 'AVAILABLE VALUE',\n        title1: 'To Buyback: ',\n        value1: bb,\n        title2: 'To Recollateralize: ',\n        value2: rc\n    }, {\n        name: 'POOL 🌊',\n        value1: p,\n        isLink: true,\n        path: getTransactionLink(chainId, address)\n    }]\n}\n\n//MULTICALL Array\nexport const getStakingData = (conf, account) => {\n    if (!conf) return []\n    return [\n        {\n            address: conf.stakingContract,\n            name: \"users\",\n            params: [account]\n        },\n        {\n            address: conf.stakingContract,\n            name: \"pendingReward\",\n            params: [account]\n        }\n    ]\n}\nexport const getStakingTokenData = (conf, account) => {\n    if (!account) return []\n    return [\n        {\n            address: conf.depositToken.address,\n            name: \"allowance\",\n            params: [account, conf.stakingContract]\n        },\n        {\n            address: conf.depositToken.address,\n            name: \"balanceOf\",\n            params: [account]\n        },\n        {\n            address: conf.depositToken.address,\n            name: \"balanceOf\",\n            params: [conf.stakingContract]\n        }\n    ]\n}\n\nexport const getHusdPoolData = (chainId = ChainId.ETH, collat_usd_price, account) => {\n    const LEN = LENGTH_COLLAT[chainId] ?? 3\n    let collaterals = []\n    for (let i = 0; i < LEN; i++) {\n        collaterals.push(COLLAT_PRICE[chainId] ?? collat_usd_price);\n    }\n    \n    let calls = [\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'collatDollarBalance',\n            params: [COLLAT_PRICE[chainId] ?? collat_usd_price],\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'availableExcessCollatDV',\n            params: [collaterals]\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'pool_ceiling',\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'redemption_fee',\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'minting_fee',\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'buyback_fee',\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'recollat_fee',\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'recollateralizePaused',\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'buyBackPaused',\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'mintPaused',\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'redeemPaused',\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'bonus_rate',\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'redemption_delay',\n        },\n    ]\n    if (account) {\n        calls = [...calls,\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'redeemDEUSBalances',\n            params: [account]\n        },\n        {\n            address: COLLATERAL_POOL_ADDRESS[chainId],\n            name: 'redeemCollateralBalances',\n            params: [account]\n        }]\n    }\n    return calls\n}\n\n//WRITE FUNCTIONS\nexport const SendWithToast = (fn, account, chainId, message, payload = {}) => {\n\n    if (!fn) return\n    let hash = null\n    const value = payload.value ? { value: payload.value } : {}\n    const customSend = { from: account, ...value }\n    return fn\n        .send(customSend)\n        .once('transactionHash', (tx) => {\n            hash = tx\n            CustomTransaction(TransactionState.LOADING, {\n                hash,\n                chainId: chainId,\n                message: message,\n            })\n        })\n        .once('receipt', () => CustomTransaction(TransactionState.SUCCESS, {\n            hash,\n            chainId: chainId,\n            message: message,\n        }))\n        .once('error', () => CustomTransaction(TransactionState.FAILED, {\n            hash,\n            chainId: chainId,\n            message: message,\n        }))\n}\n\nexport const DeiDeposit = (depositedToken, amount, address, web3) => {\n    console.log(getToWei(amount, depositedToken.decimals).toFixed(0));\n    return getDeiStakingContract(web3, address)\n        .methods\n        .deposit(getToWei(amount, depositedToken.decimals).toFixed(0))\n}\n\nexport const DeiWithdraw = (withdrawToken, amount, address, web3) => {\n    return getDeiStakingContract(web3, address)\n        .methods\n        .withdraw(getToWei(amount, withdrawToken.decimals).toFixed(0))\n}\n\nexport const buyBackDEUS = (amountIn, deus_price, expire_block, signature, pool_collateral_price = \"0\", account, chainId, web3) => {\n    return getCollateralPoolContract(web3, chainId)\n        .methods\n        .buyBackDEUS(amountIn, [pool_collateral_price], deus_price, expire_block, [signature])\n}\n\nexport const RecollateralizeDEI = (collateral_price, deus_price, expire_block, signature, amountIn, pool_collateral_price, account, chainId, web3) => {\n    return getCollateralPoolContract(web3, chainId)\n        .methods\n        .recollateralizeDEI([amountIn, pool_collateral_price, [collateral_price], deus_price, expire_block, [signature]])\n}\n\n//HUSD MINT\nexport const mint1t1DEI = (collateral_amount, collateral_price, expire_block, signature, chainId, web3) => {\n    return getCollateralPoolContract(web3, chainId)\n        .methods\n        .mint1t1DEI(collateral_amount, collateral_price, expire_block, [signature])\n}\n\nexport const mintFractional = (collateral_amount, deus_amount, collateral_price, deus_current_price, expireBlock, signature, chainId, web3) => {\n    return getCollateralPoolContract(web3, chainId)\n        .methods\n        .mintFractionalDEI(collateral_amount, deus_amount, collateral_price, deus_current_price, expireBlock, [signature])\n}\n\nexport const mintAlgorithmic = (deus_amount_d18, deus_current_price, expire_block, signature, chainId, web3) => {\n    return getCollateralPoolContract(web3, chainId)\n        .methods\n        .mintAlgorithmicDEI(deus_amount_d18, deus_current_price, expire_block, [signature])\n}\n\nexport const redeem1to1Dei = (amountIn, collateral_price, expire_block, signature, chainId, web3) => {\n    return getCollateralPoolContract(web3, chainId)\n        .methods\n        .redeem1t1DEI(amountIn, collateral_price, expire_block, [signature])\n}\n\nexport const redeemFractionalDei = (collateral_price, deus_price, expire_block, signature, amountIn, chainId, web3) => {\n    return getCollateralPoolContract(web3, chainId)\n        .methods\n        .redeemFractionalDEI(amountIn, collateral_price, deus_price, expire_block, [signature])\n}\n\nexport const redeemAlgorithmicDei = (deus_price, expire_block, signature, amountIn, chainId, web3) => {\n    return getCollateralPoolContract(web3, chainId)\n        .methods\n        .redeemAlgorithmicDEI(amountIn, deus_price, expire_block, [signature])\n}\n\nexport const getClaimAll = async (account, web3, chainId = ChainId.ETH) => {\n    return getCollateralPoolContract(web3, chainId)\n        .methods\n        .collectRedemption()\n        .send({ from: account })\n}\n\n//READ FUNCTIONS\nexport const getDeiInfo = async (web3, chainId = ChainId.ETH, collat_usd_price = collatUsdPrice) => {\n    const LEN = LENGTH_COLLAT[chainId] ?? 3\n    let collaterals = []\n    for (let i = 0; i < LEN; i++) {\n        // console.log(COLLAT_PRICE[chainId], collat_usd_price);\n        collaterals.push(COLLAT_PRICE[chainId] ?? collat_usd_price);\n    }\n\n    return getDeiContract(web3, chainId)\n        .methods\n        .dei_info(collaterals)\n        .call()\n}\n\nexport const makeDeiRequest = async (path, chainId = 4) => {\n    return fetcher(baseUrl + path + `?chainId=${chainId}`)\n}\n\nexport const isProxyMinter = (token, isPair, collatRatio, chainId) => {\n    if (!token || !token.symbol || collatRatio === null) return null\n    if ((collatRatio === 100 && token.symbol === collateralToken[chainId]?.symbol && !isPair) ||\n        (collatRatio === 0 && token.symbol === \"DEUS\" && !isPair) ||\n        (collatRatio > 0 && collatRatio < 100 && isPair)) return false\n    return true\n}\n\n\nexport const getAmountOutDeusSwap = async (fromCurrency, amountIn, deus_price, collateral_price, web3, chainId) => {\n    //getERC202DEIInputs\n    if (!fromCurrency || !amountIn || isZero(amountIn) || deus_price === undefined) return \"\"\n    const amountInToWei = getToWei(amountIn, fromCurrency.decimals).toFixed(0)\n    const collateralPriceWei = getToWei(collateral_price, 6).toFixed(0)\n    const deusPriceWei = getToWei(deus_price, 6).toFixed(0)\n    let method = \"\"\n    let params = [amountInToWei, deusPriceWei, collateralPriceWei]\n    console.log(chainId, amountInToWei);\n\n    const erc20Path = MINT_PATH[chainId][fromCurrency.symbol]\n\n    if (fromCurrency.address === COLLATERAL_ADDRESS[chainId]) {\n        method = \"getUSDC2DEUSInputs\"\n    } else {\n        method = \"getERC202DEUSInputs\"\n        if (!erc20Path) {\n            console.error(\"INVALID PATH with \", fromCurrency)\n            return\n        }\n        params.push(erc20Path)\n    }\n    console.log(method, params);\n    return getDeusSwapContract(web3, chainId).methods[method](...params).call()\n}\n\nexport const getAmountOutProxy = async (fromCurrency, amountIn, deus_price, collateral_price, web3, chainId) => {\n    //getERC202DEIInputs\n    if (!fromCurrency || !amountIn || isZero(amountIn) || deus_price === undefined) return \"\"\n    const amountInToWei = getToWei(amountIn, fromCurrency.decimals).toFixed(0)\n    const collateralPriceWei = getToWei(collateral_price, 6).toFixed(0)\n    const deusPriceWei = getToWei(deus_price, 6).toFixed(0)\n    let method = \"\"\n    let params = [amountInToWei, deusPriceWei, collateralPriceWei]\n    console.log(chainId, amountInToWei);\n\n    const erc20Path = MINT_PATH[chainId][fromCurrency.symbol]\n\n    if (fromCurrency.address === COLLATERAL_ADDRESS[chainId]) {\n        method = \"getUSDC2DEIInputs\"\n    } else {\n        method = \"getERC202DEIInputs\"\n        if (!erc20Path) {\n            console.error(\"INVALID PATH with \", fromCurrency)\n            return\n        }\n        params.push(erc20Path)\n    }\n    console.log(method, params);\n    return getNewProxyMinterContract(web3, chainId).methods[method](...params).call()\n}\n\n\nexport const getZapAmountsOut = async (currency, amountInToWei, zapperAddress, result, web3, chainId) => {\n    const erc20Path = MINT_PATH[chainId][currency.symbol]\n\n    if (zapperAddress === DEI_COLLATERAL_ZAP[chainId]) {\n        if (currency.address === COLLATERAL_ADDRESS[chainId]) {\n            console.log(\"getAmountOutLPCollateral \", zapperAddress, amountInToWei);\n            return getZapContract(web3, zapperAddress, chainId)\n                .methods\n                .getAmountOutLPCollateral(amountInToWei).call()\n        } else if (currency.address === DEUS_ADDRESS[chainId]) {\n            console.log(\"getAmountOutLPDEUS \", amountInToWei);\n            return getZapContract(web3, zapperAddress, chainId)\n                .methods\n                .getAmountOutLPDEUS(amountInToWei, [...erc20Path]).call()\n        } else if (currency.address === DEI_ADDRESS[chainId]) {\n            console.log(\"getAmountOutLPDEI haaa\", amountInToWei, zapperAddress);\n            return getZapContract(web3, zapperAddress, chainId)\n                .methods\n                .getAmountOutLPDEI(amountInToWei).call()\n        }\n        return getZapContract(web3, zapperAddress, chainId)\n            .methods\n            .getAmountOutLPERC20ORNativecoin(amountInToWei, [...erc20Path]).call()\n    }\n\n    if (currency.address === DEUS_ADDRESS[chainId]) {\n        console.log(\"getAmountOutLPDEUS \", amountInToWei);\n        return getZapContract(web3, zapperAddress, chainId)\n            .methods\n            .getAmountOutLPDEUS(amountInToWei).call()\n    } else if (currency.address === DEI_ADDRESS[chainId]) {\n        console.log(\"getAmountOutLPDEI \", amountInToWei, zapperAddress);\n        return getZapContract(web3, zapperAddress, chainId)\n            .methods\n            .getAmountOutLPDEI(amountInToWei).call()\n    }\n    console.log(\"getAmountOutLPERC20ORNativecoin \", amountInToWei, result.deus_price, result.collateral_price, erc20Path);\n    return getZapContract(web3, zapperAddress, chainId)\n        .methods\n        .getAmountOutLPERC20ORNativecoin(amountInToWei, result.deus_price, result.collateral_price, erc20Path).call() // TODO  VALUE:AVAX?\n}\n\n\nexport const zapIn = (currency, zapperAddress, amountIn, minLpAmount, result, amountOutParams, transferResidual, web3, chainId) => {\n    const erc20Path = MINT_PATH[chainId][currency.symbol]\n    const { collateral_price, deus_price, expire_block, signature } = result\n\n    let proxyTuple = []\n    if (amountOutParams.length > 0)\n        proxyTuple = [\n            amountIn,\n            minLpAmount,\n            deus_price,\n            collateral_price,\n            amountOutParams[2],\n            amountOutParams[3],\n            expire_block,\n            [signature]\n        ]\n\n\n    if (zapperAddress === DEI_DEUS_ZAP[chainId]) {\n        if (currency.address === \"0x\") {\n            console.log(\"zapInNativecoin \", amountIn, minLpAmount, transferResidual);\n            return getZapContract(web3, zapperAddress, chainId)\n                .methods\n                .zapInNativecoin(proxyTuple, minLpAmount, erc20Path, transferResidual) // TODO  VALUE:AVAX?\n        }\n        else if (currency.address === DEUS_ADDRESS[chainId]) {\n\n            console.log(\"zapInDEUS \", amountIn, minLpAmount, transferResidual);\n            return getZapContract(web3, zapperAddress, chainId)\n                .methods\n                .zapInDEUS(amountIn, minLpAmount, transferResidual)\n        }\n        else if (currency.address === DEI_ADDRESS[chainId]) {\n            console.log(\"zapInDEI \", amountIn, minLpAmount, transferResidual);\n            return getZapContract(web3, zapperAddress, chainId)\n                .methods\n                .zapInDEI(amountIn, minLpAmount, transferResidual)\n        }\n        return getZapContract(web3, zapperAddress, chainId)\n            .methods\n            .zapInERC20(proxyTuple, amountIn, minLpAmount, erc20Path, transferResidual)\n\n    } else {\n        if (currency.address === \"0x\") {\n            console.log(erc20Path, minLpAmount, transferResidual);\n            return getZapContract(web3, zapperAddress, chainId)\n                .methods\n                .zapInNativecoin(erc20Path, minLpAmount, transferResidual) // TODO  VALUE:AVAX?\n        }\n        else if (currency.address === COLLATERAL_ADDRESS[chainId]) {\n            console.log(\"zapInCollateral \", amountIn, minLpAmount, transferResidual);\n            return getZapContract(web3, zapperAddress, chainId)\n                .methods\n                .zapInCollateral(amountIn, minLpAmount, transferResidual)\n        }\n        else if (currency.address === DEUS_ADDRESS[chainId]) {\n            console.log(\"zapInDEUS \", amountIn, minLpAmount, transferResidual, erc20Path);\n            return getZapContract(web3, zapperAddress, chainId)\n                .methods\n                .zapInDEUS(amountIn, minLpAmount, transferResidual, erc20Path)\n        }\n        else if (currency.address === DEI_ADDRESS[chainId]) {\n            console.log(\"zapInDEI \", amountIn, minLpAmount, transferResidual);\n            return getZapContract(web3, zapperAddress, chainId)\n                .methods\n                .zapInDEI(amountIn, minLpAmount, transferResidual)\n        }\n        console.log(erc20Path, amountIn, minLpAmount, transferResidual);\n        return getZapContract(web3, zapperAddress, chainId)\n            .methods\n            .zapInERC20(erc20Path, amountIn, minLpAmount, erc20Path, transferResidual)\n    }\n}\n","import { Interface } from '@ethersproject/abi'\nimport { getMultiCallContract } from './contractHelpers'\n\nconst multicall = async (web3, abi, calls, chainId) => {\n    const multi = getMultiCallContract(web3, chainId)\n\n    const itf = new Interface(abi)\n    const calldata = calls.map((call) => [\n        call.address.toLowerCase(),\n        itf.encodeFunctionData(call.name, call.params),\n    ])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    const res = returnData.map((call, i) =>\n        itf.decodeFunctionResult(calls[i].name, call)\n    )\n\n    return res\n}\n\nexport { multicall }\nexport default multicall\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCrossWeb3 } from \"./useWeb3\"\nimport { isAddress } from \"@ethersproject/address\"\nimport BigNumber from \"bignumber.js\";\nimport { useCrossERC20 } from './useContract'\nimport useRefresh from './useRefresh';\n\nconst useCrossTokenBalance = (tokenAddress, chainId, fastUpdate = null) => {\n    const [balance, setBalance] = useState(new BigNumber(0))\n    const { account } = useWeb3React()\n    // console.log(tokenAddress, chainId);\n    const web3 = useCrossWeb3(chainId)\n    // console.log(\"web3 \", web3.currentProvider);\n    const contract = useCrossERC20(tokenAddress, web3)\n    const { fastRefresh } = useRefresh()\n    useEffect(() => {\n        const fetchBalance = async () => {\n            let walletBalance = null\n            try {\n                if (!isAddress(tokenAddress)) {\n                    walletBalance = await web3.eth.getBalance(account)\n                } else {\n                    walletBalance = await contract.methods.balanceOf(account).call()\n                }\n                setBalance(new BigNumber(walletBalance))\n            } catch (error) {\n                console.log(`get Balance of ${tokenAddress} with chainId ${chainId}`, error);\n            }\n\n        }\n\n        if (account && tokenAddress) {\n            fetchBalance()\n        } else {\n            setBalance(\"\")\n        }\n    }, [account, tokenAddress, web3, chainId, contract, fastRefresh, fastUpdate])\n\n    return balance\n}\n\n\nexport default useCrossTokenBalance","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport { ButtonSyncDeactivated, ButtonSyncActive } from '../Button';\nimport { FlexCenter } from '../Container';\nimport { WaveLoading } from 'react-loadingg';\nimport { useWeb3React } from '@web3-react/core';\nimport { isGt, isZero } from '../../../constant/number';\nimport Wallets from '../../common/Navbar/Wallets';\nimport { addRPC } from '../../../services/addRPC';\nimport { NameChainId } from '../../../constant/web3';\n\n\nconst errors = {\n    NotConnected: \"CONNECT WALLET\",\n    SWITCH: \"SWITCH TO\",\n    EMPTY: \"ENTER AN AMOUNT\",\n    INSUFFICIENT: \"INSUFFICIENT BALANCE\",\n    LOADING: \"LOADING...\",\n}\n\nconst WrapActions = styled.div`\n    margin-top:33px;\n    height: \"55px\";\n    display:flex;\n    font-size:20px;\n    font-family:\"Monument Grotesk Semi\";\n    & > button {\n        margin:0px 5px;\n    }\n`\nconst ButtonSwap = styled(ButtonSyncActive)`\n    background: ${({ theme, bgColor }) => bgColor ? theme[bgColor] : theme.grad3};\n    color: ${({ theme, txColor }) => txColor ? theme[txColor] : theme.text1_2};\n    font-size:${({ fontSize }) => fontSize || \"20px\"};\n`\n\nconst WrapStep = styled(FlexCenter)`\n    margin-top:10px;\n`\n\nconst CycleNumber = styled(FlexCenter)`\n    width:20px;\n    height:20px;\n    border-radius:20px;\n    font-weight:400;\n    background: ${({ theme, bgColor, active }) => active ? bgColor ? theme[bgColor] : theme.grad3 : theme.border1};\n    color: ${({ theme, active, txColor }) => active ? txColor ? theme[txColor] : theme.text1_2 : theme.text1};\n    z-index: 0;\n    font-size:12px;\n    margin:0 -1px;\n`\nconst Line = styled.div`\n    background: ${({ theme, bgColor }) => bgColor ? theme[bgColor] : theme.grad3} ;\n    height: 2px;\n    width: 50%;\n`\nconst SwapAction = ({ text = \"SWAP\", isPreApproved, amountIn, amountOut, swapState, TokensMap, isApproved, loading, validNetwork, handleApprove, handleSwap, bgColor, txColor }) => {\n\n    const { account, chainId } = useWeb3React()\n    const [showWallets, setShowWallets] = useState(false)\n\n    const checkError = () => {\n        if (amountIn === \"\" || isZero(amountIn)) return errors.EMPTY\n        if (TokensMap && isGt(amountIn, TokensMap[swapState.from.address]?.balance)) return errors.INSUFFICIENT\n        if (isNaN(amountOut)) return errors.LOADING\n        return null;\n    }\n\n    useEffect(() => {\n        if (account)\n            setShowWallets(false)\n    }, [account])\n\n    if (!account) {\n        return <WrapActions>\n            <Wallets showWallets={showWallets} setShowWallets={setShowWallets} />\n            <ButtonSwap txColor={txColor} bgColor={bgColor} active={true} onClick={() => setShowWallets(true)}>\n                CONNECT WALLET\n            </ButtonSwap>\n        </WrapActions>\n    }\n\n    if (chainId && chainId !== validNetwork) {\n        return <WrapActions>\n            <Wallets showWallets={showWallets} setShowWallets={setShowWallets} />\n            <ButtonSwap txColor={txColor} bgColor={bgColor} active={true} onClick={() => addRPC(account, validNetwork)}>\n                SWITCH TO {NameChainId[validNetwork].toUpperCase()}\n            </ButtonSwap>\n        </WrapActions>\n    }\n\n\n    if (checkError()) {\n        return <WrapActions>\n            <ButtonSyncDeactivated >{checkError()}</ButtonSyncDeactivated>\n        </WrapActions>\n    }\n\n    if (isPreApproved == null) {\n        return <WrapActions>\n            <ButtonSyncDeactivated>\n                <WaveLoading />\n            </ButtonSyncDeactivated>\n        </WrapActions>\n    }\n\n    return (<>\n        {isPreApproved ?\n            <WrapActions>\n                <ButtonSwap active={true} fontSize={\"25px\"} onClick={handleSwap} txColor={txColor} bgColor={bgColor}>{text}</ButtonSwap>\n            </WrapActions> : <>\n                <WrapActions>\n                    {!isApproved ? <>\n                        <ButtonSwap txColor={txColor} bgColor={bgColor} active={true} onClick={handleApprove} >\n                            APPROVE\n                            {loading && <img style={{ position: \"absolute\", right: \"10px\" }} alt=\"sp\" src=\"/img/spinner.svg\" width=\"35\" height=\"35\" />}\n                        </ButtonSwap>\n                        <ButtonSyncDeactivated> {text}</ButtonSyncDeactivated>\n                    </> : <>\n                        <ButtonSyncDeactivated>APPROVED</ButtonSyncDeactivated>\n                        <ButtonSwap txColor={txColor} bgColor={bgColor} active={true} onClick={handleSwap}>\n                            {text}\n                        </ButtonSwap>\n                    </>\n                    }\n                </WrapActions>\n                <WrapStep bgColor={bgColor}>\n                    <CycleNumber bgColor={bgColor} active={true}>1</CycleNumber>\n                    <Line bgColor={bgColor}></Line>\n                    <CycleNumber bgColor={bgColor} active={isApproved}>2</CycleNumber>\n                </WrapStep>\n            </>\n        }\n    </>);\n}\n\nexport default SwapAction;","import { useWeb3React } from \"@web3-react/core\"\nimport { useEffect, useState } from \"react\"\nimport BigNumber from \"bignumber.js\";\nimport useRefresh from \"./useRefresh\";\nimport { useERC20 } from './useContract'\nimport { ethers } from \"ethers\";\nimport { ZERO } from \"../constant/number\";\n\n\nexport const useAllowance = (currency, contractAddress, validChainId) => {\n    const [allowance, setAllowance] = useState(new BigNumber(-1))\n    const { account, chainId } = useWeb3React()\n    const { fastRefresh } = useRefresh()\n    const { address: tokenAddress } = currency\n    const contract = useERC20(tokenAddress)\n\n    useEffect(() => {\n        const fetchAllowance = async () => {\n            if (!tokenAddress) return setAllowance(ZERO)\n            if (validChainId && chainId !== validChainId && validChainId !== currency.chainId) setAllowance(ZERO)\n            if (contract === null) setAllowance(ethers.constants.MaxUint256)\n            else if (currency.allowance) { setAllowance(currency.allowance) }\n            else {\n                try {\n                    const res = await contract.methods.allowance(account, contractAddress).call()\n                    setAllowance(new BigNumber(res))\n                } catch (error) {\n                    console.log(\"error useAllowance\",error);\n                }\n            }\n        }\n        if (account && tokenAddress) {\n            setAllowance(new BigNumber(-1))\n            fetchAllowance()\n        }\n    }, [account, contract, chainId, contractAddress, tokenAddress, validChainId, currency, fastRefresh])\n\n    return allowance\n}\n\n"],"sourceRoot":""}