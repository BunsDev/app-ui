{"version":3,"sources":["helper/formatBalance.js","constant/token.js","hooks/useContract.js","helper/swapHelper.js","hooks/useApprove.js"],"names":["getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","fromWei","amount","toFixed","ROUND_DOWN","getToWei","bn","multipliedBy","getFullDisplayBalance","RemoveTrailingZero","number","fixed","ROUND_MODE","isZero","replace","bakktToken","Token","dBakktToken","deiToken","ChainId","RINKEBY","DEI_ADDRESS","MATIC","ETH","FTM","BSC","BSC_TESTNET","deusToken","DEUS_ADDRESS","collateralToken","COLLATERAL_ADDRESS","deiCollateralLpToken","DEI_COLLATERAL_LP","deiDeusLpToken","DEI_DEUS_LP","HECO","DeusNativeLpToken","DEUS_NATIVE_LP","ZapTokens","logo","symbol","address","chainId","pairID","DEITokens","BridgeTokens","id","useERC20","web3","useWeb3","useMemo","isAddress","getERC20Contract","useCrossERC20","approve","contract","contractAddress","account","payload","a","hash","methods","ethers","constants","MaxUint256","toString","send","from","once","tx","ApproveTransaction","TransactionState","LOADING","currency","SUCCESS","FAILED","useApprove","validChainId","useWeb3React","tokenAddress","onApprove","useCallback"],"mappings":"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","file":"static/js/2.9f370464.chunk.js","sourcesContent":["import BigNumber from \"bignumber.js\";\nimport { isZero } from \"../constant/number\";\n\nexport const getBalanceNumber = (balance, decimals = 18) => {\n    const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n    return displayBalance.toNumber()\n}\n\n\nexport const fromWei = (amount, decimals = 18) => {\n    if (amount === 0) return \"0\"\n    if (!amount) return null\n    const displayBalance = new BigNumber(amount).dividedBy(new BigNumber(10).pow(decimals))\n    return displayBalance.toFixed(decimals, BigNumber.ROUND_DOWN)\n}\n\n\nexport const getToWei = (amount, decimals = 18) => {\n    if (!amount) return null\n    const bn = new BigNumber(amount).multipliedBy(new BigNumber(10).pow(decimals)).toFixed(decimals, 1)\n    return new BigNumber(bn)\n}\n\nexport const getFullDisplayBalance = (balance, decimals = 18) => {\n    return new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const RemoveTrailingZero = (number = null, fixed = 5, ROUND_MODE = BigNumber.ROUND_DOWN) => {\n    if (!number) return '0'\n    if (isZero(number)) return 0\n    return BigNumber(number).toFixed(fixed, ROUND_MODE).replace(/\\.?0+$/, \"\")\n}\n\nexport const formatNumber = (number, minPrecision = 2, maxPrecision = 2) => {\n    const options = {\n        minimumFractionDigits: minPrecision,\n        maximumFractionDigits: maxPrecision,\n    }\n    return number.toLocaleString(undefined, options)\n}","import { Token } from '../utils/classes';\nimport { DEI_ADDRESS, COLLATERAL_ADDRESS, DEI_DEUS_LP, DEI_COLLATERAL_LP, DEUS_ADDRESS, DEUS_NATIVE_LP } from './contracts';\nimport { ChainId } from './web3';\n\nexport const bakktToken = new Token(1, \"0x11Aa73194769882521e4576D245ffacd4E98aCB4\", 18, \"ioBAKKT\", \"ioBAKKT\", \"/tokens/bakkt.svg\");\nexport const dBakktToken = new Token(1, \"0x023466190D8dffF0fae089Cf1a05277E7203f89F\", 18, \"dBKKT\", \"dBKKT\", \"/tokens/BKKT.png\");\n\n//START DEI\nexport const deiToken = {\n    [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, DEI_ADDRESS[ChainId.RINKEBY], 18, \"DEI\", \"DEI\", \"/tokens/dei.svg\"),\n    [ChainId.MATIC]: new Token(ChainId.MATIC, DEI_ADDRESS[ChainId.MATIC], 18, \"DEI\", \"DEI\", \"/tokens/dei.svg\"),\n    [ChainId.ETH]: new Token(ChainId.ETH, DEI_ADDRESS[ChainId.ETH], 18, \"DEI\", \"DEI\", \"/tokens/dei.svg\"),\n    [ChainId.FTM]: new Token(ChainId.FTM, DEI_ADDRESS[ChainId.FTM], 18, \"DEI\", \"DEI\", \"/tokens/dei.svg\"),\n    [ChainId.BSC]: new Token(ChainId.BSC, DEI_ADDRESS[ChainId.BSC], 18, \"DEI\", \"DEI\", \"/tokens/dei.svg\"),\n    [ChainId.BSC_TESTNET]: new Token(ChainId.BSC_TESTNET, DEI_ADDRESS[ChainId.BSC_TESTNET], 18, \"DEI\", \"DEI\", \"/tokens/dei.svg\"),\n};\nexport const deusToken = {\n    [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, DEUS_ADDRESS[ChainId.RINKEBY], 18, \"DEUS\", \"DEUS\", \"/tokens/deus.svg\"),\n    [ChainId.MATIC]: new Token(ChainId.MATIC, DEUS_ADDRESS[ChainId.MATIC], 18, \"DEUS\", \"DEUS\", \"/tokens/deus.svg\"),\n    [ChainId.ETH]: new Token(ChainId.ETH, DEUS_ADDRESS[ChainId.ETH], 18, \"DEUS\", \"DEUS\", \"/tokens/deus.svg\"),\n    [ChainId.FTM]: new Token(ChainId.FTM, DEUS_ADDRESS[ChainId.FTM], 18, \"DEUS\", \"DEUS\", \"/tokens/deus.svg\"),\n    [ChainId.BSC]: new Token(ChainId.BSC, DEUS_ADDRESS[ChainId.BSC], 18, \"DEUS\", \"DEUS\", \"/tokens/deus.svg\"),\n    [ChainId.BSC_TESTNET]: new Token(ChainId.BSC_TESTNET, DEUS_ADDRESS[ChainId.BSC_TESTNET], 18, \"DEUS\", \"DEUS\", \"/tokens/deus.svg\"),\n};\n\nexport const collateralToken = {\n    [ChainId.MATIC]: new Token(ChainId.MATIC, COLLATERAL_ADDRESS[ChainId.MATIC], 6, \"USDC\", \"USDC\", \"/tokens/usdc.svg\"),\n    [ChainId.ETH]: new Token(ChainId.ETH, COLLATERAL_ADDRESS[ChainId.ETH], 6, \"USDC\", \"USDC\", \"/tokens/usdc.svg\"),\n    [ChainId.FTM]: new Token(ChainId.FTM, COLLATERAL_ADDRESS[ChainId.FTM], 6, \"USDC\", \"USDC\", \"/tokens/usdc.svg\"),\n    [ChainId.BSC]: new Token(ChainId.BSC, COLLATERAL_ADDRESS[ChainId.BSC], 18, \"USDC\", \"USDC\", \"/tokens/usdc.svg\"),\n}\n\nexport const deiCollateralLpToken = {\n    [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, DEI_COLLATERAL_LP[ChainId.RINKEBY], 18, \"DEI-USDC LP\", \"DEI-USDC LP\", \"/tokens/dei.svg\"),\n    [ChainId.MATIC]: new Token(ChainId.MATIC, DEI_COLLATERAL_LP[ChainId.MATIC], 18, \"DEI-USDC LP\", \"DEI-USDC LP\", \"/tokens/dei.svg\"),\n    [ChainId.ETH]: new Token(ChainId.ETH, DEI_COLLATERAL_LP[ChainId.ETH], 18, \"DEI-USDC LP\", \"DEI-USDC LP\", \"/tokens/dei.svg\"),\n    [ChainId.FTM]: new Token(ChainId.FTM, DEI_COLLATERAL_LP[ChainId.FTM], 18, \"DEI-USDC LP\", \"DEI-USDC LP\", \"/tokens/dei.svg\"),\n    [ChainId.BSC]: new Token(ChainId.BSC, DEI_COLLATERAL_LP[ChainId.BSC], 18, \"DEI-USDC LP\", \"DEI-USDC LP\", \"/tokens/dei.svg\"),\n}\n\nexport const deiDeusLpToken = {\n    [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, DEI_DEUS_LP[ChainId.RINKEBY], 18, \"DEI-DEUS LP\", \"DEI-DEUS LP\", \"/tokens/deus.svg\"),\n    [ChainId.HECO]: new Token(ChainId.HECO, DEI_DEUS_LP[ChainId.HECO], 18, \"DEI-DEUS LP\", \"DEI-DEUS LP\", \"/tokens/deus.svg\"),\n    [ChainId.MATIC]: new Token(ChainId.MATIC, DEI_DEUS_LP[ChainId.MATIC], 18, \"DEI-DEUS LP\", \"DEI-DEUS LP\", \"/tokens/deus.svg\"),\n    [ChainId.ETH]: new Token(ChainId.ETH, DEI_DEUS_LP[ChainId.ETH], 18, \"DEI-DEUS LP\", \"DEI-DEUS LP\", \"/tokens/deus.svg\"),\n    [ChainId.FTM]: new Token(ChainId.FTM, DEI_DEUS_LP[ChainId.FTM], 18, \"DEI-DEUS LP\", \"DEI-DEUS LP\", \"/tokens/deus.svg\"),\n    [ChainId.BSC]: new Token(ChainId.BSC, DEI_DEUS_LP[ChainId.BSC], 18, \"DEI-DEUS LP\", \"DEI-DEUS LP\", \"/tokens/deus.svg\"),\n}\n\nexport const DeusNativeLpToken = {\n    [ChainId.MATIC]: new Token(ChainId.MATIC, DEUS_NATIVE_LP[ChainId.MATIC], 18, \"DEUS-MATIC LP\", \"DEUS-MATIC LP\", \"/tokens/deus.svg\"),\n    [ChainId.ETH]: new Token(ChainId.ETH, DEUS_NATIVE_LP[ChainId.ETH], 18, \"DEUS-ETH LP\", \"DEUS-ETH LP\", \"/tokens/deus.svg\"),\n    [ChainId.FTM]: new Token(ChainId.FTM, DEUS_NATIVE_LP[ChainId.FTM], 18, \"DEUS-FTM LP\", \"DEUS-FTM LP\", \"/tokens/deus.svg\"),\n    [ChainId.BSC]: new Token(ChainId.BSC, DEUS_NATIVE_LP[ChainId.BSC], 18, \"DEUS-BNB LP\", \"DEUS-BNB LP\", \"/tokens/deus.svg\"),\n}\n\n\nexport const ZapTokens = {\n    [ChainId.MATIC]: [\n        { logo: \"/tokens/dei.svg\", symbol: \"DEI\", address: DEI_ADDRESS[ChainId.MATIC], decimals: 18, chainId: ChainId.MATIC },\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.MATIC], decimals: 6, chainId: ChainId.MATIC },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.MATIC], decimals: 18, chainId: ChainId.MATIC },\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.MATIC], decimals: 6, chainId: ChainId.MATIC, pairID: 1 },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.MATIC], decimals: 18, chainId: ChainId.MATIC, pairID: 1 },\n        { logo: \"/tokens/matic.jpg\", symbol: \"MATIC\", address: \"0x\", decimals: 18, chainId: ChainId.MATIC },\n        { logo: \"/tokens/eth-logo.svg\", symbol: \"WETH\", address: \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\", decimals: 18, chainId: ChainId.MATIC },\n\n    ],\n    [ChainId.ETH]: [\n        { logo: \"/tokens/dei.svg\", symbol: \"DEI\", address: DEI_ADDRESS[ChainId.ETH], decimals: 18, chainId: 1 },\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.ETH], decimals: 6, chainId: 1 },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.ETH], decimals: 18, chainId: 1 },\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.ETH], decimals: 6, chainId: 1, pairID: 1 },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.ETH], decimals: 18, chainId: 1, pairID: 1 },\n        { logo: \"/tokens/eth-logo.svg\", symbol: \"ETH\", address: \"0x\", decimals: 18, chainId: 1 },\n    ],\n}\n\n\nexport const DEITokens = {\n    [ChainId.MATIC]: [\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.MATIC], decimals: 6, chainId: ChainId.MATIC },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.MATIC], decimals: 18, chainId: ChainId.MATIC },\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.MATIC], decimals: 6, chainId: ChainId.MATIC, pairID: 1 },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.MATIC], decimals: 18, chainId: ChainId.MATIC, pairID: 1 },\n        { logo: \"/tokens/matic.jpg\", symbol: \"MATIC\", address: \"0x\", decimals: 18, chainId: ChainId.MATIC },\n        { logo: \"/tokens/eth-logo.svg\", symbol: \"WETH\", address: \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\", decimals: 18, chainId: ChainId.MATIC },\n    ],\n    [ChainId.ETH]: [\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.ETH], decimals: 6, chainId: 1 },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.ETH], decimals: 18, chainId: 1 },\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.ETH], decimals: 6, chainId: 1, pairID: 1 },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.ETH], decimals: 18, chainId: 1, pairID: 1 },\n        { logo: \"/tokens/eth-logo.svg\", symbol: \"ETH\", address: \"0x\", decimals: 18, chainId: 1 },\n        { logo: \"/tokens/dai.png\", symbol: \"DAI\", address: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", decimals: 18, chainId: 1 },\n        { logo: \"/tokens/wbtc.png\", symbol: \"wBTC\", address: \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\", decimals: 8, chainId: 1 },\n    ],\n    [ChainId.FTM]: [\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.FTM], decimals: 6, chainId: ChainId.FTM},\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.FTM], decimals: 18, chainId: ChainId.FTM},\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.FTM], decimals: 6, chainId: ChainId.FTM, pairID: 1 },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.FTM], decimals: 18, chainId: ChainId.FTM, pairID: 1 },\n    ],\n    [ChainId.BSC]: [\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.BSC], decimals: 18, chainId: ChainId.BSC},\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.BSC], decimals: 18, chainId: ChainId.BSC},\n        { logo: \"/tokens/usdc.svg\", symbol: \"USDC\", address: COLLATERAL_ADDRESS[ChainId.BSC], decimals: 18, chainId: ChainId.BSC, pairID: 1 },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.BSC], decimals: 18, chainId: ChainId.BSC, pairID: 1 },\n    ],\n}\n//END DEI\nexport const BridgeTokens = {\n    [ChainId.BSC]: [\n        { logo: \"/tokens/dei.svg\", symbol: \"DEI\", address: DEI_ADDRESS[ChainId.BSC], decimals: 18,id:\"0\",  chainId: ChainId.BSC },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.BSC], decimals: 18, id:\"1\", chainId: ChainId.BSC },\n    ],\n    [ChainId.FTM]: [\n        { logo: \"/tokens/dei.svg\", symbol: \"DEI\", address: DEI_ADDRESS[ChainId.FTM], decimals: 18,id:\"0\",  chainId: ChainId.FTM },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.FTM], decimals: 18, id:\"1\", chainId: ChainId.FTM },\n    ],\n    [ChainId.MATIC]: [\n        { logo: \"/tokens/dei.svg\", symbol: \"DEI\", address: DEI_ADDRESS[ChainId.MATIC], decimals: 18,id:\"0\",  chainId: ChainId.MATIC },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.MATIC], decimals: 18, id:\"1\", chainId: ChainId.MATIC },\n    ],\n    [ChainId.ETH]: [\n        { logo: \"/tokens/dei.svg\", symbol: \"DEI\", address: DEI_ADDRESS[ChainId.ETH], decimals: 18,id:\"0\",  chainId: ChainId.ETH },\n        { logo: \"/tokens/deus.svg\", symbol: \"DEUS\", address: DEUS_ADDRESS[ChainId.ETH], decimals: 18, id:\"1\", chainId: ChainId.ETH },\n    ],\n    [ChainId.RINKEBY]: [\n        { logo: \"/tokens/dei.svg\", symbol: \"TT\", address: \"0x4b16E272421FD67E6D41a14ac27789AB2AFE7bcb\", decimals: 18, id: \"2\", chainId: ChainId.RINKEBY },\n    ],\n    [ChainId.BSC_TESTNET]: [\n        { logo: \"/tokens/dei.svg\", symbol: \"TT\", address: \"0x39a571d0FF892aF5e5780AF286f5152784d15A9f\", decimals: 18, id: \"2\", chainId: ChainId.BSC_TESTNET },\n    ],\n}\n\nexport const isNative = (address, chainId) => {\n    return address === \"0x\"\n        || (chainId === 1 && address === \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\")\n        || (chainId === 4 && address === \"0xc778417E063141139Fce010982780140Aa0cD5Ab\")\n}\nexport const WethRinkeby = { logo: \"/tokens/eth-logo.svg\", symbol: \"ETH\", decimals: 18, address: \"0xc778417E063141139Fce010982780140Aa0cD5Ab\", chainId: 4 }\nexport const Weth = { logo: \"/tokens/eth-logo.svg\", symbol: \"ETH\", decimals: 18, address: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\", chainId: 1 }\n\nexport const DeusPath = {\n    \"deus\": {\n        \"eth\": true,\n    },\n    \"eth\": {\n        \"deus\": true,\n    },\n}","import { isAddress } from '@ethersproject/address'\nimport { useWeb3React } from '@web3-react/core'\nimport { useMemo } from 'react'\nimport {\n    getDeusAutomaticMarketMakerContract,\n    getERC20Contract\n} from '../helper/contractHelpers'\nimport useWeb3 from './useWeb3'\n\n\nexport const useERC20 = (address) => {\n    const web3 = useWeb3()\n    return useMemo(() => {\n        if (!isAddress(address)) return null\n        return getERC20Contract(address, web3)\n    }, [address, web3])\n}\n\nexport const useCrossERC20 = (address, web3) => {\n    return useMemo(() => {\n        if (!isAddress(address)) return null\n        return getERC20Contract(address, web3)\n    }, [address, web3])\n}\n\nexport const useDeusAMM = (address) => {\n    const web3 = useWeb3()\n    const { chainId } = useWeb3React()\n    return useMemo(() => getDeusAutomaticMarketMakerContract(address, web3, chainId), [address, web3, chainId])\n}\n\n","import { ethers } from \"ethers\"\nimport { TransactionState } from \"../utils/constant\"\nimport { ApproveTransaction, SwapTransaction } from \"../utils/explorers\"\nimport { getDeusAutomaticMarketMakerContract, getMultiSwapContract, getUniswapRouterContract } from \"./contractHelpers\"\nimport { getToWei } from \"./formatBalance\"\nimport graph from '../constant/path.json'\nimport graphTest from '../constant/pathTest.json'\nimport addrs from '../constant/addresses.json'\nimport { getTokenAddr } from \"../utils/contracts\"\nimport { isZero } from \"../constant/number\"\n\n\nexport const approve = async (contract, contractAddress, account, payload) => {\n    let hash = null\n    return contract.methods\n        .approve(contractAddress, ethers.constants.MaxUint256.toString())\n        .send({ from: account })\n        .once('transactionHash', (tx) => {\n            hash = tx\n            ApproveTransaction(TransactionState.LOADING, {\n                hash,\n                from: payload.currency,\n                chainId: payload.chainId,\n            })\n        })\n        .once('receipt', () => ApproveTransaction(TransactionState.SUCCESS, {\n            hash,\n            from: payload.currency,\n            chainId: payload.chainId,\n        }))\n        .once('error', () => ApproveTransaction(TransactionState.FAILED, {\n            hash,\n            from: payload.currency,\n            chainId: payload.chainId,\n        }))\n}\n\nexport const swap = async (fromCurrency, toCurrency, amountIn, amountOut, minAmountOut, account, chainId, web3) => {\n    let hash = null\n    const amountInWei = getToWei(amountIn, fromCurrency.decimals).toFixed(0)\n    const minAmountOutWei = getToWei(minAmountOut, toCurrency.decimals).toFixed(0)\n\n    if (amountIn === \"\" || isZero(amountInWei) || amountOut === \"\" || isZero(minAmountOutWei)) return { status: false }\n\n    const swapFunc = swapFuncMaker(fromCurrency, toCurrency, amountInWei, minAmountOutWei, account, chainId, web3)\n    let sendArgs = sendAgrsMaker(fromCurrency, toCurrency, amountInWei, account, chainId)\n    return swapFunc\n        .send(sendArgs)\n        .once('transactionHash', (tx) => {\n            hash = tx\n            SwapTransaction(TransactionState.LOADING, {\n                hash,\n                from: { ...fromCurrency, amount: amountIn },\n                to: { ...toCurrency, amount: amountOut },\n                chainId: chainId,\n            })\n        })\n        .once('receipt', () => SwapTransaction(TransactionState.SUCCESS, {\n            hash,\n            from: { ...fromCurrency, amount: amountIn },\n            to: { ...toCurrency, amount: amountOut },\n            chainId: chainId,\n        }))\n        .once('error', () => SwapTransaction(TransactionState.FAILED, {\n            hash,\n            from: { ...fromCurrency, amount: amountIn },\n            to: { ...toCurrency, amount: amountOut },\n            chainId: chainId,\n        }))\n}\n\nconst swapFuncMaker = (fromCurrency, toCurrency, amountIn, minAmountOut, account, chainId, web3) => {\n\n    const getTokenAddr = (tokenName) => addrs[\"token\"][tokenName][chainId.toString()]\n    const deusAddress = getTokenAddr(\"deus\")\n    const wethAddress = getTokenAddr(\"weth\")\n    const currGrapth = chainId === 4 ? graphTest : graph\n\n    let path = currGrapth[fromCurrency.symbol.toLowerCase()][toCurrency.symbol.toLowerCase()]\n    var deusIndex = path.indexOf(deusAddress);\n\n    // console.log(amountIn.toString(), minAmountOut.toString());\n\n    if (fromCurrency.symbol === \"ETH\" && toCurrency.symbol === \"DEUS\")\n        return getDeusAutomaticMarketMakerContract(web3, chainId)\n            .methods\n            .buy(minAmountOut)\n\n    if (fromCurrency.symbol === \"DEUS\" && toCurrency.symbol === \"ETH\") {\n        return getMultiSwapContract(web3, chainId)\n            .methods\n            .uniDeusEth(amountIn, [], minAmountOut)\n    }\n\n    if (deusIndex === -1) {\n        if (path[0] === wethAddress) {\n            const deadline = Math.floor(Date.now() / 1000) + 60 * 5000;\n            return getUniswapRouterContract(web3, chainId)\n                .methods\n                .swapExactETHForTokens(minAmountOut, path, account, deadline)\n        }\n        else if (path[path.length - 1] === wethAddress) {\n            return getMultiSwapContract(web3, chainId)\n                .methods\n                .tokensToEthOnUni(amountIn, path, minAmountOut)\n        } else {\n            return getMultiSwapContract(web3, chainId)\n                .methods\n                .tokensToTokensOnUni(amountIn, path, minAmountOut)\n        }\n    }\n    if (deusIndex === path.length - 1) {\n        if (path[path.length - 2] === wethAddress) {\n            let newPath = path.slice(0, deusIndex)\n            console.log(amountIn.toString(), newPath, [], minAmountOut.toString());\n            return getMultiSwapContract(web3, chainId)\n                .methods\n                .uniEthDeusUni(amountIn, newPath, [], minAmountOut)\n        } else {\n            return getMultiSwapContract(web3, chainId)\n                .methods\n                .tokensToTokensOnUni(amountIn, path, minAmountOut)\n        }\n    }\n    if (deusIndex === 0) {\n        if (path[1] === wethAddress) {\n            let newPath = path.slice(1)\n            return getMultiSwapContract(web3, chainId)\n                .methods\n                .deusEthUni(amountIn, newPath, minAmountOut)\n        } else {\n            return getMultiSwapContract(web3, chainId)\n                .methods\n                .tokensToTokensOnUni(amountIn, path, minAmountOut)\n        }\n    }\n    if (path[deusIndex - 1] === wethAddress) {\n        let path1 = path.slice(0, deusIndex)\n        let path2 = path.slice(deusIndex)\n        if (path1.length > 1) {\n            return getMultiSwapContract(web3, chainId)\n                .methods\n                .uniEthDeusUni(amountIn, path1, path2, minAmountOut)\n        } else {\n            let newPath = path.slice(deusIndex)\n            return getMultiSwapContract(web3, chainId)\n                .methods\n                .ethDeusUni(newPath, minAmountOut)\n        }\n    }\n    if (path[deusIndex + 1] === wethAddress) {\n        let path1 = path.slice(0, deusIndex + 1)\n        let path2 = path.slice(deusIndex + 1)\n\n        if (path1.length >= 2 && path2.length <= 1) {\n            return getMultiSwapContract(web3, chainId)\n                .methods\n                .uniDeusEth(amountIn, path1, minAmountOut)\n        }\n        if (path1.length >= 2 && path2.length >= 2) {\n            return getMultiSwapContract(web3, chainId)\n                .methods\n                .uniDeusEthUni(amountIn, path1, path2, minAmountOut)\n        }\n    }\n}\n\nconst sendAgrsMaker = (fromCurrency, toCurrency, amountIn, account, chainId) => {\n    const getTokenAddr = (tokenName) => addrs[\"token\"][tokenName][chainId.toString()]\n    const wethAddress = getTokenAddr(\"weth\")\n    const currGrapth = chainId === 4 ? graphTest : graph\n\n    let path = currGrapth[fromCurrency.symbol.toLowerCase()][toCurrency.symbol.toLowerCase()]\n    if (path[0] === wethAddress) {\n        return { from: account, value: amountIn }\n    }\n    return { from: account }\n}\n\nexport const getSwapAmountsOut = async (fromCurrency, toCurrency, amountIn, chainId, web3) => {\n\n    const currGrapth = chainId === 4 ? graphTest : graph\n    const path = currGrapth[fromCurrency.symbol.toLowerCase()][toCurrency.symbol.toLowerCase()]\n\n    const wethAddress = getTokenAddr(\"weth\", chainId)\n    const deusAddress = getTokenAddr(\"deus\", chainId)\n    const deusIndex = path.indexOf(deusAddress);\n\n\n\n    const calculatePurchaseReturn = async (amountIn) => {\n        try {\n            return getDeusAutomaticMarketMakerContract(web3, chainId)\n                .methods\n                .calculatePurchaseReturn(amountIn)\n                .call()\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const calculateSaleReturn = async (amountIn) => {\n        try {\n            return getDeusAutomaticMarketMakerContract(web3, chainId)\n                .methods\n                .calculateSaleReturn(amountIn)\n                .call()\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const uniGetAmountsOut = async (amountIn, path = []) => {\n        try {\n            const amountsOut = await getUniswapRouterContract(web3, chainId)\n                .methods.getAmountsOut(amountIn, path)\n                .call()\n            return amountsOut[amountsOut.length - 1]\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const amountInWeid = getToWei(amountIn, fromCurrency.decimals).toFixed(0)\n\n    try {\n        if (fromCurrency.symbol === \"ETH\" && toCurrency.symbol === \"DEUS\")\n            return calculatePurchaseReturn(amountInWeid)\n        if (fromCurrency.symbol === \"DEUS\" && toCurrency.symbol === \"ETH\") {\n            return calculateSaleReturn(amountInWeid)\n        }\n\n        if (deusIndex === -1) {\n            return uniGetAmountsOut(amountInWeid, path)\n        }\n\n        if (deusIndex === path.length - 1) {\n            if (wethAddress === path[path.length - 2]) {\n                const newPath = path.slice(0, path.length - 1);\n                const amountsOutUni = await uniGetAmountsOut(amountInWeid, newPath)\n                return calculatePurchaseReturn(amountsOutUni)\n            } else {\n                return uniGetAmountsOut(amountInWeid, path)\n            }\n        }\n        if (deusIndex === 0) {\n            if (path[1] === wethAddress) {\n                const newPath = path.slice(1);\n                const amountsOutAMM = await calculateSaleReturn(amountInWeid)\n                return uniGetAmountsOut(amountsOutAMM, newPath)\n            } else {\n                return uniGetAmountsOut(amountInWeid, path)\n            }\n        }\n        if (path[deusIndex - 1] === wethAddress) {\n            let path1 = path.slice(0, deusIndex)\n            let path2 = path.slice(deusIndex)\n            if (path1.length > 1) {\n                const amountsOutUni = await uniGetAmountsOut(amountInWeid, path1)\n                const amountsOutAMM = await calculatePurchaseReturn(amountsOutUni)\n                if (path2.length > 1) {\n                    return uniGetAmountsOut(amountsOutAMM, path2)\n                } else {\n                    return amountsOutAMM\n                }\n            } else {\n                const amountsOutAMM = await calculatePurchaseReturn(amountInWeid)\n                if (path2.length > 1) {\n                    return uniGetAmountsOut(amountsOutAMM, path2)\n                } else {\n                    return amountsOutAMM\n                }\n            }\n        }\n        if (path[deusIndex + 1] === wethAddress) {\n            let path1 = path.slice(0, deusIndex + 1)\n            let path2 = path.slice(deusIndex + 1)\n            if (path1.length > 1) {\n                const amountsOutUni = await uniGetAmountsOut(amountInWeid, path1)\n                const amountsOutAMM = await calculateSaleReturn(amountsOutUni)\n                if (path2.length > 1) {\n                    return uniGetAmountsOut(amountsOutAMM, path2)\n                } else {\n                    return amountsOutAMM\n                }\n            } else {\n                const amountsOutAMM = await calculateSaleReturn(amountInWeid)\n                if (path2.length > 1) {\n                    return uniGetAmountsOut(amountsOutAMM, path2)\n                } else {\n                    return amountsOutAMM\n                }\n            }\n        }\n\n\n    } catch (error) {\n        console.log(error);\n    }\n\n}\n\n\n\n\n\n\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { approve } from '../helper/swapHelper'\nimport { useERC20 } from './useContract'\n\nexport const useApprove = (currency, contractAddress, validChainId) => {\n    const { account, chainId } = useWeb3React()\n    const { address: tokenAddress } = currency\n    const contract = useERC20(tokenAddress)\n\n    const handleApprove = useCallback(async () => {\n        try {\n            if (validChainId && chainId !== validChainId) return null\n            const tx = await approve(\n                contract,\n                contractAddress,\n                account,\n                { chainId, currency }\n            )\n            return tx\n        } catch (e) {\n            return false\n        }\n    }, [account, chainId, validChainId, currency, contract, contractAddress])\n\n    return { onApprove: handleApprove }\n}"],"sourceRoot":""}