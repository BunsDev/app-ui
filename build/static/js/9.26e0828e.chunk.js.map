{"version":3,"sources":["components/Pools/PoolsContainer.jsx"],"names":["PoolsContainer","props","state","isMigPopup","isOldPopup","isConnected","showPopup","staking","name","amount","contract","coin_name","isApprove","showApprove","wallet","address","markets","dea_price","market_cap","total_locked","fully_duilted","stakes","dea_usdc","amounts","dea","newdea","apy","lp","pool","currLp","allowances","stakingLink","liqLink","rewardRatio","deus_eth","deus","isDeusLink","ampl_eth","snx","uni","handleResize","handleScroller","width","window","innerWidth","scrollRef","current","scrollLeft","handleStakeState","setState","SwapState","notify","toast","info","position","POSITION","BOTTOM_RIGHT","success","handlePopup","getTokenAllAmounts","warn","initial","console","log","stakedToken","token","stakeService","then","getStayledNumber","config","parseFloat","getMarketAmounts","a","fetch","resp","json","jresp","apys","marketsResp","market","apyKey","toFixed","key","handleUpdateDEA","setInterval","tokenName","handleStake","lastPopupID","TokenKey","localStorage","getItem","handleApprove","handleClaim","isMigToken","handleWithdraw","handleLP","pair","ethereum","selectedAddress","isMetaMask","isMetamask","setStakingAmount","value","handleConnectWallet","rep","showAddress","substring","length","handleMaxLP","closeOldPopup","bool","handleMigPupop","oldPoolsPupup","className","onClick","href","target","rel","to","React","createRef","document","title","setTimeout","this","addEventListener","removeEventListener","poolsLink","orders","tokens","shadows","classes","Component"],"mappings":"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","file":"static/js/9.26e0828e.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport * as stakeService from '../../services/StakingService'\nimport { getStayledNumber } from '../../utils/utils'\nimport { ToastContainer, toast } from 'react-toastify';\nimport * as config from '../../config';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../styles/scss/pools.css';\nimport StartPool from './StartPool';\nimport Pools from './Pools';\nimport StakePopup from './StakePopup';\nimport Footer from '../common/Footer';\nimport MigrationPopup from './MigrationPopup';\nimport { Link } from 'react-router-dom';\n\n\nclass PoolsContainer extends Component {\n    state = {\n        isMigPopup: false,\n        isOldPopup: false,\n        isConnected: false,\n        showPopup: false,\n        staking: {\n            name: \"\",\n            amount: \"\",\n            contract: \"\",\n            coin_name: \"\",\n            isApprove: true,\n            showApprove: true,\n        },\n        wallet: {\n            address: null,\n        },\n        markets: {\n            dea_price: \"\",\n            market_cap: \"\",\n            total_locked: \"\",\n            fully_duilted: \"\",\n        },\n        stakes: {\n            dea_usdc: {\n                name: \"dea_usdc\",\n                amounts: {\n                    dea: 0,\n                    newdea: 0,\n                    apy: 0,\n                    lp: 0,\n                    pool: 0,\n                    currLp: 0,\n                    allowances: 0,\n                },\n                coin_name: \"UNI-V2-DEA-USDC\",\n                stakingLink: \"0x2e3394d3CdcbaAF2bb85Fe9aB4c79CeF4d28b216\",\n                liqLink: \"https://app.uniswap.org/#/add/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/0x80aB141F324C3d6F2b18b030f1C4E95d4d658778\",\n                rewardRatio: 0,\n            },\n\n            deus_eth: {\n                name: \"deus_eth\",\n                amounts: {\n                    dea: 0,\n                    newdea: 0,\n                    apy: 0,\n                    lp: 0,\n                    pool: 0,\n                    currLp: 0,\n                    allowances: 0,\n                },\n                coin_name: \"UNI-V2-DEUS/ETH\",\n                stakingLink: \"0x19945547eC934bBD8C48fA69bC78152C468CCA7a\",\n                liqLink: \"https://app.uniswap.org/#/add/ETH/0x3b62F3820e0B035cc4aD602dECe6d796BC325325\",\n                rewardRatio: 0,\n            },\n\n            deus: {\n                name: \"deus\",\n                amounts: {\n                    dea: 0,\n                    newdea: 0,\n                    apy: 0,\n                    lp: 0,\n                    pool: 0,\n                    currLp: 0,\n                    allowances: 0,\n                },\n                isDeusLink: true,\n                coin_name: \"DEUS\",\n                stakingLink: \"0x15Cd5DDB1ca1A2B87B17e4fc728d904A5B43D246\",\n                liqLink: \"/swap\",\n                rewardRatio: 0,\n            },\n\n            ampl_eth: {\n                name: \"ampl_eth\",\n                amounts: {\n                    dea: 0,\n                    newdea: 0,\n                    apy: 0,\n                    lp: 0,\n                    pool: 0,\n                    currLp: 0,\n                    allowances: 0,\n                },\n\n                coin_name: \"UNI-V2-AMPL-ETH\",\n                stakingLink: \"0xa3bE45e9F6c42e06231618cf45be1AB9625A591f\",\n                liqLink: \"https://app.uniswap.org/#/add/ETH/0xd46ba6d942050d489dbd938a2c909a5d5039a161\",\n                rewardRatio: 0,\n            },\n            snx: {\n                name: \"snx\",\n                amounts: {\n                    dea: 0,\n                    newdea: 0,\n                    apy: 0,\n                    lp: 0,\n                    pool: 0,\n                    currLp: 0,\n                    allowances: 0,\n                },\n                coin_name: \"SNX\",\n                stakingLink: \"0x1B043BbB372452d71503E6603Dd33b93271Bfec0\",\n                liqLink: \"https://app.uniswap.org/#/swap?outputCurrency=0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f\",\n                rewardRatio: 0,\n            },\n            uni: {\n                name: \"uni\",\n                amounts: {\n                    dea: 0,\n                    newdea: 0,\n                    apy: 0,\n                    lp: 0,\n                    pool: 0,\n                    currLp: 0,\n                    allowances: 0,\n                },\n                coin_name: \"UNI\",\n                stakingLink: \"0x8cd408279e966b7e7e1f0b9e5ed8191959d11a19\",\n                liqLink: \"https://app.uniswap.org/#/swap?outputCurrency=0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\",\n                rewardRatio: 0,\n            },\n        },\n    }\n\n    constructor(props) {\n        super(props);\n        // create a ref to store the textInput DOM element\n        this.scrollRef = React.createRef();\n    }\n\n    componentDidMount() {\n        document.title = 'DEUS staking';\n        setTimeout(() => this.isConnected(), 1000);\n        setTimeout(() => this.handleScroller(), 100);\n        this.handleUpdateDEA()\n        this.getMarketAmounts()\n        setInterval(() => this.getMarketAmounts(), 40000)\n        window.addEventListener('resize', this.handleResize)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize)\n    }\n\n    handleResize = () => this.handleScroller()\n\n    handleScroller = () => {\n        const width = (2300 - window.innerWidth) / 2\n        if (this.scrollRef.current) {\n            this.scrollRef.current.scrollLeft = width\n        }\n    }\n\n\n    handleStakeState = (state) => {\n        if (state === \"receipt\" || state === \"error\") {\n            this.setState({ SwapState: null })\n            this.notify(state)\n            return\n        }\n        this.notify(state)\n    }\n\n    notify = (state) => {\n        const { staking } = this.state\n\n        switch (state) {\n            case \"waiting\": {\n                toast.info(\"Waiting for Metamask confirmation.\", {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                });\n                break\n            }\n            case \"transactionHash\": {\n                toast.info(\"Transaction broadcasted.\", {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                });\n                break\n            }\n            case \"receipt\": {\n                toast.success(\"Transaction Successful.\", {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                });\n                if (staking.isApprove) {\n                    staking.isApprove = false\n                    this.setState({ staking })\n                } else {\n                    this.handlePopup(staking.name, false)\n                }\n                this.getTokenAllAmounts(staking.name)\n                break\n            }\n            case \"connectWallet\": {\n                toast.warn(\"Please Connect Wallet.\", {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                });\n                break\n            }\n            case \"error\": {\n                toast.warn(\"Transaction Failed.\", {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                });\n                break\n            }\n            default: {\n                toast.info(\"Unhandled Event.\", {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                });\n            }\n        }\n    };\n\n    initial = () => {\n        console.log(\"initial called\");\n        const { stakes } = this.state\n        for (const stakedToken in stakes) {\n            this.getTokenAllAmounts(stakedToken)\n        }\n    }\n\n\n    getTokenAllAmounts = (stakedToken) => {\n        console.log(\"initial called for \\t\" + stakedToken);\n        const { stakes } = this.state\n        const token = stakes[stakedToken]\n        stakeService.getNumberOfStakedTokens(token.name).then((amount) => {\n            token.amounts.lp = getStayledNumber(amount)\n            this.setState({ stakes })\n\n            stakeService.getTotalStakedToken(token.name).then((amount) => {\n                token.amounts.pool = token.amounts.lp === \"0\" || amount === \"0\" ? 0 : (token.amounts.lp / amount) * 100\n                this.setState({ stakes })\n\n                stakeService.getNumberOfPendingRewardTokens(token.name).then((amount) => {\n                    token.amounts.dea = getStayledNumber(amount)\n                    token.rewardRatio = token.amounts.pool * config.FixedRatio / 100\n                    token.amounts.newdea = getStayledNumber(parseFloat(amount) + (config.ClaimableDuration / config.UpdateDuration) * token.rewardRatio * 0.89539)\n                    this.setState({ stakes })\n                })\n            })\n        })\n        stakeService.getUserWalletStakedTokenBalance(token.name).then((amount) => {\n            token.amounts.currLp = getStayledNumber(amount)\n            this.setState({ stakes })\n        })\n        stakeService.getAllowances(token.name).then((amount) => {\n            // console.log(amount);\n            token.amounts.allowances = getStayledNumber(amount)\n            this.setState({ stakes })\n        })\n    }\n\n\n    getMarketAmounts = async () => {\n        try {\n            const { stakes, markets } = this.state\n            const resp = await fetch(\"https://app.deus.finance/static-api.json\")\n            const jresp = await resp.json()\n            const apys = jresp.apy\n            const marketsResp = jresp.market\n            for (const apyKey in apys) {\n                if (!stakes[apyKey]) continue\n                stakes[apyKey].amounts.apy = parseFloat(apys[apyKey]).toFixed(2)\n            }\n            for (const key in marketsResp) {\n                markets[key] = parseFloat(marketsResp[key])\n            }\n            this.setState({ stakes })\n        } catch (error) {\n            console.log(\" get Market Amounts had some error\", error);\n        }\n    }\n\n\n    handleUpdateDEA = () => setInterval(() => {\n        const { stakes } = this.state\n        for (const tokenName in stakes) {\n            const token = stakes[tokenName]\n            stakeService.getNumberOfPendingRewardTokens(token.name).then((amount) => {\n                token.amounts.dea = getStayledNumber(parseFloat(amount))\n                token.amounts.newdea = getStayledNumber(parseFloat(amount) + (config.ClaimableDuration / config.UpdateDuration) * token.rewardRatio * 0.89539)\n                this.setState({ stakes })\n            })\n        }\n    }, (config.ClaimableDuration) * 1000)\n\n\n    handleStake = () => {\n        const { staking } = this.state\n        console.log(staking.amount);\n        stakeService.stake(staking.name, staking.amount, this.handleStakeState)\n    }\n\n\n    lastPopupID = (TokenKey) => {\n        return localStorage.getItem(TokenKey);\n    }\n\n\n    handleApprove = () => {\n        const { staking } = this.state\n        console.log(staking.amount);\n        stakeService.approve(staking.name, staking.amount, this.handleStakeState)\n    }\n\n    handleClaim = (stakedToken) => {\n        stakeService.withdraw(stakedToken, 0, this.handleStakeState)\n        const { staking } = this.state\n        staking.name = stakedToken\n        this.setState({ staking })\n        console.log(\"0 handleClaim clicked\")\n    }\n\n    isMigToken = (stakedToken) => {\n        return stakedToken === \"ampl_eth\" || stakedToken === \"uni\" || stakedToken === \"snx\" ? true : false\n    }\n\n\n    handleWithdraw = (stakedToken, amount) => {\n        console.log(\"withdraw\" + amount);\n        const { staking } = this.state\n        staking.name = stakedToken\n        this.setState({ staking })\n        stakeService.withdraw(stakedToken, amount, this.handleStakeState)\n    }\n\n\n    handleLP = (pair) => {\n        console.log(pair + \" handleLP clicked\");\n    }\n\n\n    isConnected = () => {\n        if (window.ethereum) {\n            if (window.ethereum.selectedAddress) {\n                const { wallet } = this.state\n                wallet.address = window.ethereum.selectedAddress\n                this.setState({ wallet, isConnected: true })\n                this.handleScroller()\n            }\n            if (window.ethereum.isMetaMask) {\n                this.setState({ isMetamask: true })\n            }\n        }\n        this.initial()\n    }\n\n\n    setStakingAmount = (value) => {\n        const { staking } = this.state\n        staking.amount = value\n        this.setState({ staking })\n    }\n\n\n    handleConnectWallet = async () => {\n        try {\n            const rep = await stakeService.connectWallet(() => console.log(\"connected\"))\n            console.log(rep ? \"connected to metamask\" : \"\");\n            this.isConnected()\n        } catch (error) {\n            console.log(\"didnt connect to metamask \\t\" + error);\n        }\n    }\n    showAddress = () => {\n        const { address } = this.state.wallet\n        return address.substring(0, 6) + \"...\" + address.substring(address.length - 4, address.length)\n    }\n\n    handleMaxLP = (amount) => {\n        const { staking } = this.state\n        staking.amount = amount\n        this.setState({ staking })\n    }\n    closeOldPopup = () => {\n        this.setState({ isOldPopup: false })\n    }\n\n\n\n    handlePopup = (stakedToken, bool) => {\n        console.log(stakedToken);\n        if (this.isMigToken(stakedToken)) {\n            this.setState({ isOldPopup: true })\n            return\n        }\n        const { staking } = this.state\n        const token = this.state.stakes[stakedToken]\n        if (bool) {\n            staking.contract = \"\" + token.stakingLink\n            staking.coin_name = token.coin_name\n            this.getTokenAllAmounts(stakedToken)\n            staking.isApprove = token.amounts.allowances > 100000 ? false : true\n            staking.showApprove = token.amounts.allowances > 100000 ? false : true\n            staking.name = stakedToken\n        }\n        staking.amount = \"\"\n        this.setState({ showPopup: bool, staking })\n    }\n\n    handleMigPupop = (bool) => {\n        this.setState({ isMigPopup: bool })\n    }\n\n    oldPoolsPupup = <div className=\"old-pools-popup\">\n        <div className=\"popup-wrap\">\n            <div className=\"close-btn\" onClick={this.closeOldPopup}>x</div>\n            <div className=\"title\">We migrated to new pools!</div>\n            <div className=\"btns-wrap\">\n                <a className=\"btns\" href=\"https://t.me/deusfinance\" target=\"_blank\" rel=\"noopener noreferrer\">discuss this in telegram</a>\n                <Link to=\"/staking\" className=\"btns\">show me the new pools</Link>\n            </div>\n        </div>\n    </div>\n\n    render() {\n        const { isConnected, stakes, staking, showPopup, isMigPopup, isOldPopup, markets } = this.state\n        const orders = {\n            tokens: [\"dea_usdc\", \"deus_eth\", \"deus\", \"ampl_eth\", \"snx\", \"uni\"],\n            shadows: [\"blue-200-shadow\", \"yellow-400-shadow\", \"blue-200-shadow\", \"yellow-400-shadow\", \"yellow-300-shadow\", \"blue-200-shadow\"],\n        }\n        const poolsLink = <Link to=\"/staking\" className=\"pool-link\" > new pools</Link>\n\n        return (<>\n            <div>\n                {isOldPopup ? this.oldPoolsPupup : \"\"}\n            </div>\n            <MigrationPopup isMigPopup={isMigPopup} handleMigPupop={this.handleMigPupop} />\n            <ToastContainer />\n            <StakePopup\n                showPopup={showPopup}\n                staking={staking}\n                stakes={stakes}\n                handlePopup={this.handlePopup}\n                handleMaxLP={this.handleMaxLP}\n                setStakingAmount={this.setStakingAmount}\n                handleApprove={this.handleApprove}\n                handleStake={this.handleStake}\n            />\n            <StartPool isConnected={isConnected} handleConnectWallet={this.handleConnectWallet} />\n            <Pools\n                markets={markets}\n                stakes={stakes}\n                isConnected={isConnected}\n                scrollRef={this.scrollRef}\n                handleScroller={this.handleScroller}\n                handleConnectWallet={this.handleConnectWallet}\n                showAddress={this.showAddress}\n                handlePopup={this.handlePopup}\n                handleClaim={this.handleClaim}\n                handleLP={this.handleLP}\n                orders={orders}\n                handleWithdraw={this.handleWithdraw}\n                poolsLink={poolsLink}\n            />\n            <Footer classes=\"social\" />\n        </>);\n    }\n}\n\nexport default PoolsContainer;\n"],"sourceRoot":""}